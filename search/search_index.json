{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Security Of OpenFlow: Reading List OF\u4ea4\u6362\u673a\u6d41\u8868\u5b89\u5168 W. Feng et al.: \"MEM: A Multi-Staged Eviction Mechanism of Flowtable for Software-Defined Datacenters,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 2020, pp. flow entries \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eSDDC\u6d41\u91cf\u7279\u6027\u7684\u6d41\u8868\u591a\u7ea7\u9a71\u9010\u673a\u5236\uff08MEM\uff09\uff0c\u5176\u4e2d\u5305\u62ec\u5206\u7c7b\uff0c\u8bc6\u522b\u548c\u9a71\u9010\u9636\u6bb5\u3002\u6839\u636e\u6d41\u7684\u6301\u4e45\u72b6\u6001\u548c\u57fa\u672c\u7edf\u8ba1\u4fe1\u606f\u5bf9\u6d41\u6761\u76ee\u8fdb\u884c\u4e24\u6b21\u5206\u7c7b\u3002\u7136\u540e\uff0c\u5f15\u5165\u4e00\u4e2a\u79f0\u4e3a\u81ea\u52a8\u56de\u5f52\u79fb\u52a8\u5e73\u5747\u7ebf\uff08ARMA\uff09\u7684\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u6a21\u578b\uff0c\u4ee5\u9884\u6d4b\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\u6d41\u6761\u76ee\u7684\u672a\u6765\u72b6\u6001\u3002\u6700\u540e\uff0c\u9884\u6d4b\u51fa\u7684\u6700\u8fd1\u672a\u4f7f\u7528\u7684\u6d41\u6761\u76ee\u5c06\u88ab\u9a71\u9010\u4ee5\u51cf\u8f7b\u6d41\u8868\u5b58\u50a8\u4e0a\u7684\u538b\u529b\u3002 C. Zhang et al.: \"Admission control in software-defined datacenter network in view of flow table capacity,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Honolulu, HI, 2018, pp. flow entries SDN\u4ea4\u6362\u673a\u7684\u529f\u80fd\u8584\u5f31\uff0c\u4f8b\u5982\u6d41\u8868\u5bb9\u91cf\uff0c\u7ed9\u57fa\u4e8eOpenFlow\u7684SDN\u7684\u53ef\u4f38\u7f29\u6027\u5e26\u6765\u4e86\u6311\u6218\u3002\u8003\u8651\u5230\u4ea4\u6362\u673a\u7684\u6d41\u8868\u5bb9\u91cf\uff0c\u5f53\u524d\u6d41\u8868\u5bb9\u91cf\u548c\u6570\u636e\u4e2d\u5fc3\u6240\u9700\u6d41\u6761\u76ee\u6570\u91cf\u4e4b\u95f4\u7684\u5de8\u5927\u5dee\u8ddd\u9700\u8981\u4e00\u79cd\u65b0\u9896\u7684\u63a5\u7eb3\u63a7\u5236\u673a\u5236\uff0c\u800c\u4e0d\u662f\u50cf\u4f20\u7edf\u7f51\u7edc\u90a3\u6837\u4ec5\u8003\u8651\u94fe\u8def\u5bb9\u91cf\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u63a7\u5236\u5668\u7ea7\u522b\u51c6\u5165\u63a7\u5236\u673a\u5236\uff0c\u5e76\u4f7f\u7528\u89c4\u8303\u7684\u4e09\u5c42\u6570\u636e\u4e2d\u5fc3\u62d3\u6251\u57fa\u4e8e\u6570\u503c\u6a21\u62df\u7ed3\u679c\u8bc4\u4f30\u4e86\u5176\u6709\u6548\u6027\u3002 G. Shen et al.: \"How Powerful Switches Should be Deployed: A Precise Estimation Based on Queuing Theory,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. flow entries SDN\u5bf9\u8bb8\u591a\u4f20\u7edf\u7684\u6570\u636e\u4e2d\u5fc3\u7f51\u7edc\uff08DCN\uff09\u8fdb\u884c\u4e86\u5347\u7ea7\uff0c\u4ee5\u63d0\u9ad8\u94fe\u8def\u5229\u7528\u7387\u548c\u7ba1\u7406\u7075\u6d3b\u6027\uff0c\u4f46\u662f\u5b83\u4eec\u7f3a\u4e4f\u9009\u62e9\u5177\u6709\u9002\u5f53\u6d41\u8868\u7a7a\u95f4\u7684\u4ee3\u7528SDN\u4ea4\u6362\u673a\u4ee5\u5b9e\u73b0\u5177\u6709\u6210\u672c\u6548\u76ca\u548c\u8282\u80fd\u7f51\u7edc\u7684\u8bf4\u660e\u3002\u672c\u6587\u586b\u8865\u4e86\u57fa\u4e8e\u6392\u961f\u8bba\u89e3\u51b3\u6d41\u8868\u7a7a\u95f4\u4f30\u8ba1\u95ee\u9898\u7684\u7a7a\u767d\u3002\u9996\u5148\uff0c\u5c06\u6d41\u8868\u6761\u76ee\u7684\u751f\u5b58\u8fc7\u7a0b\u5206\u4e3a\u5165\u5305\u8fc7\u7a0b\uff0c\u5904\u7406\u8fc7\u7a0b\u548c\u670d\u52a1\u8fc7\u7a0b\uff0c\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6392\u961f\u7cfb\u7edf\uff0c\u4ee5\u4f30\u8ba1\u6700\u5c11\u6570\u91cf\u7684SDN\u4ea4\u6362\u673a\u6d41\u8868\u6761\u76ee\u3002\u7b2c\u4e8c\uff0c\u5206\u6790DCN\u7684\u6d41\u91cf\u5206\u5e03\uff0c\u4ee5\u8ba1\u7b97\u6a21\u578b\u4e2d\u7684\u5173\u952e\u53c2\u6570\u3002\u7b2c\u4e09\uff0c\u57fa\u4e8eDCN\u4e2d\u7ed3\u6784\u5316\u62d3\u6251\u7684\u672c\u8d28\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u8def\u7531\u7b56\u7565\u7684\u6982\u7387\u6a21\u578b\uff0c\u4ee5\u91cf\u5316\u8def\u5f84\u9009\u62e9\u7684\u5f71\u54cd\u3002 B. Zhao et al.: \"Efficient and Consistent TCAM Updates,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. flow entries \u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\u7684\u52a8\u6001\u6027\u8d28\u8981\u6c42\u9891\u7e41\u66f4\u65b0\u4ea4\u6362\u673a\u6570\u636e\u5e73\u9762\u4e2d\u7684\u6d41\u8868\u3002\u73b0\u6709\u7684\u73b0\u6210\u4ea4\u6362\u673a\u6279\u91cf\u66f4\u65b0\u89c4\u5219\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u662f\u5728\u6279\u91cf\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u8f6c\u53d1\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u672c\u6587\u8bbe\u8ba1\u548c\u8bc4\u4f30\u4e86\u4e00\u4e2aTCAM\u66f4\u65b0\u4f18\u5316\u6846\u67b6\uff0c\u8be5\u6846\u67b6\u53ef\u4ee5\u5728\u4f7f\u7528\u5206\u5c42TCAM\u7ed3\u6784\u7684\u540c\u65f6\u4fdd\u8bc1\u6574\u4e2a\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u7684\u4e00\u81f4\u8f6c\u53d1\u3002\u6b64\u65b9\u6cd5\u57fa\u4e8e\u4fee\u6539\u540e\u7684\u6761\u76ee\u4f18\u5148\u5199\u56de\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u53ef\u663e\u7740\u51cf\u5c11TCAM\u6761\u76ee\u79fb\u52a8\u5e26\u6765\u7684\u5f00\u9500\u3002\u8fd8\u53ef\u4ee5\u68c0\u6d4b\u5230\u91cd\u65b0\u6392\u5e8f\u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u8fdb\u884c\u5904\u7406\u3002 Garegin Grigoryan et al.: 2018. PFCA: a programmable FIB caching architecture. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 97\u2013103. openflow TCAM\u6602\u8d35\u4e14\u8017\u80fd\u3002\u6b64\u5916\uff0cFIB\u7684\u6301\u7eed\u589e\u957f\u53ef\u80fd\u4f1a\u5bfc\u81f4TCAM\u6ea2\u51fa\u95ee\u9898\u3002\u7136\u800c\uff0c\u53ea\u6709\u4e00\u5c0f\u90e8\u5206FIB\u6761\u76ee\u627f\u8f7d\u4e86\u5927\u90e8\u5206\u7f51\u7edc\u6d41\u91cf\u3002\u56e0\u6b64\uff0cFIB\u7f13\u5b58\uff0c\u5373\u5728\u5feb\u901f\u5b58\u50a8\u5668\uff08\u4f8b\u5982TCAM\uff09\u4e2d\u5b89\u88c5\u6700\u6d41\u884c\u7684\u6761\u76ee\uff0c\u53ef\u80fd\u4f1a\u5927\u5927\u51cf\u5c11TCAM\u7684\u4f7f\u7528\u3002\u5728\u504f\u8bba\u6587\u4e2d\uff0c\u5229\u7528\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u6982\u5ff5\u6765\u8bbe\u8ba1\u5177\u6709\u4e24\u7ea7\u7f13\u5b58\u7684\u53ef\u7f16\u7a0bFIB\u7f13\u5b58\u4f53\u7cfb\u7ed3\u6784\uff08PFCA\uff09\u3002\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u7ba1\u9053\u7684\u7b97\u6cd5\u6765\u68c0\u6d4b\u7f13\u5b58\u4e2d\u7528\u4e8e\u9a71\u9010\u53d7\u5bb3\u8005\u7684\u6700\u4e0d\u6d41\u884c\u7684\u524d\u7f00\u3002 N. Huang et al.: \"Software-Defined Label Switching: Scalable Per-Flow Control in SDN,\" 2018 IEEE/ACM 26th International Symposium on Quality of Service (IWQoS), Banff, AB, Canada, 2018, pp. openflow \u4e3a\u4fdd\u7559\u6570\u636e\u5e73\u9762\u53ef\u4f38\u7f29\u6027\u7684\u540c\u65f6\u5b9e\u73b0\u6bcf\u6d41\u63a7\u5236\u3002\u73b0\u6709\u7684SDN\u67b6\u6784\u65e0\u6cd5\u6709\u6548\u5730\u5b9e\u73b0\u6bcf\u6d41\u63a7\u5236\uff1a\u5b83\u4eec\u8981\u4e48\u5bfc\u81f4\u6570\u636e\u5305\u7684\u989d\u5916\u5ef6\u8fdf\uff0c\u8981\u4e48\u7ed9\u4ea4\u6362\u673a\u5e26\u6765\u9ad8\u5b58\u50a8\u8d1f\u62c5\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u8f6f\u4ef6\u5b9a\u4e49\u7684\u6807\u7b7e\u4ea4\u6362\uff08SDLS\uff09\uff0c\u4ee5\u5b9e\u73b0\u6570\u636e\u5e73\u9762\u53ef\u6269\u5c55\u6027\u548c\u6309\u6d41\u63a7\u5236\u3002SDLS\u5c06\u4e2d\u592e\u63a7\u5236\u4e0e\u6807\u7b7e\u5207\u6362\u76f8\u7ed3\u5408\uff0c\u4ee5\u51cf\u8f7b\u5b58\u50a8\u8d1f\u62c5\uff0c\u540c\u65f6\u4fdd\u6301\u6bcf\u6d41\u63a7\u5236\u3002SDLS\u5c06\u8f6f\u4ef6\u4ea4\u6362\u673a\u5f15\u5165\u6570\u636e\u5e73\u9762\uff0c\u5e76\u5728\u533a\u57df\u4e2d\u7ba1\u7406\u7f51\u7edc\u4ee5\u5b9e\u73b0\u53ef\u4f38\u7f29\u6027\u3002SDLS\u4e0eOpenFlow\u517c\u5bb9\uff0c\u5e76\u91c7\u7528\u6df7\u5408\u6570\u636e\u5e73\u9762\u6765\u63d0\u4f9b\u6709\u6548\u7684\u6d41\u8bbe\u7f6e\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660eSDLS\u53ef\u4ee5\u5728\u5ef6\u8fdf\u6027\u80fd\u65b9\u9762\u8fbe\u5230\u6700\u4f73\uff0c\u540c\u65f6\u5c06\u6d41\u6761\u76ee\u548c\u6ea2\u51fa\u7684\u6570\u91cf\u51cf\u5c11\u4e8647\uff05\u4ee5\u4e0a\u3002 H. Xu et al.: \"Lightweight Flow Distribution for Collaborative Traffic Measurement in Software Defined Networks,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. flow entries \u6d41\u91cf\u7ea7\u522b\u7684\u7ec6\u7c92\u5ea6\u6d41\u91cf\u6d4b\u91cf\u4e2d\uff0c\u7531\u4e8e\u57fa\u4e8eTCAM\u7684\u6d41\u6761\u76ee\u4ec5\u63d0\u4f9b\u805a\u5408\u7684\u6d41\u91cf\u7edf\u8ba1\u4fe1\u606f\uff0c\u56e0\u6b64\u5148\u524d\u7684\u7814\u7a76\u5efa\u8bae\u5728SRAM\u4e2d\u6267\u884c\u6d41\u7ea7\u522b\u7684\u6d4b\u91cf\uff0c\u5e76\u901a\u8fc7\u534f\u4f5c\u6d41\u91cf\u6d4b\u91cf\u6765\u5e73\u8861\u6574\u4e2a\u7f51\u7edc\u4e0a\u7684\u6d4b\u91cf\u8d1f\u8f7d\u3002\u534f\u4f5c\u6d4b\u91cf\u7684\u5173\u952e\u95ee\u9898\u662f\u63d0\u4f9b\u4e00\u79cd\u5c06\u6d41\u91cf\u5206\u914d\u5230\u4ea4\u6362\u673a\u7684\u673a\u5236\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u4ea4\u6362\u673a\u90fd\u53ef\u4ee5\u6807\u8bc6\u8981\u6d4b\u91cf\u7684\u6d41\u91cf\u5b50\u96c6\u3002\u5148\u524d\u7684\u5de5\u4f5c\u96c6\u4e2d\u5728\u4f18\u5316\u4ea4\u6362\u673a\u4e4b\u95f4\u7684\u6d41\u5206\u914d\u4e0a\uff0c\u4f46\u662f\u5ffd\u7565\u4e86\u5b83\u4eec\u5f15\u5165\u6570\u636e\u5e73\u9762\u7684\u9ad8\u7a7a\u95f4\u548c\u6309\u6570\u636e\u5305\u5904\u7406\u7684\u5f00\u9500\uff0c\u8fd9\u5728\u5927\u578bSDN\u7cfb\u7edf\u4e2d\u6210\u4e3a\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8f7b\u91cf\u7ea7\u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u6d41\u91cf\u5206\u914d\u95ee\u9898\u3002\u5b83\u9075\u5faa\u901a\u8fc7\u6700\u5c0f\u5316\u6570\u636e\u5e73\u9762\u7a7a\u95f4\u548c\u5904\u7406\u5f00\u9500\u6765\u51cf\u8f7b\u6570\u636e\u5e73\u9762\u590d\u6742\u6027\u7684\u8bbe\u8ba1\u539f\u7406\u3002\u5728\u63a7\u5236\u5e73\u9762\u4e0a\uff0c\u5c06\u6d41\u91cf\u5206\u914d\u516c\u5f0f\u5316\u4e3a\u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u4f18\u5316\u95ee\u9898\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u901a\u8fc7\u8fb9\u7f18\u4ea4\u6362\u673a\u548c\u8fb9\u7f18/\u6838\u5fc3\u4ea4\u6362\u673a\u4e00\u8d77\u5b9e\u65bd\u534f\u4f5c\u6d4b\u91cf\u3002\u4eff\u771f\u8868\u660e\uff0c\u4e0e\u73b0\u6709\u6700\u597d\u7684\u5de5\u4f5c\u76f8\u6bd4\uff0c\u6240\u63d0\u51fa\u7684\u8f7b\u91cf\u7ea7\u89e3\u51b3\u65b9\u6848\u5728\u8d1f\u8f7d\u5e73\u8861\u65b9\u9762\u8fbe\u5230\u4e86\u53ef\u6bd4\u7684\u6027\u80fd\uff0c\u540c\u65f6\u5927\u5927\u51cf\u5c11\u4e86\u7a7a\u95f4\u5f00\u9500\u548c\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5904\u7406\u5f00\u9500\uff0c\u4f7f\u5176\u5728\u5b9e\u9645\u7cfb\u7edf\u4e2d\u66f4\u52a0\u5b9e\u7528\uff0c\u5bf9\u6d41\u91cf\u5206\u914d\u6240\u5e26\u6765\u7684\u989d\u5916\u5f00\u9500\u5f88\u654f\u611f\u3002 G. Zhao et al.: \"HiFi: Hybrid Rule Placement for Fine-Grained Flow Management in SDNs,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. \u5728\u672c\u6587\u4e2d\uff0c\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86HiFi\uff0c\u8be5\u7cfb\u7edf\u53ef\u901a\u8fc7\u6700\u5c11\u7684\u6d41\u6761\u76ee\u6570\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u7ba1\u7406\u3002\u4e3a\u6b64\uff0cHiFi\u91c7\u7528\u4e24\u6b65\u65b9\u6cd5\uff1a\u901a\u914d\u7b26\u6761\u76ee\u5b89\u88c5\u548c\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u7cbe\u786e\u5339\u914d\u6761\u76ee\u5b89\u88c5\u3002\u4f46\u662f\uff0c\u5982\u4f55\u6700\u4f73\u5730\u5b89\u88c5\u901a\u914d\u7b26\u548c\u5b8c\u5168\u5339\u914d\u6d41\u6761\u76ee\u662f\u5f88\u68d8\u624b\u7684\u3002\u56e0\u6b64\uff0cHiFi\u7528\u6709\u754c\u56e0\u7d20\u7684\u8fd1\u4f3c\u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u5e76\u4ee5\u6848\u4f8b\u7814\u7a76\u7684\u65b9\u5f0f\u8003\u8651\u5982\u4f55\u901a\u8fc7\u7ec6\u7c92\u5ea6\u7684\u6d41\u91cf\u7ba1\u7406\u5b9e\u73b0\u7f51\u7edc\u8303\u56f4\u7684\u8d1f\u8f7d\u5e73\u8861\u3002\u5b9e\u9a8c\u548c\u4eff\u771f\u7ed3\u679c\u5747\u8868\u660e\uff0c\u4e0e\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u6700\u65b0\u65b9\u6cd5\u76f8\u6bd4\uff0cHiFi\u53ef\u4ee5\u5c06\u6240\u9700\u6d41\u6761\u76ee\u7684\u6570\u91cf\u51cf\u5c11\u7ea645\uff05-69\uff05\uff0c\u5e76\u5c06\u63a7\u5236\u5f00\u9500\u51cf\u5c1128\uff05-50\uff05\u3002 C. He et al.: \"POMP: Protocol Oblivious SDN Programming with Automatic Multi-Table Pipelining,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications, Honolulu, HI, 2018, pp. POMP\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u540c\u65f6\u652f\u6301\u534f\u8bae\u9057\u5fd8\u8f6c\u53d1\u548c\u81ea\u52a8\u591a\u8868\u6d41\u6c34\u7ebf\u64cd\u4f5c\u7684SDN\u7f16\u7a0b\u73af\u5883\u3002POMP\u5e94\u7528\u9759\u6001\u6c61\u70b9\u5206\u6790\u6280\u672f\u4ece\u7a0b\u5e8f\u5458\u7f16\u5199\u7684\u6570\u636e\u5e73\u9762\u4e0d\u53ef\u77e5\u7f51\u7edc\u7b56\u7565\u81ea\u52a8\u63a8\u65ad\u7d27\u51d1\u9ad8\u6548\u7684\u591a\u8868\u7ba1\u9053\u3002\u8fd0\u884c\u65f6\u7cfb\u7edf\u8ddf\u8e2a\u7f51\u7edc\u7b56\u7565\u7684\u6267\u884c\uff0c\u5e76\u81ea\u52a8\u751f\u6210\u8868\u6761\u76ee\u3002POMP\u5728\u6c61\u70b9\u5206\u6790\u4e2d\u8fd8\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u4f9d\u8d56\u6807\u7b7e\u6982\u5ff5\uff0c\u8be5\u6982\u5ff5\u4e0e\u7f51\u7edc\u7b56\u7565\u7684\u8fd0\u884c\u65f6\u4fe1\u606f\u76f8\u7ed3\u5408\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c11\u8868\u9879\u7684\u6570\u91cf\u3002\u4e0eP4\u4e00\u6837\uff0cPOMP\u901a\u8fc7\u63d0\u4f9b\u7f51\u7edc\u534f\u8bae\u89c4\u8303\u8bed\u8a00\u6765\u652f\u6301\u534f\u8bae\u65e0\u5173\u7684\u7f16\u7a0b\u3002\u53ef\u4ee5\u6839\u636e\u534f\u8bae\u89c4\u8303\u81ea\u52a8\u751f\u6210\u6570\u636e\u5305\u89e3\u6790\u5668\u3002POMP\u652f\u6301\u4e24\u4e2a\u4e3b\u8981\u7684\u65b0\u5174SDN\u5e73\u53f0POF\u548cP4\uff0c\u56e0\u6b64\uff0c\u7528POMP\u7f16\u5199\u7684\u7f51\u7edc\u7b56\u7565\u53ef\u4ee5\u5728\u652f\u6301POF\u6216P4\u7684\u4efb\u4f55\u4ea4\u6362\u673a\u4e0a\u79fb\u690d\u3002\u53ef\u4ee5\u6839\u636e\u534f\u8bae\u89c4\u8303\u81ea\u52a8\u751f\u6210\u6570\u636e\u5305\u89e3\u6790\u5668\u3002 M. Yu et al.: \"Flow Table Security in SDN: Adversarial Reconnaissance and Intelligent Attacks,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. \u672c\u7bc7\u63d0\u51fa\u4e86\u4e00\u79cd\u9488\u5bf9openflow \u6d41\u8868\u7684\u667a\u80fd\u653b\u51fb\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5229\u7528\u6d41\u8868\u7684\u7279\u5b9a\u4e8e\u9ad8\u901f\u7f13\u5b58\u7684\u884c\u4e3a\u6765\u63a8\u65ad\u5176\u5185\u90e8\u914d\u7f6e\u548c\u72b6\u6001\uff0c\u7136\u540e\u76f8\u5e94\u5730\u8bbe\u8ba1\u653b\u51fb\u53c2\u6570\u3002 Q. Li.:Security Policy Violations in SDN Data Plane,TON,2018 Keywords: SDN, data plane, policy violation SDN\u5229\u7528\u96c6\u4e2d\u5f0f\u63a7\u5236\u5668\u5c06\u6570\u636e\u5305\u5904\u7406\u89c4\u5219\u5206\u53d1\u5230\u7f51\u7edc\u4ea4\u6362\u673a\u3002\u4f46\u662f\uff0c\u89c4\u5219\u901a\u5e38\u662f\u7531\u4e0d\u540c\u7ec4\u7ec7\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\u751f\u6210\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u80fd\u5728\u6570\u636e\u5e73\u9762\u4e2d\u76f8\u4e92\u51b2\u7a81\u5e76\u5bfc\u81f4\u8fdd\u53cd\u5b89\u5168\u89c4\u5219\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5bf9SDN\u4e2d\u7684\u89c4\u5219\u51b2\u7a81\u95ee\u9898\u8fdb\u884c\u5206\u6790\uff0c\u5e76\u53d1\u73b0\u4e86\u7531\u4e8e\u89c4\u5219\u51b2\u7a81\u800c\u5f15\u8d77\u7684\u65b0\u7684\u9690\u853d\u901a\u9053\u653b\u51fb\u3002\u6700\u540e\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u79d8\u5bc6\u901a\u9053\u9632\u5fa1CCD\uff0c\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cCCD\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u548c\u89e3\u51b3\u89c4\u5219\u51b2\u7a81\u6765\u9632\u6b62\u79d8\u5bc6\u901a\u9053\u653b\u51fb\u3002 \u7f51\u7edc\u67b6\u6784\u5b89\u5168\uff0c\u68c0\u6d4b\uff0c\u6545\u969c\u6062\u590d Arjun Roy et al.: 2018. Cloud Datacenter SDN Monitoring: Experiences and Challenges. In Proceedings of the Internet Measurement Conference 2018 ( IMC \u201918 ). Association for Computing Machinery, New York, NY, USA, 464\u2013470. keyword\uff1aNetwork measurement; Cloud computing; Network monitoring; \u8fd9\u7bc7\u8bba\u6587\u9762\u5bf9\u4e91\u8ba1\u7b97\u6570\u636e\u4e2d\u5fc3\u7684\u7f51\u7edc\u67b6\u6784\u6240\u9700\u8981\u7684\u5feb\u901f\u68c0\u6d4b\u548c\u7f13\u89e3\u67b6\u6784\u6545\u969c\u95ee\u9898\uff0c\u63cf\u8ff0\u4e86\u6784\u5efa\u76f8\u5e94\u7684\u57fa\u4e8e\u4e91\u7684\u6545\u969c\u76d1\u63a7\u7cfb\u7edf\u6240\u9762\u4e34\u7684\u6311\u6218\uff0c\u5e76\u9610\u660e\u4e86\u865a\u62df\u5316\u67b6\u6784\u4e0b\u5bf9\u6570\u636e\u4e2d\u5fc3\u6545\u969c\u7ba1\u7406\u7684\u5f71\u54cd\uff0c\u7ed3\u8bba\u663e\u793a\uff0c\u865a\u62df\u5316\uff0c\u79df\u6237\u8f6f\u4ef6\u548c\u7f51\u7edc\u7ed3\u6784\u7684\u8f83\u4f4e\u5c42\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u6545\u969c\u68c0\u6d4b\u548c\u8bca\u65ad\u5de5\u4f5c\u7684\u5404\u4e2a\u4e0d\u540c\u65b9\u9762\u5373\u5b58\u5728\u7b80\u5316\uff0c\u4e5f\u5b58\u5728\u590d\u6742\u5316\u3002 S. Lee et al.: AudiSDN: Automated Detection of Network Policy Inconsistencies in Software-Defined Networks, IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. SDN, Software-Defined Networking, Network Policy Inconsistency AudiSDN\uff0c\u8fd9\u662f\u4e00\u4e2a\u81ea\u52a8\u7684\u6a21\u7cca\u6d4b\u8bd5\u6846\u67b6\uff0c\u65e8\u5728\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u3002\u5728OpenFlow\u7f51\u7edc\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u7b56\u7565\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u5982\u7528\u6237\u505a\u51fa\u7684\u51b3\u7b56\u4e0e\u6240\u4e0b\u53d1\u7684\u7b56\u7565\u5728\u5b9e\u9645\u6267\u884c\u7684\u65f6\u5019\u5b58\u5728\u67d0\u4e9b\u6f0f\u6d1e\u3002AudiSDN\u5c06\u7528\u6237\u6240\u8981\u4e0b\u53d1\u7684\u51b3\u7b56\uff0c\u8fdb\u884c\u590d\u5236\uff0c\u5e76\u4ee5\u4fee\u6539\u5185\u5bb9\u7684\u65b9\u5f0f\u8fdb\u884c\u89c4\u5219\u7684\u6a21\u7cca\u5316\uff0c\u4f7f\u5f97\u539f\u89c4\u5219\u4e0e\u6a21\u7cca\u89c4\u5219\u5171\u540c\u4e0b\u53d1\u5230\u5e95\u5c42\u8bbe\u5907\u4e4b\u4e2d\u3002\u518d\u901a\u8fc7\u4e0d\u4e00\u81f4\u6027\u68c0\u6d4b\u6765\u5224\u5b9a\u662f\u5426\u5b58\u5728\u4e0d\u4e00\u81f4\u60c5\u51b5\u3002\u5b9e\u9a8c\u4e2d\uff0cAudiSDN\u6d4b\u8bd5\u4e86Floodlight\u548cONOS\u7684\u7ed3\u679c\u3002 Jehandad Khan et al.: 2018. Query language for large-scale P4 network debugging. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 162\u2013164. openflow \u901a\u8fc7\u5c06\u7f51\u7edc\u62d3\u6251\u4fe1\u606f\u4e0e\u72b6\u6001\u6536\u96c6\u5408\u5e76\uff0c\u6b64\u8bba\u6587\u63a2\u7d22\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u6765\u67e5\u770b\u7f51\u7edc\u76d1\u89c6\u548c\u6545\u969c\u6392\u9664\u95ee\u9898\u4ee5\u5bf9\u73b0\u4ee3\u6570\u636e\u4e2d\u5fc3\u8fdb\u884c\u8bca\u65ad\u548c\u89e3\u51b3\u95ee\u9898\u3002\u5c06\u6574\u4e2a\u7f51\u7edc\u62bd\u8c61\u4e3a\u4e00\u4e2a\u5b9e\u4f53\u53ef\u7b80\u5316\u8c03\u8bd5\u8fc7\u7a0b\uff0c\u4f7f\u5168\u9762\u7684\u6839\u672c\u539f\u56e0\u5206\u6790\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u4f7f\u7f51\u7edc\u7ba1\u7406\u5458\u65e0\u9700\u5904\u7406\u8bb8\u591a\u8bbe\u5907\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u751f\u4ea7\u7387\u548c\u6548\u7387\u3002\u8fd9\u79cd\u5408\u5e76\u5141\u8bb8\u5c06\u4ee5\u9886\u57df\u7279\u5b9a\u8bed\u8a00\u8868\u8fbe\u7684\u6027\u80fd\u67e5\u8be2\u8f6c\u6362\u4e3a\u5728\u7f51\u7edc\u4e2d\u6536\u96c6\u5fc5\u8981\u72b6\u6001\u7684\u4e0d\u540c\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u5c0f\u6bb5\u4ee3\u7801\u3002\u8fd9\u79cd\u5408\u5e76\u53ef\u4ee5\u51cf\u5c11\u6bcf\u4e2a\u4ea4\u6362\u673a\u7684\u5f00\u9500\uff0c\u5e76\u51cf\u8f7b\u8bbe\u5907\u7684\u8d1f\u62c5\uff0c\u5e76\u4e3a\u7ba1\u7406\u5458\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u62bd\u8c61\u3002 Jinghan Zhou et al.: 2018. APF: fast network all-pair reachability calculation. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 172\u2013173. programmable data plane \u7f51\u7edc\u9a8c\u8bc1\u4e3b\u8981\u662f\u6839\u636e\u7f51\u7edc\u4e0d\u53d8\u6027\u6216\u8fd0\u8425\u5546\u7684\u4fe1\u5ff5\u6765\u68c0\u67e5\u7f51\u7edc\u72b6\u6001\u3002\u4e8b\u5148\u5feb\u901f\u8ba1\u7b97\u7f51\u7edc\u7684\u6240\u6709\u5bf9\u53ef\u8fbe\u6027\uff0c\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u67e5\u8be2\u6216\u6574\u4f53\u5206\u6790\uff0c\u53ef\u4ee5\u4e3a\u7f51\u7edc\u9a8c\u8bc1\u63d0\u4f9b\u5de8\u5927\u5e2e\u52a9\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5feb\u901f\u5168\u5bf9\u53ef\u8fbe\u6027\u8ba1\u7b97\u7b97\u6cd5Atomic Predicates Flooding\uff08APF\uff09\u3002\u5728\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u57fa\u4e8e\u7f51\u7edc\u96fe\u5316\u7684\u65b0\u7b97\u6cd5\u6bd4\u6ca1\u6709\u7f51\u7edc\u96fe\u5316\u7684\u73b0\u6709\u7b97\u6cd5\u5feb\u7ea6\u4e09\u5230\u56db\u4e2a\u6570\u91cf\u7ea7\u3002\u5728\u5927\u591a\u6570\u6570\u636e\u96c6\u4e0a\uff0cAPF\u751a\u81f3\u6bd4\u57fa\u4e8eWarshall\u7684\u5177\u6709\u96fe\u5316\u529f\u80fd\u7684\u5168\u5bf9\u53ef\u8fbe\u6027\u7b97\u6cd5\u5feb2\u81f35\u500d\u3002 Zehua Guo et al.: 2019. RetroFlow: maintaining control resiliency and flow programmability for software-defined WANs. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 1, 1\u201310. openflow \u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u5c06\u8f6f\u4ef6\u5b9a\u4e49\u7684WAN\u5206\u4e3a\u591a\u4e2a\u57df\uff0c\u8fd9\u4e9b\u57df\u7531\u5177\u6709\u903b\u8f91\u96c6\u4e2d\u89c6\u56fe\u7684\u591a\u4e2a\u63a7\u5236\u5668\u63a7\u5236\u3002\u5728\u63a7\u5236\u5668\u6545\u969c\u4e0b\uff0c\u5c06\u8131\u673a\u4ea4\u6362\u673a\u7684\u63a7\u5236\u4ece\u53d1\u751f\u6545\u969c\u7684\u63a7\u5236\u5668\u91cd\u65b0\u6620\u5c04\u5230\u5176\u4ed6\u6d3b\u52a8\u63a7\u5236\u5668\u3002\u7531\u4e8e\u589e\u52a0\u4e86\u63a7\u5236\u5668-\u4ea4\u6362\u673a\u7684\u901a\u4fe1\u5f00\u9500\uff0c\u73b0\u6709\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u4f1a\u4f7f\u6d3b\u52a8\u7684\u63a7\u5236\u5668\u8fc7\u8f7d\uff0c\u4ece\u800c\u4e2d\u65ad\u5176\u6b63\u5e38\u8fd0\u884c\uff0c\u6216\u8005\u964d\u4f4e\u7f51\u7edc\u6027\u80fd\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51faRetroFlow\u4ee5\u5b9e\u73b0\u4f4e\u901a\u4fe1\u5f00\u9500\uff0c\u800c\u4e0d\u4f1a\u5728\u63a7\u5236\u5668\u6545\u969c\u671f\u95f4\u4e2d\u65ad\u6d3b\u52a8\u63a7\u5236\u5668\u7684\u6b63\u5e38\u5904\u7406\u3002\u901a\u8fc7\u667a\u80fd\u5730\u914d\u7f6e\u4e00\u7ec4\u5728\u4f20\u7edf\u8def\u7531\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u7684\u9009\u5b9a\u8131\u673a\u4ea4\u6362\u673a\uff0cRetroFlow\u53ef\u4ee5\u4f7f\u6d3b\u52a8\u63a7\u5236\u5668\u5728\u63a7\u5236SDN\u7684\u6d41\u53ef\u7f16\u7a0b\u6027\u7684\u540c\u65f6\uff0c\u4e0d\u63a7\u5236\u9009\u5b9a\u7684\u8131\u673a\u4ea4\u6362\u673a\u3002RetroFlow\u8fd8\u53ef\u4ee5\u901a\u8fc7SDN\u8def\u7531\u6a21\u5f0f\u5c06\u8131\u673a\u4ea4\u6362\u673a\u7684\u63a7\u5236\u667a\u80fd\u5730\u8f6c\u79fb\u5230\u6d3b\u52a8\u63a7\u5236\u5668\uff0c\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u8fd9\u4e9b\u8131\u673a\u4ea4\u6362\u673a\u4e0e\u6d3b\u52a8\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u5f00\u9500\u3002 Yu Zhou et al.: 2019. P4Tester: efficient runtime rule fault detection for programmable data planes. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 5, 1\u201310. programmable data plane \u672c\u6587\u63d0\u51fa\u4e86P4Tester\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8e\u5bf9\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e0a\u7684\u8fd0\u884c\u65f6\u89c4\u5219\u6545\u969c\u8fdb\u884c\u6545\u969c\u6392\u9664\u7684\u65b0\u578b\u7f51\u7edc\u6d4b\u8bd5\u7cfb\u7edf\u3002\u9996\u5148\uff0cP4Tester\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u4e8c\u8fdb\u5236\u51b3\u7b56\u56fe\u7684\u65b0\u7684\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\uff0c\u8be5\u8868\u793a\u5f62\u5f0f\u53ef\u4ee5\u4e3a\u5404\u79cdP4\u5b9a\u4e49\u7684\u6570\u636e\u5e73\u9762\u529f\u80fd\u9ad8\u6548\u751f\u6210\u63a2\u9488\u3002\u5176\u6b21\uff0cP4Tester\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u63a2\u9488\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u4f7f\u7528\u6e90\u8def\u7531\u6765\u8f6c\u53d1\u63a2\u9488\u3002\u8be5\u63a2\u9488\u6a21\u578b\u6781\u5927\u5730\u51cf\u5c11\u4e86\u89c4\u5219\u6545\u969c\u68c0\u6d4b\u7684\u5f00\u9500\uff0c\u5373\u4ec5\u9700\u8981\u4e00\u53f0\u670d\u52a1\u5668\u5373\u53ef\u4e3a\u5927\u578b\u7f51\u7edc\u751f\u6210\u63a2\u9488\uff0c\u5e76\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u4e86\u63a2\u9488\u7684\u6570\u91cf\u3002\u6b64\u5916\uff0c\u8be5\u63a2\u9488\u6a21\u578b\u53ef\u4ee5\u6d4b\u8bd5\u7f51\u7edc\u4e2d\u7684\u6240\u6709\u8868\u89c4\u5219\uff0c\u4ece\u800c\u5b9e\u73b0\u5b8c\u6574\u7684\u6545\u969c\u8986\u76d6\u3002\u6839\u636e\u5b9e\u9645\u6570\u636e\u96c6\u8fdb\u884c\u7684\u8bc4\u4f30\u8868\u660eP4Tester \u53ef\u4ee5\u6709\u6548\u5730\u68c0\u67e5\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e2d\u7684\u6240\u6709\u89c4\u5219\uff0c\u751f\u6210\u7684\u63a2\u9488\u6bd4ATPG\u548cPronto\u5c1159\uff05\uff0c\u6bd4ATPG\u5feb\u4e24\u4e2a\u6570\u91cf\u7ea7\uff0c\u5e76\u5728\u4e00\u79d2\u949f\u5185\u5bf9BMv2\u548cTofino\u4e0a\u7684\u591a\u4e2a\u89c4\u5219\u6545\u969c\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002 Xinbo Liu et al.: 2019. ATMPA: attacking machine learning-based malware visualization detection methods via adversarial examples. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 38, 1\u201310. programmable data plane \u81ea\u52a8\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u6280\u672f\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\uff0c\u5176\u4e2d\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\uff08ML\uff09\u7684\u53ef\u89c6\u5316\u68c0\u6d4b\u65b9\u6cd5\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\u3002\u672c\u6587\u8bc1\u660e\u4e86\u57fa\u4e8eML\u7684\u6700\u65b0\u53ef\u89c6\u5316\u68c0\u6d4b\u65b9\u6cd5\u5bb9\u6613\u53d7\u5230\u5bf9\u6297\u793a\u4f8b\uff08AE\uff09\u653b\u51fb\u3002\u5e76\u5f00\u53d1\u4e86\u4e00\u79cd\u57fa\u4e8e\u68af\u5ea6\u4e0b\u964d\u548cL\u7684\u65b0\u578b\u5bf9\u6297\u7eb9\u7406\u6076\u610f\u8f6f\u4ef6\u6444\u52a8\u653b\u51fb\uff08ATMPA\uff09\u65b9\u6cd5-norm\u4f18\u5316\u65b9\u6cd5\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5728\u8f6c\u6362\u540e\u7684\u6570\u636e\u96c6\u4e0a\u5f15\u5165\u4e00\u4e9b\u5fae\u5c0f\u7684\u5e72\u6270\uff0c\u4ece\u800c\u4f7f\u57fa\u4e8eML\u7684\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u65b9\u6cd5\u5b8c\u5168\u5931\u8d25\u3002 Hui Cai et al.: 2019. Towards privacy-preserving data trading for web browsing history. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 25, 1\u201310. openflow \u672c\u6587\u63d0\u51fa\u4e86PEATSE\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8eWeb\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u7684\u65b0\u7684\u9690\u79c1\u4fdd\u62a4dAta\u4ea4\u6613\u6846\u67b6\u3002\u5b83\u8003\u8651\u4e86\u7528\u6237\u7684\u5404\u79cd\u9690\u79c1\u504f\u597d\u548c\u4ed6\u4eec\u7684Web\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u7684\u5b9e\u7528\u7a0b\u5e8f\u3002PEATSE\u5728\u5df2\u53d1\u5e03\u7684\u6d4f\u89c8\u8bb0\u5f55\u4e0a\u5e72\u6270\u7528\u6237\u7684\u8be6\u7ec6\u6d4f\u89c8\u65f6\u95f4\uff0c\u4ee5\u4fdd\u62a4\u7528\u6237\u9690\u79c1\uff0c\u540c\u65f6\u5e73\u8861\u9690\u79c1\u4e0e\u5b9e\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6743\u8861\u3002\u901a\u8fc7\u57fa\u4e8e\u771f\u5b9e\u6570\u636e\u7684\u5b9e\u9a8c\uff0c\u6211\u4eec\u7684\u5206\u6790\u548c\u8bc4\u4f30\u7ed3\u679c\u8868\u660ePEATSE\u786e\u5b9e\u5b9e\u73b0\u4e86\u7528\u6237\u9690\u79c1\u4fdd\u62a4\uff0c\u6570\u636e\u6d88\u8d39\u8005\u7684\u51c6\u786e\u6027\u8981\u6c42\uff0c\u771f\u5b9e\u6027\uff0c\u4e2a\u4eba\u5408\u7406\u6027\u4ee5\u53ca\u9884\u7b97\u5e73\u8861\u3002 Mohammad Jahanian et al.: 2019. Name Space Analysis: Verification of Named Data Network Data Planes. In Proceedings of the 6th ACM Conference on Information-Centric Networking (ICN \u201919). Association for Computing Machinery, New York, NY, USA, 44\u201354. programmable data plane \u672c\u6587\u63d0\u51fa\u4e86\u540d\u79f0\u7a7a\u95f4\u5206\u6790\uff08NSA\uff09\uff0c\u4e00\u79cd\u7528\u4e8e\u5bf9NDN\u6570\u636e\u5e73\u9762\u8fdb\u884c\u5efa\u6a21\u548c\u5206\u6790\u7684\u7f51\u7edc\u9a8c\u8bc1\u6846\u67b6\u3002NSA\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5feb\u7167\u4f5c\u4e3a\u8f93\u5165\uff0c\u6bcf\u4e2a\u5feb\u7167\u4ee3\u8868\u6570\u636e\u5e73\u9762\u7684\u7279\u5b9a\u72b6\u6001\u3002\u7136\u540e\uff0c\u5b83\u6839\u636e\u6307\u5b9a\u7684\u5c5e\u6027\u63d0\u4f9b\u9a8c\u8bc1\u7ed3\u679c\u3002NSA\u5efa\u7acb\u5728\u6807\u5934\u7a7a\u95f4\u5206\u6790\u7406\u8bba\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u4f8b\u5982\u4ee5\u7075\u6d3b\u7684\u683c\u5f0f\u652f\u6301\u53ef\u53d8\u5927\u5c0f\u7684\u6807\u5934\uff0c\u5f15\u5165\u540d\u79f0\u7a7a\u95f4\u529f\u80fd\uff0c\u5e76\u5141\u8bb8\u57fa\u4e8e\u540d\u79f0\u7684\u5c5e\u6027\uff0c\u4f8b\u5982\u5185\u5bb9\u53ef\u8bbf\u95ee\u6027\u548c\u540d\u79f0\u6cc4\u6f0f\u81ea\u7531\u3002\u8fd9\u4e9b\u91cd\u8981\u7684\u8865\u5145\u53cd\u6620\u4e86NDN\u7684\u884c\u4e3a\u548c\u8981\u6c42\uff0c\u8981\u6c42\u5efa\u6a21\u548c\u9a8c\u8bc1\u57fa\u7840\u4e0e\u4f20\u7edf\u7684\u4ee5\u4e3b\u673a\u4e3a\u4e2d\u5fc3\u7684\u7f51\u7edc\u6839\u672c\u4e0d\u540c\u3002 X. Jia et al.: \"Link fault protection and traffic engineering in hybrid SDN networks,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Honolulu, HI, 2018, pp. \u5728\u5177\u6709SDN\u548c\u975eSDN\u4ea4\u6362\u673a\u7684\u6df7\u5408\u7f51\u7edc\u4e2d\uff0c\u73b0\u6709\u94fe\u8def\u6545\u969c\u4fdd\u62a4\u7684\u89e3\u51b3\u65b9\u6848\u9700\u8981\u8f83\u957f\u7684\u8ba1\u7b97\u65f6\u95f4\u548c\u8f83\u9ad8\u7684\u914d\u7f6e\u5f00\u9500\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cdHybrid-Hie\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u5b9e\u73b0\u6df7\u5408SDN\u7f51\u7edc\u4e2d\u7684\u5feb\u901f\u91cd\u8def\u7531\u548c\u8d1f\u8f7d\u5e73\u8861\u3002\u672c\u6587\u901a\u8fc7\u9884\u6d4b\u94fe\u63a5\u5229\u7528\u7387\u6765\u9884\u5148\u5728\u6bcf\u4e2a\u5907\u4efd\u8def\u5f84\u4e0a\u914d\u7f6e\u5206\u914d\u6bd4\u4f8b\u3002\u4e0e\u73b0\u6709\u89e3\u51b3\u65b9\u6848\u76f8\u6bd4\uff0c\u53ef\u4ee51\uff09\u5b9e\u73b0\u57df\u95f4\u94fe\u63a5\u7684\u6709\u6548\u6545\u969c\u6062\u590d\uff0c\u4ee5\u53ca2\uff09\u5b9e\u73b0\u66f4\u597d\u7684\u8d1f\u8f7d\u5e73\u8861\u548c\u6062\u590d\u8def\u5f84\u6269\u5c55\u3002 \u653b\u51fb\u68c0\u6d4b L. Tang et al.: \"SpreadSketch: Toward Invertible and Network-Wide Detection of Superspreaders,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. p4 \u4e3a\u5b9e\u65f6\u51c6\u786e\u5730\u5927\u89c4\u6a21\u68c0\u6d4b\u8d85\u7ea7\u4f20\u64ad\u8005\u7684\u95ee\u9898\u3002\u8bba\u6587\u63d0\u51faSpreadSketch\uff0c\u8fd9\u662f\u4e00\u79cd\u53ef\u9006\u7684\u8349\u56fe\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u7f51\u7edc\u8303\u56f4\u7684\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\u68c0\u6d4b\uff0c\u5e76\u5728\u5185\u5b58\u7a7a\u95f4\uff0c\u6027\u80fd\u548c\u51c6\u786e\u6027\u65b9\u9762\u63d0\u4f9b\u4e86\u7406\u8bba\u4e0a\u7684\u4fdd\u8bc1\u3002SpreadSketch\u8ddf\u8e2a\u5019\u9009\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\uff0c\u5e76\u5c06\u4f30\u8ba1\u7684\u6247\u51fa\u6269\u5c55\u5d4c\u5165\u5c0f\u578b\u548c\u9759\u6001\u5185\u5b58\u7a7a\u95f4\u5185\u7684\u4e8c\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\u4e2d\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5408\u5e76\u591a\u4e2aSpreadSketch\u5b9e\u4f8b\uff0c\u4ee5\u63d0\u4f9b\u6574\u4e2a\u7f51\u7edc\u7684\u6d4b\u91cf\u89c6\u56fe\uff0c\u4ee5\u6062\u590d\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\u53ca\u5176\u4f30\u8ba1\u7684\u6247\u51fa\u3002 \u8bc4\u4f30\u8868\u660e\uff0cSpreadSketch\u4e0e\u6700\u65b0\u7684\u8349\u56fe\u76f8\u6bd4\uff0c\u5177\u6709\u66f4\u9ad8\u7684\u51c6\u786e\u6027\u548c\u6027\u80fd\u3002 Garegin Grigoryan et al.: 2018. LAMP: prompt layer 7 attack mitigation with programmable data planes. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 158\u2013159. openflow LAMP\uff0c\u5373\u5177\u6709\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u7b2c7\u5c42\u653b\u51fb\u7f13\u89e3\u3002 LAMP\u8ddf\u8e2a\u8fdb\u5165\u53d7\u653b\u51fb\u7f51\u7edc\u7684\u6bcf\u4e2a\u6d41\u7684\u8def\u5f84\u3002\u5982\u679c\u6700\u7ec8\u4e3b\u673a\u5e94\u7528\u7a0b\u5e8f\u68c0\u6d4b\u5230\u5165\u4fb5\u4f01\u56fe\uff0c\u5219\u4f1a\u901a\u8fc7\u5728\u4fe1\u53f7\u5305\u7684IP\u9009\u9879\u5b57\u6bb5\u4e2d\u5d4c\u5165\u4fe1\u53f7\u6807\u5fd7\u548c\u653b\u51fb\u8005\u7684IP\u5730\u5740\u6765\u751f\u6210\u653b\u51fb\u8b66\u62a5\u3002 \u5047\u5b9a\u6b64\u7c7b\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u4fee\u6539\u8b66\u62a5\u6d88\u606f\u7684IP\u6570\u636e\u5305\u5b57\u6bb5\u7684\u7279\u6743\u3002 \u8b66\u62a5\u5c06\u76f4\u63a5\u53d1\u9001\u5230\u6700\u8fd1\u7684\u4ea4\u6362\u673a\uff0c\u8be5\u4ea4\u6362\u673a\u6700\u7ec8\u5c06\u6570\u636e\u5305\u8f6c\u53d1\u5230\u627f\u8f7d\u539f\u59cb\u6076\u610f\u6d41\u91cf\u7684\u5165\u53e3\u4ea4\u6362\u673a\u3002 \u6536\u5230\u8b66\u62a5\u540e\uff0c\u5165\u53e3\u4ea4\u6362\u673a\u5c06\u4fee\u6539\u5176\u6d41\u63a7\u5236\u7b56\u7565\uff0c\u4ee5\u963b\u6b62\u6765\u81ea\u653b\u51fb\u8005\u7684\u540e\u7eed\u6d41\u91cf\u3002 \u8fd9\u4e2a\u7f13\u89e3\u7b56\u7565\u81f3\u5c11\u5177\u6709\u4e09\u4e2a\u4f18\u70b9\uff1a\uff081\uff09\u5b83\u4f7f\u7f51\u7edc\u8303\u56f4\u5185\u7684\u534f\u4f5c\u68c0\u6d4b\u548c\u653b\u51fb\u7f13\u89e3\u6210\u4e3a\u53ef\u80fd\u3002 \u7ec8\u7aef\u4e3b\u673a\u83b7\u5f97\u7684\u68c0\u6d4b\u7ed3\u679c\u53ef\u4ee5\u91cd\u65b0\u7528\u4e8e\u6574\u4e2a\u7f51\u7edc\u7684\u670d\u52a1\uff1b \uff082\uff09\u7531\u4e8e\u7f51\u7edc\u8fb9\u7f18\u8fc5\u901f\u963b\u585e\u4e86\u7f51\u7edc\u5185\u6076\u610f\u6d41\u91cf\uff0c\u7f51\u7edc\u5185\u6076\u610f\u6d41\u91cf\u5927\u5927\u51cf\u5c11\u4e86\uff1b \uff083\uff09\u4e0e\u73b0\u6709\u7684SDN\u65b9\u6cd5\u76f8\u6bd4\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u8f7b\u91cf\u548c\u9ad8\u6548\u7684\u7f51\u7edc\u64cd\u4f5c\uff0c\u5728\u73b0\u6709\u7684SDN\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981SDN\u63a7\u5236\u5668\u6765\u5f25\u5408\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7edc\u5c42\u670d\u52a1\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002 Jan Ku\u010dera et al.: 2018. Hardware acceleration of intrusion detection systems for high-speed networks. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 177\u2013178. programmable data plane \u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\uff08IDS\uff09\u662f\u4fdd\u62a4\u8ba1\u7b97\u673a\u7f51\u7edc\u5b89\u5168\u7684\u6d41\u884c\u6280\u672f\u4e4b\u4e00\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u7684\u9ad8\u8ba1\u7b97\u590d\u6742\u6027\u4f7f\u5176\u96be\u4ee5\u6ee1\u8db3\u73b0\u4ee3\u9ad8\u901f\u7f51\u7edc\u7684\u6027\u80fd\u76ee\u6807\u3002\u672c\u6587\u65e8\u5728\u901a\u8fc7\u4fe1\u606f\u5305\u4e22\u5f03\u6765\u52a0\u901fIDS\u3002\u5c06IDS\u53ef\u7528\u7684\u6709\u9650\u8ba1\u7b97\u8d44\u6e90\u4ec5\u96c6\u4e2d\u4e8e\u4f20\u5165\u6d41\u91cf\u4e2d\u6700\u76f8\u5173\u7684\u90e8\u5206\uff0c\u5e76\u5c06\u5176\u4f59\u90e8\u5206\u5378\u8f7d\uff08\u7ed5\u8fc7\uff09\u3002\u8bba\u6587\u8868\u660e\uff0c\u8fd9\u79cd\u5bf9\u5b9a\u4e49\u660e\u786e\u7684\u6d41\u91cf\u90e8\u5206\u7684\u63a7\u5236\uff08\u77e5\u60c5\uff09\u4e22\u5f03\u76f8\u8f83\u8f6f\u4ef6\u548cFPGA\u52a0\u901f\u7684\u4e22\u5f03\u5b9e\u73b0\uff0c\u6709\u52a9\u4e8eIDS\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 S. Sun et al.: \"Detecting and Mitigating ARP Attacks in SDN-Based Cloud Environment,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 2020, pp. \u4e91\u8ba1\u7b97\u7f51\u7edc\u975e\u5e38\u9700\u8981\u5b89\u5168\u6027\uff0c\u4fdd\u62a4\u4e91\u73af\u5883\u514d\u53d7\u5404\u79cd\u653b\u51fb\u5df2\u6210\u4e3a\u70ed\u95e8\u95ee\u9898\u3002\u672c\u6587\u4e2d\uff0c\u5c06SDN\u5e94\u7528\u4e8e\u4fdd\u62a4\u4e91\u8ba1\u7b97\u7f51\u7edc\u514d\u53d7\u5730\u5740\u89e3\u6790\u534f\u8bae\uff08ARP\uff09\u653b\u51fb\u3002\u5728\u5efa\u8bae\u7684\u65b9\u6cd5\u4e2d\uff0c\u63a7\u5236\u5668\u7fa4\u96c6\u4f1a\u68c0\u6d4b\u4e3b\u673a\u53d1\u9001\u7684ARP\u6570\u636e\u5305\uff0c\u4e3a\u4e86\u627e\u51fa\u4f2a\u9020\u8005\u5e76\u9632\u6b62ARP\u6b3a\u9a97\u653b\u51fb\u3002\u6b64\u5916\uff0c\u63a7\u5236\u5668\u4f1a\u4e0d\u65f6\u76d1\u89c6ARP\u6570\u636e\u5305\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u4ee5\u68c0\u6d4bARP\u6cdb\u6d2a\u653b\u51fb\u3002\u4e00\u65e6\u68c0\u6d4b\u5230\u653b\u51fb\uff0c\u63a7\u5236\u5668\u5c31\u4f1a\u5728\u76f8\u5e94\u7684\u4ea4\u6362\u673a\u4e0a\u5b89\u88c5\u6d41\u6761\u76ee\uff0c\u4ee5\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u963b\u6b62\u6d41\u3002\u5b9e\u9a8c\u8868\u660e\u6b64\u65b9\u6cd5\u53ef\u7528\u4e8e\u68c0\u6d4b\u548c\u7f13\u89e3\u57fa\u4e8eSDN\u7684\u4e91\u73af\u5883\u4e2d\u7684ARP\u653b\u51fb\u3002 \u6d41\u91cf\u5206\u6790 Jing Guo et al.: 2019. Who limits the resource efficiency of my datacenter: an analysis of Alibaba datacenter traces. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 39, 1\u201310. programmable data plane \u73b0\u4ee3\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u5229\u7528\u7387\u4f4e\u4f1a\u6d6a\u8d39\u5927\u91cf\u786c\u4ef6\u8d44\u6e90\u548c\u57fa\u7840\u67b6\u6784\u6295\u8d44\u3002\u4e3a\u4e86\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u4e00\u79cd\u76f4\u63a5\u7684\u65b9\u6cd5\u662f\u5c06\u4e0d\u540c\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5171\u5b58\u4e8e\u540c\u4e00\u786c\u4ef6\u4e0a\u3002\u4e3a\u4e86\u5f04\u6e05\u8d44\u6e90\u6548\u7387\u5e76\u4e86\u89e3\u4f4d\u4e8e\u540c\u4e00\u5730\u70b9\u7684\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5173\u952e\u7279\u5f81\uff0c\u672c\u6587\u5206\u6790\u4e86\u6765\u81ea\u963f\u91cc\u5df4\u5df4\u751f\u4ea7\u73af\u5883\u4e0b\u76848\u5929trace\uff0c\u5e76\u63ed\u793a\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u4e3b\u8981\u53d1\u73b0\u3002\u9996\u5148\uff0c\u5185\u5b58\u6210\u4e3a\u65b0\u7684\u74f6\u9888\uff0c\u5e76\u9650\u5236\u4e86\u963f\u91cc\u5df4\u5df4\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u6548\u7387\u3002\u5176\u6b21\uff0c\u4e3a\u4e86\u4fdd\u62a4\u5173\u952e\u5ef6\u8fdf\u5e94\u7528\u7a0b\u5e8f\uff0c\u6279\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u88ab\u89c6\u4e3a\u7b2c\u4e8c\u7b49\u516c\u6c11\uff0c\u5e76\u4e14\u88ab\u9650\u5236\u4f7f\u7528\u6709\u9650\u7684\u8d44\u6e90\u3002\u7b2c\u4e09\uff0c\u8d85\u8fc790\uff05\u7684\u5ef6\u8fdf\u5173\u952e\u578b\u5e94\u7528\u7a0b\u5e8f\u662f\u7528Java\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u7684\u3002\u5927\u91cf\u72ec\u7acb\u7684JVM\u8fdb\u4e00\u6b65\u4f7f\u8d44\u6e90\u7ba1\u7406\u590d\u6742\u5316\uff0c\u5e76\u9650\u5236\u4e86\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u6548\u7387\u3002 Ran Ben Basat et al.: 2019. Q-MAX: A Unified Scheme for Improving Network Measurement Throughput. In Proceedings of the Internet Measurement Conference ( IMC \u201919 ). Association for Computing Machinery, New York, NY, USA, 322\u2013336. keyword\uff1aNetwork algorithms \u7ebf\u901f\u8fd0\u884c\u7684\u6d4b\u91cf\u5e94\u7528\u662f\u7f51\u7edc\u6d4b\u91cf\u9886\u57df\u7684\u91cd\u5927\u6311\u6218\u3002\u672c\u6587\u901a\u8fc7\u63d0\u4f9b\u4e00\u79cd\u6539\u5584\u5404\u79cd\u7f51\u7edc\u7b97\u6cd5\u66f4\u65b0\u65f6\u95f4\u7684\u7edf\u4e00\u673a\u5236\u6765\u5e94\u5bf9\u8fd9\u4e00\u6311\u6218\u3002\u901a\u8fc7\u8bc6\u522b\uff0c\u7814\u7a76\u548c\u4f18\u5316\u79f0\u4e3aq-MAX\u7684\u5e38\u89c1\u7b97\u6cd5\u6a21\u5f0f\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u76ee\u6807\u662f\u4fdd\u6301\u6570\u636e\u5305\u6d41\u4e2d\u7684\u6700\u5927q\u503c\u3002\u8bba\u6587\u5bf9\u6b64\u95ee\u9898\u8fdb\u884c\u6b63\u5f0f\u5206\u6790\uff0c\u5e76\u4ecb\u7ecd\u95f4\u9694\u548c\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5177\u6709\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6052\u5b9a\u66f4\u65b0\u65f6\u95f4\u3002\u7ed3\u8bba\u8bc1\u660e\uff0c\u4e0e\u5e93\u7b97\u6cd5\u76f8\u6bd4\uff0cq-MAX\u7b97\u6cd5\u6267\u884cX20\u7684\u901f\u5ea6\u5feb\u5f97\u591a\uff0c\u5728\u771f\u5b9e\u7684\u7f51\u7edc\u8f68\u8ff9\u4e0a\uff0c\u541e\u5410\u91cf\u6700\u591a\u53ef\u63d0\u9ad8X12\u3002\u5b9e\u9a8c\u5728\u6700\u5148\u8fdb\u7684\u865a\u62df\u4ea4\u6362\u673aOpen vSwitch\u4e2d\u5b9e\u73b0\u4e86\u8be5\u65b9\u6848\u3002 \u7efc\u8ff0 Tooska Dargahi et al.: A Survey on the Security of Stateful SDN Data Planes, IEEE, 2019. Keywords: Data plane,data plane abstractions,data plane architectures,data plane flexibility,data plane implementations,data plane languages,data plane programmability,deeply programmable netoworks,description languages,energy consumption,energy efficiency,hardware-based implementations,measurement,monitoring,network virtualization,network functions virtualization,networking technologies, SDN\u4f20\u7edf\u4e0a\u5c06OpenFlow\u7528\u4f5c\u201c\u8bbe\u5907\u7ea7\u201d\u7684\u62bd\u8c61\u3002\u7531\u4e8eOpenFlow\u53ea\u5141\u8bb8\u7a0b\u5e8f\u5458\u63d0\u53d6\u9759\u6001\u6d41\u8868\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4efb\u4f55\u6709\u72b6\u6001\u7684\u63a7\u5236\u548c\u5904\u7406\u53ea\u80fd\u4ea4\u4e88\u63a7\u5236\u5668\u5904\u7406\u3002\u4e3a\u4e86\u89e3\u51b3\u5ef6\u65f6\u5927\u53ca\u4fe1\u53f7\u5f00\u9500\u5927\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u8fd1\u51e0\u5e74\u7684\u5de5\u4f5c\u4e2d\u63d0\u51fa\u4e86\u521b\u65b0\u7684\u6570\u636e\u5e73\u9762\u7f16\u7a0b\u62bd\u8c61\uff0c\u80fd\u76f4\u63a5\u5728\u4ea4\u6362\u673a\u5185\u90e8\u90e8\u7f72\u667a\u80fd\u529f\u80fd\uff0c\u5982\u5c40\u90e8\u72b6\u6001\u6d41\u7b49\u3002\u672c\u6587\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e86\u5173\u4e8e\u6709\u72b6\u6001SDN\u6570\u636e\u5e73\u9762\u7684\u77e5\u8bc6\uff0c\u5e76\u5206\u6790\u4e86\u5bf9\u4e8e\u6f5c\u5728\u7684\u653b\u51fb\u573a\u666f\u53ca\u5bf9\u653b\u51fb\u7684\u9632\u5fa1\u63aa\u65bd\u3002 \u6570\u636e\u5e73\u9762\u5b89\u5168\u52a0\u5bc6 Jiarong Xing et al.: Secure State Migration in the Data Plane, SigComm workshop SPIN,2020. Keywords\uff1aProgrammable data planes, P4, State migration, Stream authentication, Network security \u8bb8\u591a\u6700\u65b0\u7cfb\u7edf\u5141\u8bb8\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4ee5\u786c\u4ef6\u901f\u5ea6\u5b9e\u73b0\u6709\u72b6\u6001\u7684\u6570\u636e\u5305\u5904\u7406\uff0c\u4f46\u662f\u6709\u6548\u7ba1\u7406\u6570\u636e\u5e73\u9762\u72b6\u6001\u7684\u534f\u8bae\u548c\u7cfb\u7edf\u4ecd\u672a\u5f97\u5230\u5f00\u53d1\u3002\u672c\u6587\u63d0\u51faP4Sync\u534f\u8bae\u4ee5\u89e3\u51b3\u5b89\u5168\u72b6\u6001\u8fc1\u79fb\u7684\u95ee\u9898\u3002P4Sync\u534f\u8bae\u80fd\u4f7f\u4ea4\u6362\u673a\u5728\u65e0\u8f6f\u4ef6\u63a7\u5236\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u6570\u636e\u5e73\u9762\u72b6\u6001\u52a0\u5bc6\u4f20\u8f93\u540e\u4f20\u9012\u5230\u76ee\u7684\u5730\u3002P4Sync\u89e3\u51b3\u4e86\u4e00\u4e9b\u6280\u672f\u96be\u9898\uff1a\u4f8b\u5982\u5728VM\u8fc1\u79fb\u4e2d\u91c7\u7528\u5185\u5b58\u590d\u5236\u6280\u672f\uff0c\u5c06\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5b89\u5168\u6027\u64cd\u4f5c\u4ea4\u8fd8\u6570\u636e\u5e73\u9762\uff0c\u4ee5\u53ca\u5747\u8861\u5206\u914d\u91cd\u91cf\u7ea7\u7684\u52a0\u5bc6\u5f00\u9500\uff0c\u540c\u65f6\uff0cP4Sync\u4e5f\u5177\u6709\u8f83\u4f4e\u7684\u6d41\u91cf\u548c\u5185\u5b58\u5f00\u9500\u3002 Gang Liu.:P4NIS Improving network immunity against eavesdropping with programmable data planes,INFOCOM,2020 Keywords: Protocols, Eavesdropping , Encryption , Internet , Servers \u7531\u4e8e\u8d85\u7ea7\u8ba1\u7b97\u673a\u8ba1\u7b97\u80fd\u529b\u7684\u63d0\u9ad8\uff0c\u901a\u8fc7\u5355\u4e00\u7f51\u7edc\u8def\u5f84\u4f20\u8f93\u52a0\u5bc6\u6570\u636e\u5305\u5f88\u5bb9\u6613\u53d7\u5230\u66b4\u529b\u653b\u51fb\u3002\u80fd\u529b\u51fa\u4f17\u7684\u653b\u51fb\u8005\u79d8\u5bc6\u7a83\u542c\u6240\u6709\u6570\u636e\u5305\uff0c\u5c06\u6570\u636e\u5305\u5206\u7c7b\u5230\u4e0d\u540c\u7684\u6d41\u4e2d\uff0c\u5bf9\u89e3\u5bc6\u5bc6\u94a5\u8fdb\u884c\u7a77\u4e3e\u641c\u7d22\uff0c\u5e76\u4ece\u6d41\u4e2d\u63d0\u53d6\u654f\u611f\u7684\u4e2a\u4eba\u4fe1\u606f\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u534f\u8bae\u65e0\u5173\u7684\u6570\u636e\u5305\u5904\u7406\u5668(P4)\u7684\u7f51\u7edc\u514d\u75ab\u65b9\u6848(P4NIS)\u6765\u62b5\u6297\u7a83\u542c\u653b\u51fb\u3002\u5177\u4f53\u6765\u8bf4\uff0cP4NIS\u914d\u5907\u4e09\u9053\u9632\u7ebf\uff0c\u63d0\u9ad8\u7f51\u7edc\u514d\u75ab\u529b\u3002\u7b2c\u4e00\u9053\u9632\u7ebf\u662f\u6df7\u6dc6\u8f6c\u53d1\uff0c\u5c06\u4e0d\u540c\u7f51\u7edc\u8def\u5f84\u4e2d\u7684\u6240\u6709\u6d41\u91cf\u5206\u7ec4\u65e0\u5e8f\u5730\u5206\u53d1\u3002\u7b2c\u4e8c\u9053\u9632\u7ebf\u4f7f\u7528\u4e0d\u540c\u7684\u52a0\u5bc6\u7b97\u6cd5\u52a0\u5bc6\u6570\u636e\u5305\u7684\u4f20\u8f93\u7aef\u53e3\u5b57\u6bb5\u3002\u8be5\u52a0\u5bc6\u6280\u672f\u53ef\u4ee5\u5c06\u6d41\u91cf\u5305\u4ece\u4e00\u4e2a\u6d41\u5206\u53d1\u5230\u4e0d\u540c\u7684\u6d41\u4e2d\uff0c\u5e76\u5e72\u6270\u7a83\u542c\u8005\u5bf9\u5176\u8fdb\u884c\u6b63\u786e\u7684\u5206\u7c7b\u3002 \u7b2c\u4e09\u9053\u9632\u7ebf\u662fP4NIS\u7ee7\u627f\u4e86\u57fa\u4e8e\u52a0\u5bc6\u7b56\u7565\u7684\u4f18\u52bf\u3002\u8fd0\u7528\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762p4\u7684\u57fa\u672c\u6848\u4f8b\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86P4NIS\u5e76\u5bf9\u5176\u6027\u80fd\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cP4NIS\u80fd\u591f\u663e\u8457\u589e\u52a0\u7a83\u542c\u7684\u96be\u5ea6\uff0c\u4e0e\u73b0\u6709\u673a\u5236\u76f8\u6bd4\uff0c\u4f20\u8f93\u541e\u5410\u91cf\u63d0\u9ad8\u4e8631.7%\u3002 Francesco Musumeci.:Machine-learning-assisted DDoS attack detection with P4 language,ICC,2020 Keywords:Computer crime,Feature extraction,Real-time systems,Prediction algorithms,Support vector machines,Protocols,Metadata \u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(SDN)\u5728\u7f51\u7edc\u81ea\u52a8\u5316,\u7075\u6d3b\u6027\u548c\u8d44\u6e90\u5229\u7528\u7387\u4e0a\u62e5\u6709\u663e\u8457\u4f18\u52bf, SDN\u63a7\u5236\u5668\u88ab\u89c6\u4e3a\u6574\u4e2a\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206,\u7279\u522b\u662f\u5f53\u5b83\u4eec\u79f0\u4e3a\u6076\u610f\u7684\u7f51\u7edc\u653b\u51fb\uff08\u6bd4\u5982\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1(DDoS)\uff09\u7684\u76ee\u6807\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5229\u7528\u4e86P4\u7f16\u7a0b\u8bed\u8a00\u6240\u7f16\u5199\u7684\u6709\u72b6\u6001\u6570\u636e\u5e73\u9762\uff0c\u5e73\u9762\u4e2d\u4ea4\u6362\u673a\u7684\u5185\u5b58\u6301\u7eed\u5b58\u50a8\u5df2\u5904\u7406\u6570\u636e\u5305\u4ee5\u76f4\u63a5\u5728\u6570\u636e\u5e73\u9762\u4e0a\u6267\u884c\u653b\u51fb\u68c0\u6d4b\uff0cSDN\u63a7\u5236\u5668\u4ec5\u53c2\u4e0e\u5c11\u91cf\u5de5\u4f5c\u3002\u7531\u4e8e\u673a\u5668\u5b66\u4e60(ML)\u88ab\u8ba4\u4e3a\u662f\u4e3b\u8981\u7684\u5f02\u5e38\u68c0\u6d4b\u65b9\u6cd5\uff0c\u6211\u4eec\u4f7f\u7528\u57fa\u4e8eML\u7684\u5206\u7c7b\u6765\u8fdb\u884cDDoS\u653b\u51fb\u68c0\u6d4b\uff0c\u5e76\u5728\u5206\u7c7b\u7cbe\u5ea6\u548c\u8bad\u7ec3/\u6d4b\u8bd5\u6301\u7eed\u65f6\u95f4\u65b9\u9762\u6bd4\u8f83\u4e0d\u540c\u7684ML\u7b97\u6cd5\u3002\u6b64\u5916\uff0c\u6211\u4eec\u7ed3\u5408ML\u548cp4\u542f\u7528\u7684\u72b6\u6001\u6570\u636e\u5e73\u9762\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5b9e\u65f6DDoS\u653b\u51fb\u68c0\u6d4b\u6a21\u5757\uff0c\u6211\u4eec\u6839\u636e\u68c0\u6d4b\u6240\u9700\u7684\u5ef6\u8fdf\u8fdb\u884c\u8bc4\u4f30\u3002\u6211\u4eec\u8003\u8651\u4e86\u4e09\u4e2a\u5b9e\u65f6\u573a\u666f\uff0c\u5176\u4e2dP4-enab1ed\u4ea4\u6362\u673a\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u7cbe\u5fc3\u8bbe\u8ba1\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\uff0c\u5373\u6570\u636e\u5305\u955c\u50cf\u3001\u6570\u636e\u5305\u5934\u955c\u50cf\u548cp4 -\u5143\u6570\u636e\u63d0\u53d6\u3002\u6570\u503c\u7ed3\u679c\u8868\u660e\uff0c\u91c7\u7528P4\u53ef\u4ee5\u663e\u8457\u964d\u4f4e\u5ef6\u8fdf\u3002 Song Wang.:SECOD: SDN sEcure control and data plane algorithm for detecting and defending against DoS attacks,IFIP Networking,2018 Keywords:SDN,OpenFlow,Security,Dos Attack \u867d\u7136SDN (Software-Defined Networking, SDN)\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u4f46\u5b83\u4e5f\u5bb9\u6613\u53d7\u5230\u8bf8\u5982\u62d2\u7edd\u670d\u52a1(Denial of Service, DoS)\u7b49\u5b89\u5168\u653b\u51fb\u3002\u7531\u4e8e\u5728SDN\u7f51\u7edc\u4e2d\uff0c\u63a7\u5236\u5e73\u9762\u4e0e\u6570\u636e\u5e73\u9762\u662f\u9694\u79bb\u7684\uff0cDoS\u653b\u51fb\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u63a7\u5236\u5e73\u9762\u4f5c\u4e3a\u653b\u51fb\u76ee\u6807\u5e76\u7834\u574f\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u4ee5\u53ca\u6570\u636e\u5e73\u9762\uff0c\u4ece\u800c\u964d\u4f4e\u7528\u6237\u7684\u670d\u52a1\u8d28\u91cf(QoS)\u3002\u5728\u4e4b\u524d\u7684\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86SECO\uff0c\u4e00\u79cdSDN\u5b89\u5168\u63a7\u5236\u5668\u7b97\u6cd5\uff0c\u7528\u4e8e\u68c0\u6d4b\u548c\u9632\u5fa1DoS\u653b\u51fb\u3002\u4eff\u771f\u7ed3\u679c\u8868\u660e\uff0cSECO\u6210\u529f\u5730\u62b5\u5fa1\u4e86DoS\u653b\u51fb\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86SDN\u5b89\u5168\u63a7\u5236\u4e0e\u6570\u636e\u5e73\u9762(SECOD)\uff0c\u5b83\u662fSECO\u7684\u6539\u8fdb\u7248\u672c\u3002\u5728SECO\u7684\u57fa\u7840\u4e0a\uff0cSECOD\u5f15\u5165\u4e86\u65b0\u7684\u89e6\u53d1\u5668\uff0c\u5728\u63a7\u5236\u548c\u6570\u636e\u5c42\u9762\u68c0\u6d4b\u548c\u9632\u6b62DoS\u653b\u51fb\u3002\u5229\u7528\u57fa\u4e8esdn\u7684\u786c\u4ef6\u6d4b\u8bd5\u53f0\u3001\u57fa\u4e8eopenflow\u7684\u4ea4\u6362\u673a\u548cRYU\u63a7\u5236\u5668\u5b9e\u73b0\u548c\u6d4b\u8bd5SECOD\uff0c\u83b7\u53d6\u771f\u5b9e\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u4fe1\u606f\u3002\u7ed3\u679c\u8868\u660e\uff0cSECOD\u6210\u529f\u68c0\u6d4b\u5e76\u6709\u6548\u964d\u4f4e\u4e86DoS\u5bf9SDN\u7f51\u7edc\u7684\u653b\u51fb\uff0c\u4e0e\u672a\u53d7\u653b\u51fb\u7684\u7f51\u7edc\u76f8\u6bd4\uff0c\u6570\u636e\u5e73\u9762\u6027\u80fd\u4fdd\u6301\u572899.72%\u3002 Aldo Febro.: Distributed SIP DDoS Defense with P4,WCNC,2019 Keywords:SIP,DoS,DDoS,SDN,P4,data plane,control plane SIP DDoS\u653b\u51fb\u6570\u91cf\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u5bf9\u516c\u5171\u901a\u4fe1\u57fa\u7840\u8bbe\u65bd\u6784\u6210\u4e86\u771f\u6b63\u7684\u5a01\u80c1\u3002\u5efa\u7acb\u9632\u5fa1\u7684\u6807\u51c6\u505a\u6cd5\u662f\u5728\u88ab\u653b\u51fb\u76ee\u6807(\u5373\u53d7\u5bb3\u8005\u7684\u4f4d\u7f6e)\u9644\u8fd1\u8fdb\u884c\u9632\u5fa1\u90e8\u7f72\u3002\u8fd9\u79cd\u65b9\u6cd5\u5f88\u96be\u8ddf\u4e0a\u4e0d\u65ad\u589e\u957f\u7684\u6570\u91cf\u548c\u653b\u51fb\u590d\u6742\u6027\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u4e3a\u672a\u6765\u7684\u653b\u51fb\u505a\u51c6\u5907\uff0c\u9700\u8981\u5206\u6563\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5e76\u4e14\u653b\u51fb\u9700\u8981\u5c3d\u53ef\u80fd\u9760\u8fd1\u653b\u51fb\u6e90\uff08\u8fdc\u79bb\u53d7\u5bb3\u8005\uff09\u4ee5\u51cf\u8f7b\u653b\u51fb\u5f3a\u5ea6\u3002\u672c\u6587\u901a\u8fc7\u5bf9\u6570\u636e\u5e73\u9762\u7f16\u7a0b(P4)\u548c\u4ee5\u592a\u7f51\u4ea4\u6362\u673a\u63a7\u5236\u5e73\u9762\u7f16\u7a0b\u7684\u5b9e\u9a8c\uff0c\u5728\u6bcf\u4e2a\u4ea4\u6362\u673a\u7aef\u53e3\u4e0a\u63d0\u4f9b\u5bf9SIP INVITE DDoS\u653b\u51fb\u7684\u9996\u8df3\u68c0\u6d4b\u548c\u9632\u5fa1\u80fd\u529b\u3002\u8fd9\u79cd\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u6216\u57fa\u4e8e\u6e90\u7684\u9632\u5fa1\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u5c06\u5176\u6dfb\u52a0\u81f3\u73b0\u6709\u7684\u57fa\u4e8e\u76ee\u6807\u7684\u7ec4\u4ef6\u4e2d\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u66f4\u5168\u9762\u7684\u6574\u4f53\u89e3\u51b3\u65b9\u6848\uff0c\u8be5\u89e3\u51b3\u65b9\u6848\u53ef\u6269\u5c55\u3001\u5b9e\u60e0\uff0c\u4ee5\u66f4\u597d\u5730\u5e94\u5bf9\u672a\u6765\u7684SIP DDoS\u653b\u51fb\u3002","title":"The Security Of OpenFlow: Reading List"},{"location":"#the-security-of-openflow-reading-list","text":"","title":"The Security Of OpenFlow: Reading List"},{"location":"#of","text":"W. Feng et al.: \"MEM: A Multi-Staged Eviction Mechanism of Flowtable for Software-Defined Datacenters,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 2020, pp. flow entries \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eSDDC\u6d41\u91cf\u7279\u6027\u7684\u6d41\u8868\u591a\u7ea7\u9a71\u9010\u673a\u5236\uff08MEM\uff09\uff0c\u5176\u4e2d\u5305\u62ec\u5206\u7c7b\uff0c\u8bc6\u522b\u548c\u9a71\u9010\u9636\u6bb5\u3002\u6839\u636e\u6d41\u7684\u6301\u4e45\u72b6\u6001\u548c\u57fa\u672c\u7edf\u8ba1\u4fe1\u606f\u5bf9\u6d41\u6761\u76ee\u8fdb\u884c\u4e24\u6b21\u5206\u7c7b\u3002\u7136\u540e\uff0c\u5f15\u5165\u4e00\u4e2a\u79f0\u4e3a\u81ea\u52a8\u56de\u5f52\u79fb\u52a8\u5e73\u5747\u7ebf\uff08ARMA\uff09\u7684\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u6a21\u578b\uff0c\u4ee5\u9884\u6d4b\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\u6d41\u6761\u76ee\u7684\u672a\u6765\u72b6\u6001\u3002\u6700\u540e\uff0c\u9884\u6d4b\u51fa\u7684\u6700\u8fd1\u672a\u4f7f\u7528\u7684\u6d41\u6761\u76ee\u5c06\u88ab\u9a71\u9010\u4ee5\u51cf\u8f7b\u6d41\u8868\u5b58\u50a8\u4e0a\u7684\u538b\u529b\u3002 C. Zhang et al.: \"Admission control in software-defined datacenter network in view of flow table capacity,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Honolulu, HI, 2018, pp. flow entries SDN\u4ea4\u6362\u673a\u7684\u529f\u80fd\u8584\u5f31\uff0c\u4f8b\u5982\u6d41\u8868\u5bb9\u91cf\uff0c\u7ed9\u57fa\u4e8eOpenFlow\u7684SDN\u7684\u53ef\u4f38\u7f29\u6027\u5e26\u6765\u4e86\u6311\u6218\u3002\u8003\u8651\u5230\u4ea4\u6362\u673a\u7684\u6d41\u8868\u5bb9\u91cf\uff0c\u5f53\u524d\u6d41\u8868\u5bb9\u91cf\u548c\u6570\u636e\u4e2d\u5fc3\u6240\u9700\u6d41\u6761\u76ee\u6570\u91cf\u4e4b\u95f4\u7684\u5de8\u5927\u5dee\u8ddd\u9700\u8981\u4e00\u79cd\u65b0\u9896\u7684\u63a5\u7eb3\u63a7\u5236\u673a\u5236\uff0c\u800c\u4e0d\u662f\u50cf\u4f20\u7edf\u7f51\u7edc\u90a3\u6837\u4ec5\u8003\u8651\u94fe\u8def\u5bb9\u91cf\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u63a7\u5236\u5668\u7ea7\u522b\u51c6\u5165\u63a7\u5236\u673a\u5236\uff0c\u5e76\u4f7f\u7528\u89c4\u8303\u7684\u4e09\u5c42\u6570\u636e\u4e2d\u5fc3\u62d3\u6251\u57fa\u4e8e\u6570\u503c\u6a21\u62df\u7ed3\u679c\u8bc4\u4f30\u4e86\u5176\u6709\u6548\u6027\u3002 G. Shen et al.: \"How Powerful Switches Should be Deployed: A Precise Estimation Based on Queuing Theory,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. flow entries SDN\u5bf9\u8bb8\u591a\u4f20\u7edf\u7684\u6570\u636e\u4e2d\u5fc3\u7f51\u7edc\uff08DCN\uff09\u8fdb\u884c\u4e86\u5347\u7ea7\uff0c\u4ee5\u63d0\u9ad8\u94fe\u8def\u5229\u7528\u7387\u548c\u7ba1\u7406\u7075\u6d3b\u6027\uff0c\u4f46\u662f\u5b83\u4eec\u7f3a\u4e4f\u9009\u62e9\u5177\u6709\u9002\u5f53\u6d41\u8868\u7a7a\u95f4\u7684\u4ee3\u7528SDN\u4ea4\u6362\u673a\u4ee5\u5b9e\u73b0\u5177\u6709\u6210\u672c\u6548\u76ca\u548c\u8282\u80fd\u7f51\u7edc\u7684\u8bf4\u660e\u3002\u672c\u6587\u586b\u8865\u4e86\u57fa\u4e8e\u6392\u961f\u8bba\u89e3\u51b3\u6d41\u8868\u7a7a\u95f4\u4f30\u8ba1\u95ee\u9898\u7684\u7a7a\u767d\u3002\u9996\u5148\uff0c\u5c06\u6d41\u8868\u6761\u76ee\u7684\u751f\u5b58\u8fc7\u7a0b\u5206\u4e3a\u5165\u5305\u8fc7\u7a0b\uff0c\u5904\u7406\u8fc7\u7a0b\u548c\u670d\u52a1\u8fc7\u7a0b\uff0c\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6392\u961f\u7cfb\u7edf\uff0c\u4ee5\u4f30\u8ba1\u6700\u5c11\u6570\u91cf\u7684SDN\u4ea4\u6362\u673a\u6d41\u8868\u6761\u76ee\u3002\u7b2c\u4e8c\uff0c\u5206\u6790DCN\u7684\u6d41\u91cf\u5206\u5e03\uff0c\u4ee5\u8ba1\u7b97\u6a21\u578b\u4e2d\u7684\u5173\u952e\u53c2\u6570\u3002\u7b2c\u4e09\uff0c\u57fa\u4e8eDCN\u4e2d\u7ed3\u6784\u5316\u62d3\u6251\u7684\u672c\u8d28\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u8def\u7531\u7b56\u7565\u7684\u6982\u7387\u6a21\u578b\uff0c\u4ee5\u91cf\u5316\u8def\u5f84\u9009\u62e9\u7684\u5f71\u54cd\u3002 B. Zhao et al.: \"Efficient and Consistent TCAM Updates,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. flow entries \u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\u7684\u52a8\u6001\u6027\u8d28\u8981\u6c42\u9891\u7e41\u66f4\u65b0\u4ea4\u6362\u673a\u6570\u636e\u5e73\u9762\u4e2d\u7684\u6d41\u8868\u3002\u73b0\u6709\u7684\u73b0\u6210\u4ea4\u6362\u673a\u6279\u91cf\u66f4\u65b0\u89c4\u5219\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u662f\u5728\u6279\u91cf\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u8f6c\u53d1\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u672c\u6587\u8bbe\u8ba1\u548c\u8bc4\u4f30\u4e86\u4e00\u4e2aTCAM\u66f4\u65b0\u4f18\u5316\u6846\u67b6\uff0c\u8be5\u6846\u67b6\u53ef\u4ee5\u5728\u4f7f\u7528\u5206\u5c42TCAM\u7ed3\u6784\u7684\u540c\u65f6\u4fdd\u8bc1\u6574\u4e2a\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u7684\u4e00\u81f4\u8f6c\u53d1\u3002\u6b64\u65b9\u6cd5\u57fa\u4e8e\u4fee\u6539\u540e\u7684\u6761\u76ee\u4f18\u5148\u5199\u56de\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u53ef\u663e\u7740\u51cf\u5c11TCAM\u6761\u76ee\u79fb\u52a8\u5e26\u6765\u7684\u5f00\u9500\u3002\u8fd8\u53ef\u4ee5\u68c0\u6d4b\u5230\u91cd\u65b0\u6392\u5e8f\u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u8fdb\u884c\u5904\u7406\u3002 Garegin Grigoryan et al.: 2018. PFCA: a programmable FIB caching architecture. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 97\u2013103. openflow TCAM\u6602\u8d35\u4e14\u8017\u80fd\u3002\u6b64\u5916\uff0cFIB\u7684\u6301\u7eed\u589e\u957f\u53ef\u80fd\u4f1a\u5bfc\u81f4TCAM\u6ea2\u51fa\u95ee\u9898\u3002\u7136\u800c\uff0c\u53ea\u6709\u4e00\u5c0f\u90e8\u5206FIB\u6761\u76ee\u627f\u8f7d\u4e86\u5927\u90e8\u5206\u7f51\u7edc\u6d41\u91cf\u3002\u56e0\u6b64\uff0cFIB\u7f13\u5b58\uff0c\u5373\u5728\u5feb\u901f\u5b58\u50a8\u5668\uff08\u4f8b\u5982TCAM\uff09\u4e2d\u5b89\u88c5\u6700\u6d41\u884c\u7684\u6761\u76ee\uff0c\u53ef\u80fd\u4f1a\u5927\u5927\u51cf\u5c11TCAM\u7684\u4f7f\u7528\u3002\u5728\u504f\u8bba\u6587\u4e2d\uff0c\u5229\u7528\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u6982\u5ff5\u6765\u8bbe\u8ba1\u5177\u6709\u4e24\u7ea7\u7f13\u5b58\u7684\u53ef\u7f16\u7a0bFIB\u7f13\u5b58\u4f53\u7cfb\u7ed3\u6784\uff08PFCA\uff09\u3002\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u7ba1\u9053\u7684\u7b97\u6cd5\u6765\u68c0\u6d4b\u7f13\u5b58\u4e2d\u7528\u4e8e\u9a71\u9010\u53d7\u5bb3\u8005\u7684\u6700\u4e0d\u6d41\u884c\u7684\u524d\u7f00\u3002 N. Huang et al.: \"Software-Defined Label Switching: Scalable Per-Flow Control in SDN,\" 2018 IEEE/ACM 26th International Symposium on Quality of Service (IWQoS), Banff, AB, Canada, 2018, pp. openflow \u4e3a\u4fdd\u7559\u6570\u636e\u5e73\u9762\u53ef\u4f38\u7f29\u6027\u7684\u540c\u65f6\u5b9e\u73b0\u6bcf\u6d41\u63a7\u5236\u3002\u73b0\u6709\u7684SDN\u67b6\u6784\u65e0\u6cd5\u6709\u6548\u5730\u5b9e\u73b0\u6bcf\u6d41\u63a7\u5236\uff1a\u5b83\u4eec\u8981\u4e48\u5bfc\u81f4\u6570\u636e\u5305\u7684\u989d\u5916\u5ef6\u8fdf\uff0c\u8981\u4e48\u7ed9\u4ea4\u6362\u673a\u5e26\u6765\u9ad8\u5b58\u50a8\u8d1f\u62c5\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u8f6f\u4ef6\u5b9a\u4e49\u7684\u6807\u7b7e\u4ea4\u6362\uff08SDLS\uff09\uff0c\u4ee5\u5b9e\u73b0\u6570\u636e\u5e73\u9762\u53ef\u6269\u5c55\u6027\u548c\u6309\u6d41\u63a7\u5236\u3002SDLS\u5c06\u4e2d\u592e\u63a7\u5236\u4e0e\u6807\u7b7e\u5207\u6362\u76f8\u7ed3\u5408\uff0c\u4ee5\u51cf\u8f7b\u5b58\u50a8\u8d1f\u62c5\uff0c\u540c\u65f6\u4fdd\u6301\u6bcf\u6d41\u63a7\u5236\u3002SDLS\u5c06\u8f6f\u4ef6\u4ea4\u6362\u673a\u5f15\u5165\u6570\u636e\u5e73\u9762\uff0c\u5e76\u5728\u533a\u57df\u4e2d\u7ba1\u7406\u7f51\u7edc\u4ee5\u5b9e\u73b0\u53ef\u4f38\u7f29\u6027\u3002SDLS\u4e0eOpenFlow\u517c\u5bb9\uff0c\u5e76\u91c7\u7528\u6df7\u5408\u6570\u636e\u5e73\u9762\u6765\u63d0\u4f9b\u6709\u6548\u7684\u6d41\u8bbe\u7f6e\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660eSDLS\u53ef\u4ee5\u5728\u5ef6\u8fdf\u6027\u80fd\u65b9\u9762\u8fbe\u5230\u6700\u4f73\uff0c\u540c\u65f6\u5c06\u6d41\u6761\u76ee\u548c\u6ea2\u51fa\u7684\u6570\u91cf\u51cf\u5c11\u4e8647\uff05\u4ee5\u4e0a\u3002 H. Xu et al.: \"Lightweight Flow Distribution for Collaborative Traffic Measurement in Software Defined Networks,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. flow entries \u6d41\u91cf\u7ea7\u522b\u7684\u7ec6\u7c92\u5ea6\u6d41\u91cf\u6d4b\u91cf\u4e2d\uff0c\u7531\u4e8e\u57fa\u4e8eTCAM\u7684\u6d41\u6761\u76ee\u4ec5\u63d0\u4f9b\u805a\u5408\u7684\u6d41\u91cf\u7edf\u8ba1\u4fe1\u606f\uff0c\u56e0\u6b64\u5148\u524d\u7684\u7814\u7a76\u5efa\u8bae\u5728SRAM\u4e2d\u6267\u884c\u6d41\u7ea7\u522b\u7684\u6d4b\u91cf\uff0c\u5e76\u901a\u8fc7\u534f\u4f5c\u6d41\u91cf\u6d4b\u91cf\u6765\u5e73\u8861\u6574\u4e2a\u7f51\u7edc\u4e0a\u7684\u6d4b\u91cf\u8d1f\u8f7d\u3002\u534f\u4f5c\u6d4b\u91cf\u7684\u5173\u952e\u95ee\u9898\u662f\u63d0\u4f9b\u4e00\u79cd\u5c06\u6d41\u91cf\u5206\u914d\u5230\u4ea4\u6362\u673a\u7684\u673a\u5236\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u4ea4\u6362\u673a\u90fd\u53ef\u4ee5\u6807\u8bc6\u8981\u6d4b\u91cf\u7684\u6d41\u91cf\u5b50\u96c6\u3002\u5148\u524d\u7684\u5de5\u4f5c\u96c6\u4e2d\u5728\u4f18\u5316\u4ea4\u6362\u673a\u4e4b\u95f4\u7684\u6d41\u5206\u914d\u4e0a\uff0c\u4f46\u662f\u5ffd\u7565\u4e86\u5b83\u4eec\u5f15\u5165\u6570\u636e\u5e73\u9762\u7684\u9ad8\u7a7a\u95f4\u548c\u6309\u6570\u636e\u5305\u5904\u7406\u7684\u5f00\u9500\uff0c\u8fd9\u5728\u5927\u578bSDN\u7cfb\u7edf\u4e2d\u6210\u4e3a\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8f7b\u91cf\u7ea7\u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u6d41\u91cf\u5206\u914d\u95ee\u9898\u3002\u5b83\u9075\u5faa\u901a\u8fc7\u6700\u5c0f\u5316\u6570\u636e\u5e73\u9762\u7a7a\u95f4\u548c\u5904\u7406\u5f00\u9500\u6765\u51cf\u8f7b\u6570\u636e\u5e73\u9762\u590d\u6742\u6027\u7684\u8bbe\u8ba1\u539f\u7406\u3002\u5728\u63a7\u5236\u5e73\u9762\u4e0a\uff0c\u5c06\u6d41\u91cf\u5206\u914d\u516c\u5f0f\u5316\u4e3a\u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u4f18\u5316\u95ee\u9898\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u901a\u8fc7\u8fb9\u7f18\u4ea4\u6362\u673a\u548c\u8fb9\u7f18/\u6838\u5fc3\u4ea4\u6362\u673a\u4e00\u8d77\u5b9e\u65bd\u534f\u4f5c\u6d4b\u91cf\u3002\u4eff\u771f\u8868\u660e\uff0c\u4e0e\u73b0\u6709\u6700\u597d\u7684\u5de5\u4f5c\u76f8\u6bd4\uff0c\u6240\u63d0\u51fa\u7684\u8f7b\u91cf\u7ea7\u89e3\u51b3\u65b9\u6848\u5728\u8d1f\u8f7d\u5e73\u8861\u65b9\u9762\u8fbe\u5230\u4e86\u53ef\u6bd4\u7684\u6027\u80fd\uff0c\u540c\u65f6\u5927\u5927\u51cf\u5c11\u4e86\u7a7a\u95f4\u5f00\u9500\u548c\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5904\u7406\u5f00\u9500\uff0c\u4f7f\u5176\u5728\u5b9e\u9645\u7cfb\u7edf\u4e2d\u66f4\u52a0\u5b9e\u7528\uff0c\u5bf9\u6d41\u91cf\u5206\u914d\u6240\u5e26\u6765\u7684\u989d\u5916\u5f00\u9500\u5f88\u654f\u611f\u3002 G. Zhao et al.: \"HiFi: Hybrid Rule Placement for Fine-Grained Flow Management in SDNs,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. \u5728\u672c\u6587\u4e2d\uff0c\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86HiFi\uff0c\u8be5\u7cfb\u7edf\u53ef\u901a\u8fc7\u6700\u5c11\u7684\u6d41\u6761\u76ee\u6570\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u7ba1\u7406\u3002\u4e3a\u6b64\uff0cHiFi\u91c7\u7528\u4e24\u6b65\u65b9\u6cd5\uff1a\u901a\u914d\u7b26\u6761\u76ee\u5b89\u88c5\u548c\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u7cbe\u786e\u5339\u914d\u6761\u76ee\u5b89\u88c5\u3002\u4f46\u662f\uff0c\u5982\u4f55\u6700\u4f73\u5730\u5b89\u88c5\u901a\u914d\u7b26\u548c\u5b8c\u5168\u5339\u914d\u6d41\u6761\u76ee\u662f\u5f88\u68d8\u624b\u7684\u3002\u56e0\u6b64\uff0cHiFi\u7528\u6709\u754c\u56e0\u7d20\u7684\u8fd1\u4f3c\u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u5e76\u4ee5\u6848\u4f8b\u7814\u7a76\u7684\u65b9\u5f0f\u8003\u8651\u5982\u4f55\u901a\u8fc7\u7ec6\u7c92\u5ea6\u7684\u6d41\u91cf\u7ba1\u7406\u5b9e\u73b0\u7f51\u7edc\u8303\u56f4\u7684\u8d1f\u8f7d\u5e73\u8861\u3002\u5b9e\u9a8c\u548c\u4eff\u771f\u7ed3\u679c\u5747\u8868\u660e\uff0c\u4e0e\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u6700\u65b0\u65b9\u6cd5\u76f8\u6bd4\uff0cHiFi\u53ef\u4ee5\u5c06\u6240\u9700\u6d41\u6761\u76ee\u7684\u6570\u91cf\u51cf\u5c11\u7ea645\uff05-69\uff05\uff0c\u5e76\u5c06\u63a7\u5236\u5f00\u9500\u51cf\u5c1128\uff05-50\uff05\u3002 C. He et al.: \"POMP: Protocol Oblivious SDN Programming with Automatic Multi-Table Pipelining,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications, Honolulu, HI, 2018, pp. POMP\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u540c\u65f6\u652f\u6301\u534f\u8bae\u9057\u5fd8\u8f6c\u53d1\u548c\u81ea\u52a8\u591a\u8868\u6d41\u6c34\u7ebf\u64cd\u4f5c\u7684SDN\u7f16\u7a0b\u73af\u5883\u3002POMP\u5e94\u7528\u9759\u6001\u6c61\u70b9\u5206\u6790\u6280\u672f\u4ece\u7a0b\u5e8f\u5458\u7f16\u5199\u7684\u6570\u636e\u5e73\u9762\u4e0d\u53ef\u77e5\u7f51\u7edc\u7b56\u7565\u81ea\u52a8\u63a8\u65ad\u7d27\u51d1\u9ad8\u6548\u7684\u591a\u8868\u7ba1\u9053\u3002\u8fd0\u884c\u65f6\u7cfb\u7edf\u8ddf\u8e2a\u7f51\u7edc\u7b56\u7565\u7684\u6267\u884c\uff0c\u5e76\u81ea\u52a8\u751f\u6210\u8868\u6761\u76ee\u3002POMP\u5728\u6c61\u70b9\u5206\u6790\u4e2d\u8fd8\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u4f9d\u8d56\u6807\u7b7e\u6982\u5ff5\uff0c\u8be5\u6982\u5ff5\u4e0e\u7f51\u7edc\u7b56\u7565\u7684\u8fd0\u884c\u65f6\u4fe1\u606f\u76f8\u7ed3\u5408\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c11\u8868\u9879\u7684\u6570\u91cf\u3002\u4e0eP4\u4e00\u6837\uff0cPOMP\u901a\u8fc7\u63d0\u4f9b\u7f51\u7edc\u534f\u8bae\u89c4\u8303\u8bed\u8a00\u6765\u652f\u6301\u534f\u8bae\u65e0\u5173\u7684\u7f16\u7a0b\u3002\u53ef\u4ee5\u6839\u636e\u534f\u8bae\u89c4\u8303\u81ea\u52a8\u751f\u6210\u6570\u636e\u5305\u89e3\u6790\u5668\u3002POMP\u652f\u6301\u4e24\u4e2a\u4e3b\u8981\u7684\u65b0\u5174SDN\u5e73\u53f0POF\u548cP4\uff0c\u56e0\u6b64\uff0c\u7528POMP\u7f16\u5199\u7684\u7f51\u7edc\u7b56\u7565\u53ef\u4ee5\u5728\u652f\u6301POF\u6216P4\u7684\u4efb\u4f55\u4ea4\u6362\u673a\u4e0a\u79fb\u690d\u3002\u53ef\u4ee5\u6839\u636e\u534f\u8bae\u89c4\u8303\u81ea\u52a8\u751f\u6210\u6570\u636e\u5305\u89e3\u6790\u5668\u3002 M. Yu et al.: \"Flow Table Security in SDN: Adversarial Reconnaissance and Intelligent Attacks,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. \u672c\u7bc7\u63d0\u51fa\u4e86\u4e00\u79cd\u9488\u5bf9openflow \u6d41\u8868\u7684\u667a\u80fd\u653b\u51fb\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5229\u7528\u6d41\u8868\u7684\u7279\u5b9a\u4e8e\u9ad8\u901f\u7f13\u5b58\u7684\u884c\u4e3a\u6765\u63a8\u65ad\u5176\u5185\u90e8\u914d\u7f6e\u548c\u72b6\u6001\uff0c\u7136\u540e\u76f8\u5e94\u5730\u8bbe\u8ba1\u653b\u51fb\u53c2\u6570\u3002 Q. Li.:Security Policy Violations in SDN Data Plane,TON,2018 Keywords: SDN, data plane, policy violation SDN\u5229\u7528\u96c6\u4e2d\u5f0f\u63a7\u5236\u5668\u5c06\u6570\u636e\u5305\u5904\u7406\u89c4\u5219\u5206\u53d1\u5230\u7f51\u7edc\u4ea4\u6362\u673a\u3002\u4f46\u662f\uff0c\u89c4\u5219\u901a\u5e38\u662f\u7531\u4e0d\u540c\u7ec4\u7ec7\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\u751f\u6210\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u80fd\u5728\u6570\u636e\u5e73\u9762\u4e2d\u76f8\u4e92\u51b2\u7a81\u5e76\u5bfc\u81f4\u8fdd\u53cd\u5b89\u5168\u89c4\u5219\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5bf9SDN\u4e2d\u7684\u89c4\u5219\u51b2\u7a81\u95ee\u9898\u8fdb\u884c\u5206\u6790\uff0c\u5e76\u53d1\u73b0\u4e86\u7531\u4e8e\u89c4\u5219\u51b2\u7a81\u800c\u5f15\u8d77\u7684\u65b0\u7684\u9690\u853d\u901a\u9053\u653b\u51fb\u3002\u6700\u540e\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u79d8\u5bc6\u901a\u9053\u9632\u5fa1CCD\uff0c\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cCCD\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u548c\u89e3\u51b3\u89c4\u5219\u51b2\u7a81\u6765\u9632\u6b62\u79d8\u5bc6\u901a\u9053\u653b\u51fb\u3002","title":"OF\u4ea4\u6362\u673a\u6d41\u8868\u5b89\u5168"},{"location":"#_1","text":"Arjun Roy et al.: 2018. Cloud Datacenter SDN Monitoring: Experiences and Challenges. In Proceedings of the Internet Measurement Conference 2018 ( IMC \u201918 ). Association for Computing Machinery, New York, NY, USA, 464\u2013470. keyword\uff1aNetwork measurement; Cloud computing; Network monitoring; \u8fd9\u7bc7\u8bba\u6587\u9762\u5bf9\u4e91\u8ba1\u7b97\u6570\u636e\u4e2d\u5fc3\u7684\u7f51\u7edc\u67b6\u6784\u6240\u9700\u8981\u7684\u5feb\u901f\u68c0\u6d4b\u548c\u7f13\u89e3\u67b6\u6784\u6545\u969c\u95ee\u9898\uff0c\u63cf\u8ff0\u4e86\u6784\u5efa\u76f8\u5e94\u7684\u57fa\u4e8e\u4e91\u7684\u6545\u969c\u76d1\u63a7\u7cfb\u7edf\u6240\u9762\u4e34\u7684\u6311\u6218\uff0c\u5e76\u9610\u660e\u4e86\u865a\u62df\u5316\u67b6\u6784\u4e0b\u5bf9\u6570\u636e\u4e2d\u5fc3\u6545\u969c\u7ba1\u7406\u7684\u5f71\u54cd\uff0c\u7ed3\u8bba\u663e\u793a\uff0c\u865a\u62df\u5316\uff0c\u79df\u6237\u8f6f\u4ef6\u548c\u7f51\u7edc\u7ed3\u6784\u7684\u8f83\u4f4e\u5c42\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u6545\u969c\u68c0\u6d4b\u548c\u8bca\u65ad\u5de5\u4f5c\u7684\u5404\u4e2a\u4e0d\u540c\u65b9\u9762\u5373\u5b58\u5728\u7b80\u5316\uff0c\u4e5f\u5b58\u5728\u590d\u6742\u5316\u3002 S. Lee et al.: AudiSDN: Automated Detection of Network Policy Inconsistencies in Software-Defined Networks, IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. SDN, Software-Defined Networking, Network Policy Inconsistency AudiSDN\uff0c\u8fd9\u662f\u4e00\u4e2a\u81ea\u52a8\u7684\u6a21\u7cca\u6d4b\u8bd5\u6846\u67b6\uff0c\u65e8\u5728\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u3002\u5728OpenFlow\u7f51\u7edc\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u7b56\u7565\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u5982\u7528\u6237\u505a\u51fa\u7684\u51b3\u7b56\u4e0e\u6240\u4e0b\u53d1\u7684\u7b56\u7565\u5728\u5b9e\u9645\u6267\u884c\u7684\u65f6\u5019\u5b58\u5728\u67d0\u4e9b\u6f0f\u6d1e\u3002AudiSDN\u5c06\u7528\u6237\u6240\u8981\u4e0b\u53d1\u7684\u51b3\u7b56\uff0c\u8fdb\u884c\u590d\u5236\uff0c\u5e76\u4ee5\u4fee\u6539\u5185\u5bb9\u7684\u65b9\u5f0f\u8fdb\u884c\u89c4\u5219\u7684\u6a21\u7cca\u5316\uff0c\u4f7f\u5f97\u539f\u89c4\u5219\u4e0e\u6a21\u7cca\u89c4\u5219\u5171\u540c\u4e0b\u53d1\u5230\u5e95\u5c42\u8bbe\u5907\u4e4b\u4e2d\u3002\u518d\u901a\u8fc7\u4e0d\u4e00\u81f4\u6027\u68c0\u6d4b\u6765\u5224\u5b9a\u662f\u5426\u5b58\u5728\u4e0d\u4e00\u81f4\u60c5\u51b5\u3002\u5b9e\u9a8c\u4e2d\uff0cAudiSDN\u6d4b\u8bd5\u4e86Floodlight\u548cONOS\u7684\u7ed3\u679c\u3002 Jehandad Khan et al.: 2018. Query language for large-scale P4 network debugging. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 162\u2013164. openflow \u901a\u8fc7\u5c06\u7f51\u7edc\u62d3\u6251\u4fe1\u606f\u4e0e\u72b6\u6001\u6536\u96c6\u5408\u5e76\uff0c\u6b64\u8bba\u6587\u63a2\u7d22\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u6765\u67e5\u770b\u7f51\u7edc\u76d1\u89c6\u548c\u6545\u969c\u6392\u9664\u95ee\u9898\u4ee5\u5bf9\u73b0\u4ee3\u6570\u636e\u4e2d\u5fc3\u8fdb\u884c\u8bca\u65ad\u548c\u89e3\u51b3\u95ee\u9898\u3002\u5c06\u6574\u4e2a\u7f51\u7edc\u62bd\u8c61\u4e3a\u4e00\u4e2a\u5b9e\u4f53\u53ef\u7b80\u5316\u8c03\u8bd5\u8fc7\u7a0b\uff0c\u4f7f\u5168\u9762\u7684\u6839\u672c\u539f\u56e0\u5206\u6790\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u4f7f\u7f51\u7edc\u7ba1\u7406\u5458\u65e0\u9700\u5904\u7406\u8bb8\u591a\u8bbe\u5907\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u751f\u4ea7\u7387\u548c\u6548\u7387\u3002\u8fd9\u79cd\u5408\u5e76\u5141\u8bb8\u5c06\u4ee5\u9886\u57df\u7279\u5b9a\u8bed\u8a00\u8868\u8fbe\u7684\u6027\u80fd\u67e5\u8be2\u8f6c\u6362\u4e3a\u5728\u7f51\u7edc\u4e2d\u6536\u96c6\u5fc5\u8981\u72b6\u6001\u7684\u4e0d\u540c\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u5c0f\u6bb5\u4ee3\u7801\u3002\u8fd9\u79cd\u5408\u5e76\u53ef\u4ee5\u51cf\u5c11\u6bcf\u4e2a\u4ea4\u6362\u673a\u7684\u5f00\u9500\uff0c\u5e76\u51cf\u8f7b\u8bbe\u5907\u7684\u8d1f\u62c5\uff0c\u5e76\u4e3a\u7ba1\u7406\u5458\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u62bd\u8c61\u3002 Jinghan Zhou et al.: 2018. APF: fast network all-pair reachability calculation. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 172\u2013173. programmable data plane \u7f51\u7edc\u9a8c\u8bc1\u4e3b\u8981\u662f\u6839\u636e\u7f51\u7edc\u4e0d\u53d8\u6027\u6216\u8fd0\u8425\u5546\u7684\u4fe1\u5ff5\u6765\u68c0\u67e5\u7f51\u7edc\u72b6\u6001\u3002\u4e8b\u5148\u5feb\u901f\u8ba1\u7b97\u7f51\u7edc\u7684\u6240\u6709\u5bf9\u53ef\u8fbe\u6027\uff0c\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u67e5\u8be2\u6216\u6574\u4f53\u5206\u6790\uff0c\u53ef\u4ee5\u4e3a\u7f51\u7edc\u9a8c\u8bc1\u63d0\u4f9b\u5de8\u5927\u5e2e\u52a9\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5feb\u901f\u5168\u5bf9\u53ef\u8fbe\u6027\u8ba1\u7b97\u7b97\u6cd5Atomic Predicates Flooding\uff08APF\uff09\u3002\u5728\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u57fa\u4e8e\u7f51\u7edc\u96fe\u5316\u7684\u65b0\u7b97\u6cd5\u6bd4\u6ca1\u6709\u7f51\u7edc\u96fe\u5316\u7684\u73b0\u6709\u7b97\u6cd5\u5feb\u7ea6\u4e09\u5230\u56db\u4e2a\u6570\u91cf\u7ea7\u3002\u5728\u5927\u591a\u6570\u6570\u636e\u96c6\u4e0a\uff0cAPF\u751a\u81f3\u6bd4\u57fa\u4e8eWarshall\u7684\u5177\u6709\u96fe\u5316\u529f\u80fd\u7684\u5168\u5bf9\u53ef\u8fbe\u6027\u7b97\u6cd5\u5feb2\u81f35\u500d\u3002 Zehua Guo et al.: 2019. RetroFlow: maintaining control resiliency and flow programmability for software-defined WANs. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 1, 1\u201310. openflow \u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u5c06\u8f6f\u4ef6\u5b9a\u4e49\u7684WAN\u5206\u4e3a\u591a\u4e2a\u57df\uff0c\u8fd9\u4e9b\u57df\u7531\u5177\u6709\u903b\u8f91\u96c6\u4e2d\u89c6\u56fe\u7684\u591a\u4e2a\u63a7\u5236\u5668\u63a7\u5236\u3002\u5728\u63a7\u5236\u5668\u6545\u969c\u4e0b\uff0c\u5c06\u8131\u673a\u4ea4\u6362\u673a\u7684\u63a7\u5236\u4ece\u53d1\u751f\u6545\u969c\u7684\u63a7\u5236\u5668\u91cd\u65b0\u6620\u5c04\u5230\u5176\u4ed6\u6d3b\u52a8\u63a7\u5236\u5668\u3002\u7531\u4e8e\u589e\u52a0\u4e86\u63a7\u5236\u5668-\u4ea4\u6362\u673a\u7684\u901a\u4fe1\u5f00\u9500\uff0c\u73b0\u6709\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u4f1a\u4f7f\u6d3b\u52a8\u7684\u63a7\u5236\u5668\u8fc7\u8f7d\uff0c\u4ece\u800c\u4e2d\u65ad\u5176\u6b63\u5e38\u8fd0\u884c\uff0c\u6216\u8005\u964d\u4f4e\u7f51\u7edc\u6027\u80fd\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51faRetroFlow\u4ee5\u5b9e\u73b0\u4f4e\u901a\u4fe1\u5f00\u9500\uff0c\u800c\u4e0d\u4f1a\u5728\u63a7\u5236\u5668\u6545\u969c\u671f\u95f4\u4e2d\u65ad\u6d3b\u52a8\u63a7\u5236\u5668\u7684\u6b63\u5e38\u5904\u7406\u3002\u901a\u8fc7\u667a\u80fd\u5730\u914d\u7f6e\u4e00\u7ec4\u5728\u4f20\u7edf\u8def\u7531\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u7684\u9009\u5b9a\u8131\u673a\u4ea4\u6362\u673a\uff0cRetroFlow\u53ef\u4ee5\u4f7f\u6d3b\u52a8\u63a7\u5236\u5668\u5728\u63a7\u5236SDN\u7684\u6d41\u53ef\u7f16\u7a0b\u6027\u7684\u540c\u65f6\uff0c\u4e0d\u63a7\u5236\u9009\u5b9a\u7684\u8131\u673a\u4ea4\u6362\u673a\u3002RetroFlow\u8fd8\u53ef\u4ee5\u901a\u8fc7SDN\u8def\u7531\u6a21\u5f0f\u5c06\u8131\u673a\u4ea4\u6362\u673a\u7684\u63a7\u5236\u667a\u80fd\u5730\u8f6c\u79fb\u5230\u6d3b\u52a8\u63a7\u5236\u5668\uff0c\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u8fd9\u4e9b\u8131\u673a\u4ea4\u6362\u673a\u4e0e\u6d3b\u52a8\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u5f00\u9500\u3002 Yu Zhou et al.: 2019. P4Tester: efficient runtime rule fault detection for programmable data planes. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 5, 1\u201310. programmable data plane \u672c\u6587\u63d0\u51fa\u4e86P4Tester\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8e\u5bf9\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e0a\u7684\u8fd0\u884c\u65f6\u89c4\u5219\u6545\u969c\u8fdb\u884c\u6545\u969c\u6392\u9664\u7684\u65b0\u578b\u7f51\u7edc\u6d4b\u8bd5\u7cfb\u7edf\u3002\u9996\u5148\uff0cP4Tester\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u4e8c\u8fdb\u5236\u51b3\u7b56\u56fe\u7684\u65b0\u7684\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\uff0c\u8be5\u8868\u793a\u5f62\u5f0f\u53ef\u4ee5\u4e3a\u5404\u79cdP4\u5b9a\u4e49\u7684\u6570\u636e\u5e73\u9762\u529f\u80fd\u9ad8\u6548\u751f\u6210\u63a2\u9488\u3002\u5176\u6b21\uff0cP4Tester\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u63a2\u9488\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u4f7f\u7528\u6e90\u8def\u7531\u6765\u8f6c\u53d1\u63a2\u9488\u3002\u8be5\u63a2\u9488\u6a21\u578b\u6781\u5927\u5730\u51cf\u5c11\u4e86\u89c4\u5219\u6545\u969c\u68c0\u6d4b\u7684\u5f00\u9500\uff0c\u5373\u4ec5\u9700\u8981\u4e00\u53f0\u670d\u52a1\u5668\u5373\u53ef\u4e3a\u5927\u578b\u7f51\u7edc\u751f\u6210\u63a2\u9488\uff0c\u5e76\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u4e86\u63a2\u9488\u7684\u6570\u91cf\u3002\u6b64\u5916\uff0c\u8be5\u63a2\u9488\u6a21\u578b\u53ef\u4ee5\u6d4b\u8bd5\u7f51\u7edc\u4e2d\u7684\u6240\u6709\u8868\u89c4\u5219\uff0c\u4ece\u800c\u5b9e\u73b0\u5b8c\u6574\u7684\u6545\u969c\u8986\u76d6\u3002\u6839\u636e\u5b9e\u9645\u6570\u636e\u96c6\u8fdb\u884c\u7684\u8bc4\u4f30\u8868\u660eP4Tester \u53ef\u4ee5\u6709\u6548\u5730\u68c0\u67e5\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e2d\u7684\u6240\u6709\u89c4\u5219\uff0c\u751f\u6210\u7684\u63a2\u9488\u6bd4ATPG\u548cPronto\u5c1159\uff05\uff0c\u6bd4ATPG\u5feb\u4e24\u4e2a\u6570\u91cf\u7ea7\uff0c\u5e76\u5728\u4e00\u79d2\u949f\u5185\u5bf9BMv2\u548cTofino\u4e0a\u7684\u591a\u4e2a\u89c4\u5219\u6545\u969c\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002 Xinbo Liu et al.: 2019. ATMPA: attacking machine learning-based malware visualization detection methods via adversarial examples. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 38, 1\u201310. programmable data plane \u81ea\u52a8\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u6280\u672f\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\uff0c\u5176\u4e2d\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\uff08ML\uff09\u7684\u53ef\u89c6\u5316\u68c0\u6d4b\u65b9\u6cd5\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\u3002\u672c\u6587\u8bc1\u660e\u4e86\u57fa\u4e8eML\u7684\u6700\u65b0\u53ef\u89c6\u5316\u68c0\u6d4b\u65b9\u6cd5\u5bb9\u6613\u53d7\u5230\u5bf9\u6297\u793a\u4f8b\uff08AE\uff09\u653b\u51fb\u3002\u5e76\u5f00\u53d1\u4e86\u4e00\u79cd\u57fa\u4e8e\u68af\u5ea6\u4e0b\u964d\u548cL\u7684\u65b0\u578b\u5bf9\u6297\u7eb9\u7406\u6076\u610f\u8f6f\u4ef6\u6444\u52a8\u653b\u51fb\uff08ATMPA\uff09\u65b9\u6cd5-norm\u4f18\u5316\u65b9\u6cd5\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5728\u8f6c\u6362\u540e\u7684\u6570\u636e\u96c6\u4e0a\u5f15\u5165\u4e00\u4e9b\u5fae\u5c0f\u7684\u5e72\u6270\uff0c\u4ece\u800c\u4f7f\u57fa\u4e8eML\u7684\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u65b9\u6cd5\u5b8c\u5168\u5931\u8d25\u3002 Hui Cai et al.: 2019. Towards privacy-preserving data trading for web browsing history. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 25, 1\u201310. openflow \u672c\u6587\u63d0\u51fa\u4e86PEATSE\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8eWeb\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u7684\u65b0\u7684\u9690\u79c1\u4fdd\u62a4dAta\u4ea4\u6613\u6846\u67b6\u3002\u5b83\u8003\u8651\u4e86\u7528\u6237\u7684\u5404\u79cd\u9690\u79c1\u504f\u597d\u548c\u4ed6\u4eec\u7684Web\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u7684\u5b9e\u7528\u7a0b\u5e8f\u3002PEATSE\u5728\u5df2\u53d1\u5e03\u7684\u6d4f\u89c8\u8bb0\u5f55\u4e0a\u5e72\u6270\u7528\u6237\u7684\u8be6\u7ec6\u6d4f\u89c8\u65f6\u95f4\uff0c\u4ee5\u4fdd\u62a4\u7528\u6237\u9690\u79c1\uff0c\u540c\u65f6\u5e73\u8861\u9690\u79c1\u4e0e\u5b9e\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6743\u8861\u3002\u901a\u8fc7\u57fa\u4e8e\u771f\u5b9e\u6570\u636e\u7684\u5b9e\u9a8c\uff0c\u6211\u4eec\u7684\u5206\u6790\u548c\u8bc4\u4f30\u7ed3\u679c\u8868\u660ePEATSE\u786e\u5b9e\u5b9e\u73b0\u4e86\u7528\u6237\u9690\u79c1\u4fdd\u62a4\uff0c\u6570\u636e\u6d88\u8d39\u8005\u7684\u51c6\u786e\u6027\u8981\u6c42\uff0c\u771f\u5b9e\u6027\uff0c\u4e2a\u4eba\u5408\u7406\u6027\u4ee5\u53ca\u9884\u7b97\u5e73\u8861\u3002 Mohammad Jahanian et al.: 2019. Name Space Analysis: Verification of Named Data Network Data Planes. In Proceedings of the 6th ACM Conference on Information-Centric Networking (ICN \u201919). Association for Computing Machinery, New York, NY, USA, 44\u201354. programmable data plane \u672c\u6587\u63d0\u51fa\u4e86\u540d\u79f0\u7a7a\u95f4\u5206\u6790\uff08NSA\uff09\uff0c\u4e00\u79cd\u7528\u4e8e\u5bf9NDN\u6570\u636e\u5e73\u9762\u8fdb\u884c\u5efa\u6a21\u548c\u5206\u6790\u7684\u7f51\u7edc\u9a8c\u8bc1\u6846\u67b6\u3002NSA\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5feb\u7167\u4f5c\u4e3a\u8f93\u5165\uff0c\u6bcf\u4e2a\u5feb\u7167\u4ee3\u8868\u6570\u636e\u5e73\u9762\u7684\u7279\u5b9a\u72b6\u6001\u3002\u7136\u540e\uff0c\u5b83\u6839\u636e\u6307\u5b9a\u7684\u5c5e\u6027\u63d0\u4f9b\u9a8c\u8bc1\u7ed3\u679c\u3002NSA\u5efa\u7acb\u5728\u6807\u5934\u7a7a\u95f4\u5206\u6790\u7406\u8bba\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u4f8b\u5982\u4ee5\u7075\u6d3b\u7684\u683c\u5f0f\u652f\u6301\u53ef\u53d8\u5927\u5c0f\u7684\u6807\u5934\uff0c\u5f15\u5165\u540d\u79f0\u7a7a\u95f4\u529f\u80fd\uff0c\u5e76\u5141\u8bb8\u57fa\u4e8e\u540d\u79f0\u7684\u5c5e\u6027\uff0c\u4f8b\u5982\u5185\u5bb9\u53ef\u8bbf\u95ee\u6027\u548c\u540d\u79f0\u6cc4\u6f0f\u81ea\u7531\u3002\u8fd9\u4e9b\u91cd\u8981\u7684\u8865\u5145\u53cd\u6620\u4e86NDN\u7684\u884c\u4e3a\u548c\u8981\u6c42\uff0c\u8981\u6c42\u5efa\u6a21\u548c\u9a8c\u8bc1\u57fa\u7840\u4e0e\u4f20\u7edf\u7684\u4ee5\u4e3b\u673a\u4e3a\u4e2d\u5fc3\u7684\u7f51\u7edc\u6839\u672c\u4e0d\u540c\u3002 X. Jia et al.: \"Link fault protection and traffic engineering in hybrid SDN networks,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Honolulu, HI, 2018, pp. \u5728\u5177\u6709SDN\u548c\u975eSDN\u4ea4\u6362\u673a\u7684\u6df7\u5408\u7f51\u7edc\u4e2d\uff0c\u73b0\u6709\u94fe\u8def\u6545\u969c\u4fdd\u62a4\u7684\u89e3\u51b3\u65b9\u6848\u9700\u8981\u8f83\u957f\u7684\u8ba1\u7b97\u65f6\u95f4\u548c\u8f83\u9ad8\u7684\u914d\u7f6e\u5f00\u9500\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cdHybrid-Hie\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u5b9e\u73b0\u6df7\u5408SDN\u7f51\u7edc\u4e2d\u7684\u5feb\u901f\u91cd\u8def\u7531\u548c\u8d1f\u8f7d\u5e73\u8861\u3002\u672c\u6587\u901a\u8fc7\u9884\u6d4b\u94fe\u63a5\u5229\u7528\u7387\u6765\u9884\u5148\u5728\u6bcf\u4e2a\u5907\u4efd\u8def\u5f84\u4e0a\u914d\u7f6e\u5206\u914d\u6bd4\u4f8b\u3002\u4e0e\u73b0\u6709\u89e3\u51b3\u65b9\u6848\u76f8\u6bd4\uff0c\u53ef\u4ee51\uff09\u5b9e\u73b0\u57df\u95f4\u94fe\u63a5\u7684\u6709\u6548\u6545\u969c\u6062\u590d\uff0c\u4ee5\u53ca2\uff09\u5b9e\u73b0\u66f4\u597d\u7684\u8d1f\u8f7d\u5e73\u8861\u548c\u6062\u590d\u8def\u5f84\u6269\u5c55\u3002","title":"\u7f51\u7edc\u67b6\u6784\u5b89\u5168\uff0c\u68c0\u6d4b\uff0c\u6545\u969c\u6062\u590d"},{"location":"#_2","text":"L. Tang et al.: \"SpreadSketch: Toward Invertible and Network-Wide Detection of Superspreaders,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. p4 \u4e3a\u5b9e\u65f6\u51c6\u786e\u5730\u5927\u89c4\u6a21\u68c0\u6d4b\u8d85\u7ea7\u4f20\u64ad\u8005\u7684\u95ee\u9898\u3002\u8bba\u6587\u63d0\u51faSpreadSketch\uff0c\u8fd9\u662f\u4e00\u79cd\u53ef\u9006\u7684\u8349\u56fe\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u7f51\u7edc\u8303\u56f4\u7684\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\u68c0\u6d4b\uff0c\u5e76\u5728\u5185\u5b58\u7a7a\u95f4\uff0c\u6027\u80fd\u548c\u51c6\u786e\u6027\u65b9\u9762\u63d0\u4f9b\u4e86\u7406\u8bba\u4e0a\u7684\u4fdd\u8bc1\u3002SpreadSketch\u8ddf\u8e2a\u5019\u9009\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\uff0c\u5e76\u5c06\u4f30\u8ba1\u7684\u6247\u51fa\u6269\u5c55\u5d4c\u5165\u5c0f\u578b\u548c\u9759\u6001\u5185\u5b58\u7a7a\u95f4\u5185\u7684\u4e8c\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\u4e2d\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5408\u5e76\u591a\u4e2aSpreadSketch\u5b9e\u4f8b\uff0c\u4ee5\u63d0\u4f9b\u6574\u4e2a\u7f51\u7edc\u7684\u6d4b\u91cf\u89c6\u56fe\uff0c\u4ee5\u6062\u590d\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\u53ca\u5176\u4f30\u8ba1\u7684\u6247\u51fa\u3002 \u8bc4\u4f30\u8868\u660e\uff0cSpreadSketch\u4e0e\u6700\u65b0\u7684\u8349\u56fe\u76f8\u6bd4\uff0c\u5177\u6709\u66f4\u9ad8\u7684\u51c6\u786e\u6027\u548c\u6027\u80fd\u3002 Garegin Grigoryan et al.: 2018. LAMP: prompt layer 7 attack mitigation with programmable data planes. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 158\u2013159. openflow LAMP\uff0c\u5373\u5177\u6709\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u7b2c7\u5c42\u653b\u51fb\u7f13\u89e3\u3002 LAMP\u8ddf\u8e2a\u8fdb\u5165\u53d7\u653b\u51fb\u7f51\u7edc\u7684\u6bcf\u4e2a\u6d41\u7684\u8def\u5f84\u3002\u5982\u679c\u6700\u7ec8\u4e3b\u673a\u5e94\u7528\u7a0b\u5e8f\u68c0\u6d4b\u5230\u5165\u4fb5\u4f01\u56fe\uff0c\u5219\u4f1a\u901a\u8fc7\u5728\u4fe1\u53f7\u5305\u7684IP\u9009\u9879\u5b57\u6bb5\u4e2d\u5d4c\u5165\u4fe1\u53f7\u6807\u5fd7\u548c\u653b\u51fb\u8005\u7684IP\u5730\u5740\u6765\u751f\u6210\u653b\u51fb\u8b66\u62a5\u3002 \u5047\u5b9a\u6b64\u7c7b\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u4fee\u6539\u8b66\u62a5\u6d88\u606f\u7684IP\u6570\u636e\u5305\u5b57\u6bb5\u7684\u7279\u6743\u3002 \u8b66\u62a5\u5c06\u76f4\u63a5\u53d1\u9001\u5230\u6700\u8fd1\u7684\u4ea4\u6362\u673a\uff0c\u8be5\u4ea4\u6362\u673a\u6700\u7ec8\u5c06\u6570\u636e\u5305\u8f6c\u53d1\u5230\u627f\u8f7d\u539f\u59cb\u6076\u610f\u6d41\u91cf\u7684\u5165\u53e3\u4ea4\u6362\u673a\u3002 \u6536\u5230\u8b66\u62a5\u540e\uff0c\u5165\u53e3\u4ea4\u6362\u673a\u5c06\u4fee\u6539\u5176\u6d41\u63a7\u5236\u7b56\u7565\uff0c\u4ee5\u963b\u6b62\u6765\u81ea\u653b\u51fb\u8005\u7684\u540e\u7eed\u6d41\u91cf\u3002 \u8fd9\u4e2a\u7f13\u89e3\u7b56\u7565\u81f3\u5c11\u5177\u6709\u4e09\u4e2a\u4f18\u70b9\uff1a\uff081\uff09\u5b83\u4f7f\u7f51\u7edc\u8303\u56f4\u5185\u7684\u534f\u4f5c\u68c0\u6d4b\u548c\u653b\u51fb\u7f13\u89e3\u6210\u4e3a\u53ef\u80fd\u3002 \u7ec8\u7aef\u4e3b\u673a\u83b7\u5f97\u7684\u68c0\u6d4b\u7ed3\u679c\u53ef\u4ee5\u91cd\u65b0\u7528\u4e8e\u6574\u4e2a\u7f51\u7edc\u7684\u670d\u52a1\uff1b \uff082\uff09\u7531\u4e8e\u7f51\u7edc\u8fb9\u7f18\u8fc5\u901f\u963b\u585e\u4e86\u7f51\u7edc\u5185\u6076\u610f\u6d41\u91cf\uff0c\u7f51\u7edc\u5185\u6076\u610f\u6d41\u91cf\u5927\u5927\u51cf\u5c11\u4e86\uff1b \uff083\uff09\u4e0e\u73b0\u6709\u7684SDN\u65b9\u6cd5\u76f8\u6bd4\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u8f7b\u91cf\u548c\u9ad8\u6548\u7684\u7f51\u7edc\u64cd\u4f5c\uff0c\u5728\u73b0\u6709\u7684SDN\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981SDN\u63a7\u5236\u5668\u6765\u5f25\u5408\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7edc\u5c42\u670d\u52a1\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002 Jan Ku\u010dera et al.: 2018. Hardware acceleration of intrusion detection systems for high-speed networks. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 177\u2013178. programmable data plane \u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\uff08IDS\uff09\u662f\u4fdd\u62a4\u8ba1\u7b97\u673a\u7f51\u7edc\u5b89\u5168\u7684\u6d41\u884c\u6280\u672f\u4e4b\u4e00\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u7684\u9ad8\u8ba1\u7b97\u590d\u6742\u6027\u4f7f\u5176\u96be\u4ee5\u6ee1\u8db3\u73b0\u4ee3\u9ad8\u901f\u7f51\u7edc\u7684\u6027\u80fd\u76ee\u6807\u3002\u672c\u6587\u65e8\u5728\u901a\u8fc7\u4fe1\u606f\u5305\u4e22\u5f03\u6765\u52a0\u901fIDS\u3002\u5c06IDS\u53ef\u7528\u7684\u6709\u9650\u8ba1\u7b97\u8d44\u6e90\u4ec5\u96c6\u4e2d\u4e8e\u4f20\u5165\u6d41\u91cf\u4e2d\u6700\u76f8\u5173\u7684\u90e8\u5206\uff0c\u5e76\u5c06\u5176\u4f59\u90e8\u5206\u5378\u8f7d\uff08\u7ed5\u8fc7\uff09\u3002\u8bba\u6587\u8868\u660e\uff0c\u8fd9\u79cd\u5bf9\u5b9a\u4e49\u660e\u786e\u7684\u6d41\u91cf\u90e8\u5206\u7684\u63a7\u5236\uff08\u77e5\u60c5\uff09\u4e22\u5f03\u76f8\u8f83\u8f6f\u4ef6\u548cFPGA\u52a0\u901f\u7684\u4e22\u5f03\u5b9e\u73b0\uff0c\u6709\u52a9\u4e8eIDS\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 S. Sun et al.: \"Detecting and Mitigating ARP Attacks in SDN-Based Cloud Environment,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 2020, pp. \u4e91\u8ba1\u7b97\u7f51\u7edc\u975e\u5e38\u9700\u8981\u5b89\u5168\u6027\uff0c\u4fdd\u62a4\u4e91\u73af\u5883\u514d\u53d7\u5404\u79cd\u653b\u51fb\u5df2\u6210\u4e3a\u70ed\u95e8\u95ee\u9898\u3002\u672c\u6587\u4e2d\uff0c\u5c06SDN\u5e94\u7528\u4e8e\u4fdd\u62a4\u4e91\u8ba1\u7b97\u7f51\u7edc\u514d\u53d7\u5730\u5740\u89e3\u6790\u534f\u8bae\uff08ARP\uff09\u653b\u51fb\u3002\u5728\u5efa\u8bae\u7684\u65b9\u6cd5\u4e2d\uff0c\u63a7\u5236\u5668\u7fa4\u96c6\u4f1a\u68c0\u6d4b\u4e3b\u673a\u53d1\u9001\u7684ARP\u6570\u636e\u5305\uff0c\u4e3a\u4e86\u627e\u51fa\u4f2a\u9020\u8005\u5e76\u9632\u6b62ARP\u6b3a\u9a97\u653b\u51fb\u3002\u6b64\u5916\uff0c\u63a7\u5236\u5668\u4f1a\u4e0d\u65f6\u76d1\u89c6ARP\u6570\u636e\u5305\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u4ee5\u68c0\u6d4bARP\u6cdb\u6d2a\u653b\u51fb\u3002\u4e00\u65e6\u68c0\u6d4b\u5230\u653b\u51fb\uff0c\u63a7\u5236\u5668\u5c31\u4f1a\u5728\u76f8\u5e94\u7684\u4ea4\u6362\u673a\u4e0a\u5b89\u88c5\u6d41\u6761\u76ee\uff0c\u4ee5\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u963b\u6b62\u6d41\u3002\u5b9e\u9a8c\u8868\u660e\u6b64\u65b9\u6cd5\u53ef\u7528\u4e8e\u68c0\u6d4b\u548c\u7f13\u89e3\u57fa\u4e8eSDN\u7684\u4e91\u73af\u5883\u4e2d\u7684ARP\u653b\u51fb\u3002","title":"\u653b\u51fb\u68c0\u6d4b"},{"location":"#_3","text":"Jing Guo et al.: 2019. Who limits the resource efficiency of my datacenter: an analysis of Alibaba datacenter traces. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 39, 1\u201310. programmable data plane \u73b0\u4ee3\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u5229\u7528\u7387\u4f4e\u4f1a\u6d6a\u8d39\u5927\u91cf\u786c\u4ef6\u8d44\u6e90\u548c\u57fa\u7840\u67b6\u6784\u6295\u8d44\u3002\u4e3a\u4e86\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u4e00\u79cd\u76f4\u63a5\u7684\u65b9\u6cd5\u662f\u5c06\u4e0d\u540c\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5171\u5b58\u4e8e\u540c\u4e00\u786c\u4ef6\u4e0a\u3002\u4e3a\u4e86\u5f04\u6e05\u8d44\u6e90\u6548\u7387\u5e76\u4e86\u89e3\u4f4d\u4e8e\u540c\u4e00\u5730\u70b9\u7684\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5173\u952e\u7279\u5f81\uff0c\u672c\u6587\u5206\u6790\u4e86\u6765\u81ea\u963f\u91cc\u5df4\u5df4\u751f\u4ea7\u73af\u5883\u4e0b\u76848\u5929trace\uff0c\u5e76\u63ed\u793a\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u4e3b\u8981\u53d1\u73b0\u3002\u9996\u5148\uff0c\u5185\u5b58\u6210\u4e3a\u65b0\u7684\u74f6\u9888\uff0c\u5e76\u9650\u5236\u4e86\u963f\u91cc\u5df4\u5df4\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u6548\u7387\u3002\u5176\u6b21\uff0c\u4e3a\u4e86\u4fdd\u62a4\u5173\u952e\u5ef6\u8fdf\u5e94\u7528\u7a0b\u5e8f\uff0c\u6279\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u88ab\u89c6\u4e3a\u7b2c\u4e8c\u7b49\u516c\u6c11\uff0c\u5e76\u4e14\u88ab\u9650\u5236\u4f7f\u7528\u6709\u9650\u7684\u8d44\u6e90\u3002\u7b2c\u4e09\uff0c\u8d85\u8fc790\uff05\u7684\u5ef6\u8fdf\u5173\u952e\u578b\u5e94\u7528\u7a0b\u5e8f\u662f\u7528Java\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u7684\u3002\u5927\u91cf\u72ec\u7acb\u7684JVM\u8fdb\u4e00\u6b65\u4f7f\u8d44\u6e90\u7ba1\u7406\u590d\u6742\u5316\uff0c\u5e76\u9650\u5236\u4e86\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u6548\u7387\u3002 Ran Ben Basat et al.: 2019. Q-MAX: A Unified Scheme for Improving Network Measurement Throughput. In Proceedings of the Internet Measurement Conference ( IMC \u201919 ). Association for Computing Machinery, New York, NY, USA, 322\u2013336. keyword\uff1aNetwork algorithms \u7ebf\u901f\u8fd0\u884c\u7684\u6d4b\u91cf\u5e94\u7528\u662f\u7f51\u7edc\u6d4b\u91cf\u9886\u57df\u7684\u91cd\u5927\u6311\u6218\u3002\u672c\u6587\u901a\u8fc7\u63d0\u4f9b\u4e00\u79cd\u6539\u5584\u5404\u79cd\u7f51\u7edc\u7b97\u6cd5\u66f4\u65b0\u65f6\u95f4\u7684\u7edf\u4e00\u673a\u5236\u6765\u5e94\u5bf9\u8fd9\u4e00\u6311\u6218\u3002\u901a\u8fc7\u8bc6\u522b\uff0c\u7814\u7a76\u548c\u4f18\u5316\u79f0\u4e3aq-MAX\u7684\u5e38\u89c1\u7b97\u6cd5\u6a21\u5f0f\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u76ee\u6807\u662f\u4fdd\u6301\u6570\u636e\u5305\u6d41\u4e2d\u7684\u6700\u5927q\u503c\u3002\u8bba\u6587\u5bf9\u6b64\u95ee\u9898\u8fdb\u884c\u6b63\u5f0f\u5206\u6790\uff0c\u5e76\u4ecb\u7ecd\u95f4\u9694\u548c\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5177\u6709\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6052\u5b9a\u66f4\u65b0\u65f6\u95f4\u3002\u7ed3\u8bba\u8bc1\u660e\uff0c\u4e0e\u5e93\u7b97\u6cd5\u76f8\u6bd4\uff0cq-MAX\u7b97\u6cd5\u6267\u884cX20\u7684\u901f\u5ea6\u5feb\u5f97\u591a\uff0c\u5728\u771f\u5b9e\u7684\u7f51\u7edc\u8f68\u8ff9\u4e0a\uff0c\u541e\u5410\u91cf\u6700\u591a\u53ef\u63d0\u9ad8X12\u3002\u5b9e\u9a8c\u5728\u6700\u5148\u8fdb\u7684\u865a\u62df\u4ea4\u6362\u673aOpen vSwitch\u4e2d\u5b9e\u73b0\u4e86\u8be5\u65b9\u6848\u3002","title":"\u6d41\u91cf\u5206\u6790"},{"location":"#_4","text":"Tooska Dargahi et al.: A Survey on the Security of Stateful SDN Data Planes, IEEE, 2019. Keywords: Data plane,data plane abstractions,data plane architectures,data plane flexibility,data plane implementations,data plane languages,data plane programmability,deeply programmable netoworks,description languages,energy consumption,energy efficiency,hardware-based implementations,measurement,monitoring,network virtualization,network functions virtualization,networking technologies, SDN\u4f20\u7edf\u4e0a\u5c06OpenFlow\u7528\u4f5c\u201c\u8bbe\u5907\u7ea7\u201d\u7684\u62bd\u8c61\u3002\u7531\u4e8eOpenFlow\u53ea\u5141\u8bb8\u7a0b\u5e8f\u5458\u63d0\u53d6\u9759\u6001\u6d41\u8868\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4efb\u4f55\u6709\u72b6\u6001\u7684\u63a7\u5236\u548c\u5904\u7406\u53ea\u80fd\u4ea4\u4e88\u63a7\u5236\u5668\u5904\u7406\u3002\u4e3a\u4e86\u89e3\u51b3\u5ef6\u65f6\u5927\u53ca\u4fe1\u53f7\u5f00\u9500\u5927\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u8fd1\u51e0\u5e74\u7684\u5de5\u4f5c\u4e2d\u63d0\u51fa\u4e86\u521b\u65b0\u7684\u6570\u636e\u5e73\u9762\u7f16\u7a0b\u62bd\u8c61\uff0c\u80fd\u76f4\u63a5\u5728\u4ea4\u6362\u673a\u5185\u90e8\u90e8\u7f72\u667a\u80fd\u529f\u80fd\uff0c\u5982\u5c40\u90e8\u72b6\u6001\u6d41\u7b49\u3002\u672c\u6587\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e86\u5173\u4e8e\u6709\u72b6\u6001SDN\u6570\u636e\u5e73\u9762\u7684\u77e5\u8bc6\uff0c\u5e76\u5206\u6790\u4e86\u5bf9\u4e8e\u6f5c\u5728\u7684\u653b\u51fb\u573a\u666f\u53ca\u5bf9\u653b\u51fb\u7684\u9632\u5fa1\u63aa\u65bd\u3002","title":"\u7efc\u8ff0"},{"location":"#_5","text":"Jiarong Xing et al.: Secure State Migration in the Data Plane, SigComm workshop SPIN,2020. Keywords\uff1aProgrammable data planes, P4, State migration, Stream authentication, Network security \u8bb8\u591a\u6700\u65b0\u7cfb\u7edf\u5141\u8bb8\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4ee5\u786c\u4ef6\u901f\u5ea6\u5b9e\u73b0\u6709\u72b6\u6001\u7684\u6570\u636e\u5305\u5904\u7406\uff0c\u4f46\u662f\u6709\u6548\u7ba1\u7406\u6570\u636e\u5e73\u9762\u72b6\u6001\u7684\u534f\u8bae\u548c\u7cfb\u7edf\u4ecd\u672a\u5f97\u5230\u5f00\u53d1\u3002\u672c\u6587\u63d0\u51faP4Sync\u534f\u8bae\u4ee5\u89e3\u51b3\u5b89\u5168\u72b6\u6001\u8fc1\u79fb\u7684\u95ee\u9898\u3002P4Sync\u534f\u8bae\u80fd\u4f7f\u4ea4\u6362\u673a\u5728\u65e0\u8f6f\u4ef6\u63a7\u5236\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u6570\u636e\u5e73\u9762\u72b6\u6001\u52a0\u5bc6\u4f20\u8f93\u540e\u4f20\u9012\u5230\u76ee\u7684\u5730\u3002P4Sync\u89e3\u51b3\u4e86\u4e00\u4e9b\u6280\u672f\u96be\u9898\uff1a\u4f8b\u5982\u5728VM\u8fc1\u79fb\u4e2d\u91c7\u7528\u5185\u5b58\u590d\u5236\u6280\u672f\uff0c\u5c06\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5b89\u5168\u6027\u64cd\u4f5c\u4ea4\u8fd8\u6570\u636e\u5e73\u9762\uff0c\u4ee5\u53ca\u5747\u8861\u5206\u914d\u91cd\u91cf\u7ea7\u7684\u52a0\u5bc6\u5f00\u9500\uff0c\u540c\u65f6\uff0cP4Sync\u4e5f\u5177\u6709\u8f83\u4f4e\u7684\u6d41\u91cf\u548c\u5185\u5b58\u5f00\u9500\u3002 Gang Liu.:P4NIS Improving network immunity against eavesdropping with programmable data planes,INFOCOM,2020 Keywords: Protocols, Eavesdropping , Encryption , Internet , Servers \u7531\u4e8e\u8d85\u7ea7\u8ba1\u7b97\u673a\u8ba1\u7b97\u80fd\u529b\u7684\u63d0\u9ad8\uff0c\u901a\u8fc7\u5355\u4e00\u7f51\u7edc\u8def\u5f84\u4f20\u8f93\u52a0\u5bc6\u6570\u636e\u5305\u5f88\u5bb9\u6613\u53d7\u5230\u66b4\u529b\u653b\u51fb\u3002\u80fd\u529b\u51fa\u4f17\u7684\u653b\u51fb\u8005\u79d8\u5bc6\u7a83\u542c\u6240\u6709\u6570\u636e\u5305\uff0c\u5c06\u6570\u636e\u5305\u5206\u7c7b\u5230\u4e0d\u540c\u7684\u6d41\u4e2d\uff0c\u5bf9\u89e3\u5bc6\u5bc6\u94a5\u8fdb\u884c\u7a77\u4e3e\u641c\u7d22\uff0c\u5e76\u4ece\u6d41\u4e2d\u63d0\u53d6\u654f\u611f\u7684\u4e2a\u4eba\u4fe1\u606f\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u534f\u8bae\u65e0\u5173\u7684\u6570\u636e\u5305\u5904\u7406\u5668(P4)\u7684\u7f51\u7edc\u514d\u75ab\u65b9\u6848(P4NIS)\u6765\u62b5\u6297\u7a83\u542c\u653b\u51fb\u3002\u5177\u4f53\u6765\u8bf4\uff0cP4NIS\u914d\u5907\u4e09\u9053\u9632\u7ebf\uff0c\u63d0\u9ad8\u7f51\u7edc\u514d\u75ab\u529b\u3002\u7b2c\u4e00\u9053\u9632\u7ebf\u662f\u6df7\u6dc6\u8f6c\u53d1\uff0c\u5c06\u4e0d\u540c\u7f51\u7edc\u8def\u5f84\u4e2d\u7684\u6240\u6709\u6d41\u91cf\u5206\u7ec4\u65e0\u5e8f\u5730\u5206\u53d1\u3002\u7b2c\u4e8c\u9053\u9632\u7ebf\u4f7f\u7528\u4e0d\u540c\u7684\u52a0\u5bc6\u7b97\u6cd5\u52a0\u5bc6\u6570\u636e\u5305\u7684\u4f20\u8f93\u7aef\u53e3\u5b57\u6bb5\u3002\u8be5\u52a0\u5bc6\u6280\u672f\u53ef\u4ee5\u5c06\u6d41\u91cf\u5305\u4ece\u4e00\u4e2a\u6d41\u5206\u53d1\u5230\u4e0d\u540c\u7684\u6d41\u4e2d\uff0c\u5e76\u5e72\u6270\u7a83\u542c\u8005\u5bf9\u5176\u8fdb\u884c\u6b63\u786e\u7684\u5206\u7c7b\u3002 \u7b2c\u4e09\u9053\u9632\u7ebf\u662fP4NIS\u7ee7\u627f\u4e86\u57fa\u4e8e\u52a0\u5bc6\u7b56\u7565\u7684\u4f18\u52bf\u3002\u8fd0\u7528\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762p4\u7684\u57fa\u672c\u6848\u4f8b\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86P4NIS\u5e76\u5bf9\u5176\u6027\u80fd\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cP4NIS\u80fd\u591f\u663e\u8457\u589e\u52a0\u7a83\u542c\u7684\u96be\u5ea6\uff0c\u4e0e\u73b0\u6709\u673a\u5236\u76f8\u6bd4\uff0c\u4f20\u8f93\u541e\u5410\u91cf\u63d0\u9ad8\u4e8631.7%\u3002 Francesco Musumeci.:Machine-learning-assisted DDoS attack detection with P4 language,ICC,2020 Keywords:Computer crime,Feature extraction,Real-time systems,Prediction algorithms,Support vector machines,Protocols,Metadata \u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(SDN)\u5728\u7f51\u7edc\u81ea\u52a8\u5316,\u7075\u6d3b\u6027\u548c\u8d44\u6e90\u5229\u7528\u7387\u4e0a\u62e5\u6709\u663e\u8457\u4f18\u52bf, SDN\u63a7\u5236\u5668\u88ab\u89c6\u4e3a\u6574\u4e2a\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206,\u7279\u522b\u662f\u5f53\u5b83\u4eec\u79f0\u4e3a\u6076\u610f\u7684\u7f51\u7edc\u653b\u51fb\uff08\u6bd4\u5982\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1(DDoS)\uff09\u7684\u76ee\u6807\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5229\u7528\u4e86P4\u7f16\u7a0b\u8bed\u8a00\u6240\u7f16\u5199\u7684\u6709\u72b6\u6001\u6570\u636e\u5e73\u9762\uff0c\u5e73\u9762\u4e2d\u4ea4\u6362\u673a\u7684\u5185\u5b58\u6301\u7eed\u5b58\u50a8\u5df2\u5904\u7406\u6570\u636e\u5305\u4ee5\u76f4\u63a5\u5728\u6570\u636e\u5e73\u9762\u4e0a\u6267\u884c\u653b\u51fb\u68c0\u6d4b\uff0cSDN\u63a7\u5236\u5668\u4ec5\u53c2\u4e0e\u5c11\u91cf\u5de5\u4f5c\u3002\u7531\u4e8e\u673a\u5668\u5b66\u4e60(ML)\u88ab\u8ba4\u4e3a\u662f\u4e3b\u8981\u7684\u5f02\u5e38\u68c0\u6d4b\u65b9\u6cd5\uff0c\u6211\u4eec\u4f7f\u7528\u57fa\u4e8eML\u7684\u5206\u7c7b\u6765\u8fdb\u884cDDoS\u653b\u51fb\u68c0\u6d4b\uff0c\u5e76\u5728\u5206\u7c7b\u7cbe\u5ea6\u548c\u8bad\u7ec3/\u6d4b\u8bd5\u6301\u7eed\u65f6\u95f4\u65b9\u9762\u6bd4\u8f83\u4e0d\u540c\u7684ML\u7b97\u6cd5\u3002\u6b64\u5916\uff0c\u6211\u4eec\u7ed3\u5408ML\u548cp4\u542f\u7528\u7684\u72b6\u6001\u6570\u636e\u5e73\u9762\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5b9e\u65f6DDoS\u653b\u51fb\u68c0\u6d4b\u6a21\u5757\uff0c\u6211\u4eec\u6839\u636e\u68c0\u6d4b\u6240\u9700\u7684\u5ef6\u8fdf\u8fdb\u884c\u8bc4\u4f30\u3002\u6211\u4eec\u8003\u8651\u4e86\u4e09\u4e2a\u5b9e\u65f6\u573a\u666f\uff0c\u5176\u4e2dP4-enab1ed\u4ea4\u6362\u673a\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u7cbe\u5fc3\u8bbe\u8ba1\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\uff0c\u5373\u6570\u636e\u5305\u955c\u50cf\u3001\u6570\u636e\u5305\u5934\u955c\u50cf\u548cp4 -\u5143\u6570\u636e\u63d0\u53d6\u3002\u6570\u503c\u7ed3\u679c\u8868\u660e\uff0c\u91c7\u7528P4\u53ef\u4ee5\u663e\u8457\u964d\u4f4e\u5ef6\u8fdf\u3002 Song Wang.:SECOD: SDN sEcure control and data plane algorithm for detecting and defending against DoS attacks,IFIP Networking,2018 Keywords:SDN,OpenFlow,Security,Dos Attack \u867d\u7136SDN (Software-Defined Networking, SDN)\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u4f46\u5b83\u4e5f\u5bb9\u6613\u53d7\u5230\u8bf8\u5982\u62d2\u7edd\u670d\u52a1(Denial of Service, DoS)\u7b49\u5b89\u5168\u653b\u51fb\u3002\u7531\u4e8e\u5728SDN\u7f51\u7edc\u4e2d\uff0c\u63a7\u5236\u5e73\u9762\u4e0e\u6570\u636e\u5e73\u9762\u662f\u9694\u79bb\u7684\uff0cDoS\u653b\u51fb\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u63a7\u5236\u5e73\u9762\u4f5c\u4e3a\u653b\u51fb\u76ee\u6807\u5e76\u7834\u574f\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u4ee5\u53ca\u6570\u636e\u5e73\u9762\uff0c\u4ece\u800c\u964d\u4f4e\u7528\u6237\u7684\u670d\u52a1\u8d28\u91cf(QoS)\u3002\u5728\u4e4b\u524d\u7684\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86SECO\uff0c\u4e00\u79cdSDN\u5b89\u5168\u63a7\u5236\u5668\u7b97\u6cd5\uff0c\u7528\u4e8e\u68c0\u6d4b\u548c\u9632\u5fa1DoS\u653b\u51fb\u3002\u4eff\u771f\u7ed3\u679c\u8868\u660e\uff0cSECO\u6210\u529f\u5730\u62b5\u5fa1\u4e86DoS\u653b\u51fb\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86SDN\u5b89\u5168\u63a7\u5236\u4e0e\u6570\u636e\u5e73\u9762(SECOD)\uff0c\u5b83\u662fSECO\u7684\u6539\u8fdb\u7248\u672c\u3002\u5728SECO\u7684\u57fa\u7840\u4e0a\uff0cSECOD\u5f15\u5165\u4e86\u65b0\u7684\u89e6\u53d1\u5668\uff0c\u5728\u63a7\u5236\u548c\u6570\u636e\u5c42\u9762\u68c0\u6d4b\u548c\u9632\u6b62DoS\u653b\u51fb\u3002\u5229\u7528\u57fa\u4e8esdn\u7684\u786c\u4ef6\u6d4b\u8bd5\u53f0\u3001\u57fa\u4e8eopenflow\u7684\u4ea4\u6362\u673a\u548cRYU\u63a7\u5236\u5668\u5b9e\u73b0\u548c\u6d4b\u8bd5SECOD\uff0c\u83b7\u53d6\u771f\u5b9e\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u4fe1\u606f\u3002\u7ed3\u679c\u8868\u660e\uff0cSECOD\u6210\u529f\u68c0\u6d4b\u5e76\u6709\u6548\u964d\u4f4e\u4e86DoS\u5bf9SDN\u7f51\u7edc\u7684\u653b\u51fb\uff0c\u4e0e\u672a\u53d7\u653b\u51fb\u7684\u7f51\u7edc\u76f8\u6bd4\uff0c\u6570\u636e\u5e73\u9762\u6027\u80fd\u4fdd\u6301\u572899.72%\u3002 Aldo Febro.: Distributed SIP DDoS Defense with P4,WCNC,2019 Keywords:SIP,DoS,DDoS,SDN,P4,data plane,control plane SIP DDoS\u653b\u51fb\u6570\u91cf\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u5bf9\u516c\u5171\u901a\u4fe1\u57fa\u7840\u8bbe\u65bd\u6784\u6210\u4e86\u771f\u6b63\u7684\u5a01\u80c1\u3002\u5efa\u7acb\u9632\u5fa1\u7684\u6807\u51c6\u505a\u6cd5\u662f\u5728\u88ab\u653b\u51fb\u76ee\u6807(\u5373\u53d7\u5bb3\u8005\u7684\u4f4d\u7f6e)\u9644\u8fd1\u8fdb\u884c\u9632\u5fa1\u90e8\u7f72\u3002\u8fd9\u79cd\u65b9\u6cd5\u5f88\u96be\u8ddf\u4e0a\u4e0d\u65ad\u589e\u957f\u7684\u6570\u91cf\u548c\u653b\u51fb\u590d\u6742\u6027\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u4e3a\u672a\u6765\u7684\u653b\u51fb\u505a\u51c6\u5907\uff0c\u9700\u8981\u5206\u6563\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5e76\u4e14\u653b\u51fb\u9700\u8981\u5c3d\u53ef\u80fd\u9760\u8fd1\u653b\u51fb\u6e90\uff08\u8fdc\u79bb\u53d7\u5bb3\u8005\uff09\u4ee5\u51cf\u8f7b\u653b\u51fb\u5f3a\u5ea6\u3002\u672c\u6587\u901a\u8fc7\u5bf9\u6570\u636e\u5e73\u9762\u7f16\u7a0b(P4)\u548c\u4ee5\u592a\u7f51\u4ea4\u6362\u673a\u63a7\u5236\u5e73\u9762\u7f16\u7a0b\u7684\u5b9e\u9a8c\uff0c\u5728\u6bcf\u4e2a\u4ea4\u6362\u673a\u7aef\u53e3\u4e0a\u63d0\u4f9b\u5bf9SIP INVITE DDoS\u653b\u51fb\u7684\u9996\u8df3\u68c0\u6d4b\u548c\u9632\u5fa1\u80fd\u529b\u3002\u8fd9\u79cd\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u6216\u57fa\u4e8e\u6e90\u7684\u9632\u5fa1\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u5c06\u5176\u6dfb\u52a0\u81f3\u73b0\u6709\u7684\u57fa\u4e8e\u76ee\u6807\u7684\u7ec4\u4ef6\u4e2d\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u66f4\u5168\u9762\u7684\u6574\u4f53\u89e3\u51b3\u65b9\u6848\uff0c\u8be5\u89e3\u51b3\u65b9\u6848\u53ef\u6269\u5c55\u3001\u5b9e\u60e0\uff0c\u4ee5\u66f4\u597d\u5730\u5e94\u5bf9\u672a\u6765\u7684SIP DDoS\u653b\u51fb\u3002","title":"\u6570\u636e\u5e73\u9762\u5b89\u5168\u52a0\u5bc6"},{"location":"First%20Part/","text":"First Part \u7efc\u8ff0 Tooska Dargahi et al.: A Survey on the Security of Stateful SDN Data Planes, IEEE, 2019. Keywords: Data plane,data plane abstractions,data plane architectures,data plane flexibility,data plane implementations,data plane languages,data plane programmability,deeply programmable netoworks,description languages,energy consumption,energy efficiency,hardware-based implementations,measurement,monitoring,network virtualization,network functions virtualization,networking technologies,Software-Defined Networking (SDN) emerged as an attempt to introduce network innovations faster, and to radically simplify and automate the management of large networks. SDN traditionally leverages OpenFlow as device-level abstraction. Since OpenFlow permits the programmer to \u201cjust\u201d abstract a static flow-table, any stateful control and processing intelligence is necessarily delegated to the network controller. Motivated by the latency and signaling overhead that comes along with such a two-tiered SDN programming model, in the last couple of years several works have proposed innovative switch-level (data plane) programming abstractions capable to deploy some smartness directly inside the network switches, e.g., in the form of localized stateful flow processing. Furthermore, the possible inclusion of states and state maintenance primitives inside the switches is currently being debated in the OpenFlow standardization community itself. In this paper, after having provided the reader with a background on such emerging stateful SDN data plane proposals, we focus our attention on the security implications that data plane programmability brings about. Also via the identfication of potential attack scenarios, we specfically highlight possible vulnerabilities specfic to stateful in-switch processing (including denial of service and saturation attacks), which we believe should be carefully taken into consideration in the ongoing design of current and future proposals for stateful SDN data planes. SDN\u4f20\u7edf\u4e0a\u5c06OpenFlow\u7528\u4f5c\u201c\u8bbe\u5907\u7ea7\u201d\u7684\u62bd\u8c61\u3002\u7531\u4e8eOpenFlow\u53ea\u5141\u8bb8\u7a0b\u5e8f\u5458\u63d0\u53d6\u9759\u6001\u6d41\u8868\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4efb\u4f55\u6709\u72b6\u6001\u7684\u63a7\u5236\u548c\u5904\u7406\u53ea\u80fd\u4ea4\u4e88\u63a7\u5236\u5668\u5904\u7406\u3002\u4e3a\u4e86\u89e3\u51b3\u5ef6\u65f6\u5927\u53ca\u4fe1\u53f7\u5f00\u9500\u5927\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u8fd1\u51e0\u5e74\u7684\u5de5\u4f5c\u4e2d\u63d0\u51fa\u4e86\u521b\u65b0\u7684\u6570\u636e\u5e73\u9762\u7f16\u7a0b\u62bd\u8c61\uff0c\u80fd\u76f4\u63a5\u5728\u4ea4\u6362\u673a\u5185\u90e8\u90e8\u7f72\u667a\u80fd\u529f\u80fd\uff0c\u5982\u5c40\u90e8\u72b6\u6001\u6d41\u7b49\u3002\u672c\u6587\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e86\u5173\u4e8e\u6709\u72b6\u6001SDN\u6570\u636e\u5e73\u9762\u7684\u77e5\u8bc6\uff0c\u5e76\u5206\u6790\u4e86\u5bf9\u4e8e\u6f5c\u5728\u7684\u653b\u51fb\u573a\u666f\u53ca\u5bf9\u653b\u51fb\u7684\u9632\u5fa1\u63aa\u65bd\u3002 \u6570\u636e\u5e73\u9762\u5b89\u5168\u52a0\u5bc6 Jiarong Xing et al.: Secure State Migration in the Data Plane, SigComm workshop SPIN,2020. Keywords\uff1aProgrammable data planes, P4, State migration, Stream authentication, Network securityProgrammable data planes enable stateful packet processing at hardware speeds\u2014\u2014a new capability central to many recent systems. However, protocols and systems that effectively manage data plane state remain underexplored. This paper considers the problem of secure state migration, which can serve as an important building block for state management tasks. It delivers data plane state from a source switch to a destination effectively without a software controller, while providing strong cryptographic guarantees on authenticity. Our protocol, P4Sync, tackles several technical challenges, such as adapting memory copy techniques in VM migration, offloading per-packet security operations to the data plane, and amortizing heavyweight cryptographic overheads over a batch of packets. Our initial validation shows that P4Sync has low traffic and memory overheads. challenges, such as adapting memory copy techniques in VM migration, offloading per-packet security operations to the data plane, and amortizing heavyweight cryptographic overheads over a batch of packets. Our initial validation shows that P4Sync has low traffic and memory overheads\u3002 \u8bb8\u591a\u6700\u65b0\u7cfb\u7edf\u5141\u8bb8\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4ee5\u786c\u4ef6\u901f\u5ea6\u5b9e\u73b0\u6709\u72b6\u6001\u7684\u6570\u636e\u5305\u5904\u7406\uff0c\u4f46\u662f\u6709\u6548\u7ba1\u7406\u6570\u636e\u5e73\u9762\u72b6\u6001\u7684\u534f\u8bae\u548c\u7cfb\u7edf\u4ecd\u672a\u5f97\u5230\u5f00\u53d1\u3002\u672c\u6587\u63d0\u51faP4Sync\u534f\u8bae\u4ee5\u89e3\u51b3\u5b89\u5168\u72b6\u6001\u8fc1\u79fb\u7684\u95ee\u9898\u3002P4Sync\u534f\u8bae\u80fd\u4f7f\u4ea4\u6362\u673a\u5728\u65e0\u8f6f\u4ef6\u63a7\u5236\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u6570\u636e\u5e73\u9762\u72b6\u6001\u52a0\u5bc6\u4f20\u8f93\u540e\u4f20\u9012\u5230\u76ee\u7684\u5730\u3002P4Sync\u89e3\u51b3\u4e86\u4e00\u4e9b\u6280\u672f\u96be\u9898\uff1a\u4f8b\u5982\u5728VM\u8fc1\u79fb\u4e2d\u91c7\u7528\u5185\u5b58\u590d\u5236\u6280\u672f\uff0c\u5c06\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5b89\u5168\u6027\u64cd\u4f5c\u4ea4\u8fd8\u6570\u636e\u5e73\u9762\uff0c\u4ee5\u53ca\u5747\u8861\u5206\u914d\u91cd\u91cf\u7ea7\u7684\u52a0\u5bc6\u5f00\u9500\uff0c\u540c\u65f6\uff0cP4Sync\u4e5f\u5177\u6709\u8f83\u4f4e\u7684\u6d41\u91cf\u548c\u5185\u5b58\u5f00\u9500\u3002 Gang Liu.:P4NIS Improving network immunity against eavesdropping with programmable data planes,INFOCOM,2020 Keywords: Protocols, Eavesdropping , Encryption , Internet , Servers Due to improving computational capacity of supercomputers, transmitting encrypted packets via one single network path is vulnerable to brute-force attacks. The versatile attackers secretly eavesdrop all the packets, classify packets into different streams, performs an exhaustive search for the decryption key, and extract sensitive personal information from the streams. However, new Internet Protocol (IP) brings great opportunities and challenges for preventing eavesdropping attacks. In this paper, we propose a Programming Protocol-independent Packet Processors (P4) based Network Immune Scheme (P4NIS) against the eavesdropping attacks. Specifically, P4NIS is equipped with three lines of defense to improve the network immunity. The first line is promiscuous forwarding by splitting all the traffic packets in different network paths disorderly. Complementally, the second line encrypts transmission port fields of the packets using diverse encryption algorithms. The encryption could distribute traffic packets from one stream into different streams, and disturb eavesdroppers to classify them correctly. Besides, P4NIS inherits the advantages from the existing encryption-based countermeasures which is the third line of defense. Using a paradigm of programmable data planes\u2014P4, we implement P4NIS and evaluate its performances. Experimental results show that P4NIS can increase difficulties of eavesdropping significantly, and increase transmission throughput by 31.7% compared with state-of-the-art mechanisms. \u7531\u4e8e\u8d85\u7ea7\u8ba1\u7b97\u673a\u8ba1\u7b97\u80fd\u529b\u7684\u63d0\u9ad8\uff0c\u901a\u8fc7\u5355\u4e00\u7f51\u7edc\u8def\u5f84\u4f20\u8f93\u52a0\u5bc6\u6570\u636e\u5305\u5f88\u5bb9\u6613\u53d7\u5230\u66b4\u529b\u653b\u51fb\u3002\u80fd\u529b\u51fa\u4f17\u7684\u653b\u51fb\u8005\u79d8\u5bc6\u7a83\u542c\u6240\u6709\u6570\u636e\u5305\uff0c\u5c06\u6570\u636e\u5305\u5206\u7c7b\u5230\u4e0d\u540c\u7684\u6d41\u4e2d\uff0c\u5bf9\u89e3\u5bc6\u5bc6\u94a5\u8fdb\u884c\u7a77\u4e3e\u641c\u7d22\uff0c\u5e76\u4ece\u6d41\u4e2d\u63d0\u53d6\u654f\u611f\u7684\u4e2a\u4eba\u4fe1\u606f\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u534f\u8bae\u65e0\u5173\u7684\u6570\u636e\u5305\u5904\u7406\u5668(P4)\u7684\u7f51\u7edc\u514d\u75ab\u65b9\u6848(P4NIS)\u6765\u62b5\u6297\u7a83\u542c\u653b\u51fb\u3002\u5177\u4f53\u6765\u8bf4\uff0cP4NIS\u914d\u5907\u4e09\u9053\u9632\u7ebf\uff0c\u63d0\u9ad8\u7f51\u7edc\u514d\u75ab\u529b\u3002\u7b2c\u4e00\u9053\u9632\u7ebf\u662f\u6df7\u6dc6\u8f6c\u53d1\uff0c\u5c06\u4e0d\u540c\u7f51\u7edc\u8def\u5f84\u4e2d\u7684\u6240\u6709\u6d41\u91cf\u5206\u7ec4\u65e0\u5e8f\u5730\u5206\u53d1\u3002\u7b2c\u4e8c\u9053\u9632\u7ebf\u4f7f\u7528\u4e0d\u540c\u7684\u52a0\u5bc6\u7b97\u6cd5\u52a0\u5bc6\u6570\u636e\u5305\u7684\u4f20\u8f93\u7aef\u53e3\u5b57\u6bb5\u3002\u8be5\u52a0\u5bc6\u6280\u672f\u53ef\u4ee5\u5c06\u6d41\u91cf\u5305\u4ece\u4e00\u4e2a\u6d41\u5206\u53d1\u5230\u4e0d\u540c\u7684\u6d41\u4e2d\uff0c\u5e76\u5e72\u6270\u7a83\u542c\u8005\u5bf9\u5176\u8fdb\u884c\u6b63\u786e\u7684\u5206\u7c7b\u3002 \u7b2c\u4e09\u9053\u9632\u7ebf\u662fP4NIS\u7ee7\u627f\u4e86\u57fa\u4e8e\u52a0\u5bc6\u7b56\u7565\u7684\u4f18\u52bf\u3002\u8fd0\u7528\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762p4\u7684\u57fa\u672c\u6848\u4f8b\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86P4NIS\u5e76\u5bf9\u5176\u6027\u80fd\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cP4NIS\u80fd\u591f\u663e\u8457\u589e\u52a0\u7a83\u542c\u7684\u96be\u5ea6\uff0c\u4e0e\u73b0\u6709\u673a\u5236\u76f8\u6bd4\uff0c\u4f20\u8f93\u541e\u5410\u91cf\u63d0\u9ad8\u4e8631.7%\u3002 DDoS\u653b\u51fb\u9632\u5fa1 Francesco Musumeci.:Machine-learning-assisted DDoS attack detection with P4 language,ICC,2020 Keywords:Computer crime,Feature extraction,Real-time systems,Prediction algorithms,Support vector machines,Protocols,Metadata While Software Defined Networking (SDN) provides well-known advantages in terms of network automation, flexibility and resources utilization, it has been observed that SDN controllers may represent critical points of failure for the entire network infrastructure, especially when they are targeted by malicious cyber attacks such as Distributed Denial of Service (DDoS). To address this issue, in this paper we exploit stateful data planes, as enabled by P4 programming language, where switches maintain persistent memory of handled packets to perform attack detection directly at the data plane, with only marginal involvement of the SDN controllers. As machine learning (ML) is recognized as primary anomaly detection methodology, we perform DDoS attack detection using a MLbased classification and compare different ML algorithms in terms of classification accuracy and train/test duration. Moreover, we combine ML and P4-enab1ed stateful data planes to design a real-time DDoS attack detection module, which we evaluate in terms of latency required for the detection. Three real-time scenarios are considered, where P4-enab1ed switches elaborate the received packets in different ways, namely, packet mirroring, header mirroring, and P4-metadata extraction. Numerical results show significant latency reduction when P4 is adopted. \u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(SDN)\u5728\u7f51\u7edc\u81ea\u52a8\u5316,\u7075\u6d3b\u6027\u548c\u8d44\u6e90\u5229\u7528\u7387\u4e0a\u62e5\u6709\u663e\u8457\u4f18\u52bf, SDN\u63a7\u5236\u5668\u88ab\u89c6\u4e3a\u6574\u4e2a\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206,\u7279\u522b\u662f\u5f53\u5b83\u4eec\u79f0\u4e3a\u6076\u610f\u7684\u7f51\u7edc\u653b\u51fb\uff08\u6bd4\u5982\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1(DDoS)\uff09\u7684\u76ee\u6807\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5229\u7528\u4e86P4\u7f16\u7a0b\u8bed\u8a00\u6240\u7f16\u5199\u7684\u6709\u72b6\u6001\u6570\u636e\u5e73\u9762\uff0c\u5e73\u9762\u4e2d\u4ea4\u6362\u673a\u7684\u5185\u5b58\u6301\u7eed\u5b58\u50a8\u5df2\u5904\u7406\u6570\u636e\u5305\u4ee5\u76f4\u63a5\u5728\u6570\u636e\u5e73\u9762\u4e0a\u6267\u884c\u653b\u51fb\u68c0\u6d4b\uff0cSDN\u63a7\u5236\u5668\u4ec5\u53c2\u4e0e\u5c11\u91cf\u5de5\u4f5c\u3002\u7531\u4e8e\u673a\u5668\u5b66\u4e60(ML)\u88ab\u8ba4\u4e3a\u662f\u4e3b\u8981\u7684\u5f02\u5e38\u68c0\u6d4b\u65b9\u6cd5\uff0c\u6211\u4eec\u4f7f\u7528\u57fa\u4e8eML\u7684\u5206\u7c7b\u6765\u8fdb\u884cDDoS\u653b\u51fb\u68c0\u6d4b\uff0c\u5e76\u5728\u5206\u7c7b\u7cbe\u5ea6\u548c\u8bad\u7ec3/\u6d4b\u8bd5\u6301\u7eed\u65f6\u95f4\u65b9\u9762\u6bd4\u8f83\u4e0d\u540c\u7684ML\u7b97\u6cd5\u3002\u6b64\u5916\uff0c\u6211\u4eec\u7ed3\u5408ML\u548cp4\u542f\u7528\u7684\u72b6\u6001\u6570\u636e\u5e73\u9762\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5b9e\u65f6DDoS\u653b\u51fb\u68c0\u6d4b\u6a21\u5757\uff0c\u6211\u4eec\u6839\u636e\u68c0\u6d4b\u6240\u9700\u7684\u5ef6\u8fdf\u8fdb\u884c\u8bc4\u4f30\u3002\u6211\u4eec\u8003\u8651\u4e86\u4e09\u4e2a\u5b9e\u65f6\u573a\u666f\uff0c\u5176\u4e2dP4-enab1ed\u4ea4\u6362\u673a\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u7cbe\u5fc3\u8bbe\u8ba1\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\uff0c\u5373\u6570\u636e\u5305\u955c\u50cf\u3001\u6570\u636e\u5305\u5934\u955c\u50cf\u548cp4 -\u5143\u6570\u636e\u63d0\u53d6\u3002\u6570\u503c\u7ed3\u679c\u8868\u660e\uff0c\u91c7\u7528P4\u53ef\u4ee5\u663e\u8457\u964d\u4f4e\u5ef6\u8fdf\u3002 Song Wang.:SECOD: SDN sEcure control and data plane algorithm for detecting and defending against DoS attacks,IFIP Networking,2018 Keywords:SDN,OpenFlow,Security,Dos Attack Although the popularity of Software-Defined Networking (SDN) is increasing, it is also vulnerable to security attacks such as Denial of Service (DoS) attacks. Since in SDN, the control plane is isolated from the data plane, DoS attackers can easily target the control plane to impair the network infrastructure in addition to the data plane to degrade the user's Quality of Service (QoS). In our previous work, we introduced SECO, an SDN Secure Controller algorithm to detect and defend SDN against DoS attacks. Simulation results showed that SECO successfully defends SDN networks from DoS attacks. In this paper, we present SDN sEcure COntrol and Data Plane (SECOD), which is an improved version of SECO. Basically, SECOD introduces new triggers to detect and prevent DoS attacks in both control and data planes. Moreover, SECOD is implemented and tested using SDN-based hardware testbed, OpenFlow-based switch, and RYU controller to capture the dynamics of realistic hardware and software. The results show that SECOD successfully detects and effectively mitigates DoS attacks on SDN networks keeping data plane performance at 99.72% compared to a network not under attack. \u867d\u7136SDN (Software-Defined Networking, SDN)\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u4f46\u5b83\u4e5f\u5bb9\u6613\u53d7\u5230\u8bf8\u5982\u62d2\u7edd\u670d\u52a1(Denial of Service, DoS)\u7b49\u5b89\u5168\u653b\u51fb\u3002\u7531\u4e8e\u5728SDN\u7f51\u7edc\u4e2d\uff0c\u63a7\u5236\u5e73\u9762\u4e0e\u6570\u636e\u5e73\u9762\u662f\u9694\u79bb\u7684\uff0cDoS\u653b\u51fb\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u63a7\u5236\u5e73\u9762\u4f5c\u4e3a\u653b\u51fb\u76ee\u6807\u5e76\u7834\u574f\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u4ee5\u53ca\u6570\u636e\u5e73\u9762\uff0c\u4ece\u800c\u964d\u4f4e\u7528\u6237\u7684\u670d\u52a1\u8d28\u91cf(QoS)\u3002\u5728\u4e4b\u524d\u7684\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86SECO\uff0c\u4e00\u79cdSDN\u5b89\u5168\u63a7\u5236\u5668\u7b97\u6cd5\uff0c\u7528\u4e8e\u68c0\u6d4b\u548c\u9632\u5fa1DoS\u653b\u51fb\u3002\u4eff\u771f\u7ed3\u679c\u8868\u660e\uff0cSECO\u6210\u529f\u5730\u62b5\u5fa1\u4e86DoS\u653b\u51fb\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86SDN\u5b89\u5168\u63a7\u5236\u4e0e\u6570\u636e\u5e73\u9762(SECOD)\uff0c\u5b83\u662fSECO\u7684\u6539\u8fdb\u7248\u672c\u3002\u5728SECO\u7684\u57fa\u7840\u4e0a\uff0cSECOD\u5f15\u5165\u4e86\u65b0\u7684\u89e6\u53d1\u5668\uff0c\u5728\u63a7\u5236\u548c\u6570\u636e\u5c42\u9762\u68c0\u6d4b\u548c\u9632\u6b62DoS\u653b\u51fb\u3002\u5229\u7528\u57fa\u4e8esdn\u7684\u786c\u4ef6\u6d4b\u8bd5\u53f0\u3001\u57fa\u4e8eopenflow\u7684\u4ea4\u6362\u673a\u548cRYU\u63a7\u5236\u5668\u5b9e\u73b0\u548c\u6d4b\u8bd5SECOD\uff0c\u83b7\u53d6\u771f\u5b9e\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u4fe1\u606f\u3002\u7ed3\u679c\u8868\u660e\uff0cSECOD\u6210\u529f\u68c0\u6d4b\u5e76\u6709\u6548\u964d\u4f4e\u4e86DoS\u5bf9SDN\u7f51\u7edc\u7684\u653b\u51fb\uff0c\u4e0e\u672a\u53d7\u653b\u51fb\u7684\u7f51\u7edc\u76f8\u6bd4\uff0c\u6570\u636e\u5e73\u9762\u6027\u80fd\u4fdd\u6301\u572899.72%\u3002 Aldo Febro.:Distributed SIP DDoS Defense with P4,WCNC,2019 Keywords:SIP,DoS,DDoS,SDN,P4,data plane,control plane SIP DDoS attack is growing and has a real threat to crippling public communication infrastructure. The standard approach to building the defense is at or near the attack destination (i.e. victim's location). This approach is struggling to keep up with the growing volume and attack sophistication. To be better prepared for future attacks, the workload needs to be distributed, and the attack needs to be mitigated as close to the attack source as possible. This paper experiments with data plane programming (P4) and control plane programming of Ethernet switches to provide first-hop detection and mitigation capability for SIP INVITE DDoS attack at every switchport. This approach creates a distributed or source-based defense component which could be added to the existing destination-based components to create a more comprehensive overall solution that is extensible, economical, and scalable against SIP DDoS attack of the future. SIP DDoS\u653b\u51fb\u6570\u91cf\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u5bf9\u516c\u5171\u901a\u4fe1\u57fa\u7840\u8bbe\u65bd\u6784\u6210\u4e86\u771f\u6b63\u7684\u5a01\u80c1\u3002\u5efa\u7acb\u9632\u5fa1\u7684\u6807\u51c6\u505a\u6cd5\u662f\u5728\u88ab\u653b\u51fb\u76ee\u6807(\u5373\u53d7\u5bb3\u8005\u7684\u4f4d\u7f6e)\u9644\u8fd1\u8fdb\u884c\u9632\u5fa1\u90e8\u7f72\u3002\u8fd9\u79cd\u65b9\u6cd5\u5f88\u96be\u8ddf\u4e0a\u4e0d\u65ad\u589e\u957f\u7684\u6570\u91cf\u548c\u653b\u51fb\u590d\u6742\u6027\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u4e3a\u672a\u6765\u7684\u653b\u51fb\u505a\u51c6\u5907\uff0c\u9700\u8981\u5206\u6563\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5e76\u4e14\u653b\u51fb\u9700\u8981\u5c3d\u53ef\u80fd\u9760\u8fd1\u653b\u51fb\u6e90\uff08\u8fdc\u79bb\u53d7\u5bb3\u8005\uff09\u4ee5\u51cf\u8f7b\u653b\u51fb\u5f3a\u5ea6\u3002\u672c\u6587\u901a\u8fc7\u5bf9\u6570\u636e\u5e73\u9762\u7f16\u7a0b(P4)\u548c\u4ee5\u592a\u7f51\u4ea4\u6362\u673a\u63a7\u5236\u5e73\u9762\u7f16\u7a0b\u7684\u5b9e\u9a8c\uff0c\u5728\u6bcf\u4e2a\u4ea4\u6362\u673a\u7aef\u53e3\u4e0a\u63d0\u4f9b\u5bf9SIP INVITE DDoS\u653b\u51fb\u7684\u9996\u8df3\u68c0\u6d4b\u548c\u9632\u5fa1\u80fd\u529b\u3002\u8fd9\u79cd\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u6216\u57fa\u4e8e\u6e90\u7684\u9632\u5fa1\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u5c06\u5176\u6dfb\u52a0\u81f3\u73b0\u6709\u7684\u57fa\u4e8e\u76ee\u6807\u7684\u7ec4\u4ef6\u4e2d\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u66f4\u5168\u9762\u7684\u6574\u4f53\u89e3\u51b3\u65b9\u6848\uff0c\u8be5\u89e3\u51b3\u65b9\u6848\u53ef\u6269\u5c55\u3001\u5b9e\u60e0\uff0c\u4ee5\u66f4\u597d\u5730\u5e94\u5bf9\u672a\u6765\u7684SIP DDoS\u653b\u51fb\u3002 \u6d41\u8868\u5b89\u5168 Q. Li.:Security Policy Violations in SDN Data Plane,TON,2018 Keywords: SDN, data plane, policy violationSoftware-defined networking SDN utilizes a centralized controller to distribute packet processing rules to network switches. However, rules are often generated by the applications developed by different organizations, so they may conflict with each other in data plane and lead to violations with security rules. The problem is similar to firewall conflicts in IP networks. Rule conflict resolution should incur negligible process delay, such that all rules can be correctly and safely enforced in the data plane in real time. However, since SDN allows users to use more than 35 fields to specify rules including field transition rules, it is much more complicated to prevent enforcement of SDN rules from violating with security rules than to resolve firewall rule violation, and in particular, field transition rules are enforced. Therefore, it is extremely difficult to resolve such rule conflicts in real time before the rules are installed in SDN data plane. In this paper, we investigate the rule conflict problem in SDN and identify new covert channel attacks due to rule conflicts. To the end, we propose the covert channel defender CCD that prevents covert channel attacks by verifying and resolving rule conflicts. Specifically, CCD tracks all rule insertion and modification messages from applications running on the controller. It analyzes the correlation among rules based on multiple packet header fields and resolves any identified rule conflict in real time before rule installation. We implement CCD with the Floodlight controller and evaluate its performance with the real-world Stanford topology. We show that CCD can efficiently detect and prevent rule conflicts in the data plane that may raise covert channels within hundreds of microseconds and brings small overhead to the packet delivery. SDN\u5229\u7528\u96c6\u4e2d\u5f0f\u63a7\u5236\u5668\u5c06\u6570\u636e\u5305\u5904\u7406\u89c4\u5219\u5206\u53d1\u5230\u7f51\u7edc\u4ea4\u6362\u673a\u3002\u4f46\u662f\uff0c\u89c4\u5219\u901a\u5e38\u662f\u7531\u4e0d\u540c\u7ec4\u7ec7\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\u751f\u6210\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u80fd\u5728\u6570\u636e\u5e73\u9762\u4e2d\u76f8\u4e92\u51b2\u7a81\u5e76\u5bfc\u81f4\u8fdd\u53cd\u5b89\u5168\u89c4\u5219\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5bf9SDN\u4e2d\u7684\u89c4\u5219\u51b2\u7a81\u95ee\u9898\u8fdb\u884c\u5206\u6790\uff0c\u5e76\u53d1\u73b0\u4e86\u7531\u4e8e\u89c4\u5219\u51b2\u7a81\u800c\u5f15\u8d77\u7684\u65b0\u7684\u9690\u853d\u901a\u9053\u653b\u51fb\u3002\u6700\u540e\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u79d8\u5bc6\u901a\u9053\u9632\u5fa1CCD\uff0c\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cCCD\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u548c\u89e3\u51b3\u89c4\u5219\u51b2\u7a81\u6765\u9632\u6b62\u79d8\u5bc6\u901a\u9053\u653b\u51fb\u3002","title":"First Part"},{"location":"First%20Part/#first-part","text":"","title":"First Part"},{"location":"First%20Part/#_1","text":"Tooska Dargahi et al.: A Survey on the Security of Stateful SDN Data Planes, IEEE, 2019. Keywords: Data plane,data plane abstractions,data plane architectures,data plane flexibility,data plane implementations,data plane languages,data plane programmability,deeply programmable netoworks,description languages,energy consumption,energy efficiency,hardware-based implementations,measurement,monitoring,network virtualization,network functions virtualization,networking technologies,Software-Defined Networking (SDN) emerged as an attempt to introduce network innovations faster, and to radically simplify and automate the management of large networks. SDN traditionally leverages OpenFlow as device-level abstraction. Since OpenFlow permits the programmer to \u201cjust\u201d abstract a static flow-table, any stateful control and processing intelligence is necessarily delegated to the network controller. Motivated by the latency and signaling overhead that comes along with such a two-tiered SDN programming model, in the last couple of years several works have proposed innovative switch-level (data plane) programming abstractions capable to deploy some smartness directly inside the network switches, e.g., in the form of localized stateful flow processing. Furthermore, the possible inclusion of states and state maintenance primitives inside the switches is currently being debated in the OpenFlow standardization community itself. In this paper, after having provided the reader with a background on such emerging stateful SDN data plane proposals, we focus our attention on the security implications that data plane programmability brings about. Also via the identfication of potential attack scenarios, we specfically highlight possible vulnerabilities specfic to stateful in-switch processing (including denial of service and saturation attacks), which we believe should be carefully taken into consideration in the ongoing design of current and future proposals for stateful SDN data planes. SDN\u4f20\u7edf\u4e0a\u5c06OpenFlow\u7528\u4f5c\u201c\u8bbe\u5907\u7ea7\u201d\u7684\u62bd\u8c61\u3002\u7531\u4e8eOpenFlow\u53ea\u5141\u8bb8\u7a0b\u5e8f\u5458\u63d0\u53d6\u9759\u6001\u6d41\u8868\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4efb\u4f55\u6709\u72b6\u6001\u7684\u63a7\u5236\u548c\u5904\u7406\u53ea\u80fd\u4ea4\u4e88\u63a7\u5236\u5668\u5904\u7406\u3002\u4e3a\u4e86\u89e3\u51b3\u5ef6\u65f6\u5927\u53ca\u4fe1\u53f7\u5f00\u9500\u5927\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u8fd1\u51e0\u5e74\u7684\u5de5\u4f5c\u4e2d\u63d0\u51fa\u4e86\u521b\u65b0\u7684\u6570\u636e\u5e73\u9762\u7f16\u7a0b\u62bd\u8c61\uff0c\u80fd\u76f4\u63a5\u5728\u4ea4\u6362\u673a\u5185\u90e8\u90e8\u7f72\u667a\u80fd\u529f\u80fd\uff0c\u5982\u5c40\u90e8\u72b6\u6001\u6d41\u7b49\u3002\u672c\u6587\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e86\u5173\u4e8e\u6709\u72b6\u6001SDN\u6570\u636e\u5e73\u9762\u7684\u77e5\u8bc6\uff0c\u5e76\u5206\u6790\u4e86\u5bf9\u4e8e\u6f5c\u5728\u7684\u653b\u51fb\u573a\u666f\u53ca\u5bf9\u653b\u51fb\u7684\u9632\u5fa1\u63aa\u65bd\u3002","title":"\u7efc\u8ff0"},{"location":"First%20Part/#_2","text":"Jiarong Xing et al.: Secure State Migration in the Data Plane, SigComm workshop SPIN,2020. Keywords\uff1aProgrammable data planes, P4, State migration, Stream authentication, Network securityProgrammable data planes enable stateful packet processing at hardware speeds\u2014\u2014a new capability central to many recent systems. However, protocols and systems that effectively manage data plane state remain underexplored. This paper considers the problem of secure state migration, which can serve as an important building block for state management tasks. It delivers data plane state from a source switch to a destination effectively without a software controller, while providing strong cryptographic guarantees on authenticity. Our protocol, P4Sync, tackles several technical challenges, such as adapting memory copy techniques in VM migration, offloading per-packet security operations to the data plane, and amortizing heavyweight cryptographic overheads over a batch of packets. Our initial validation shows that P4Sync has low traffic and memory overheads. challenges, such as adapting memory copy techniques in VM migration, offloading per-packet security operations to the data plane, and amortizing heavyweight cryptographic overheads over a batch of packets. Our initial validation shows that P4Sync has low traffic and memory overheads\u3002 \u8bb8\u591a\u6700\u65b0\u7cfb\u7edf\u5141\u8bb8\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4ee5\u786c\u4ef6\u901f\u5ea6\u5b9e\u73b0\u6709\u72b6\u6001\u7684\u6570\u636e\u5305\u5904\u7406\uff0c\u4f46\u662f\u6709\u6548\u7ba1\u7406\u6570\u636e\u5e73\u9762\u72b6\u6001\u7684\u534f\u8bae\u548c\u7cfb\u7edf\u4ecd\u672a\u5f97\u5230\u5f00\u53d1\u3002\u672c\u6587\u63d0\u51faP4Sync\u534f\u8bae\u4ee5\u89e3\u51b3\u5b89\u5168\u72b6\u6001\u8fc1\u79fb\u7684\u95ee\u9898\u3002P4Sync\u534f\u8bae\u80fd\u4f7f\u4ea4\u6362\u673a\u5728\u65e0\u8f6f\u4ef6\u63a7\u5236\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u6570\u636e\u5e73\u9762\u72b6\u6001\u52a0\u5bc6\u4f20\u8f93\u540e\u4f20\u9012\u5230\u76ee\u7684\u5730\u3002P4Sync\u89e3\u51b3\u4e86\u4e00\u4e9b\u6280\u672f\u96be\u9898\uff1a\u4f8b\u5982\u5728VM\u8fc1\u79fb\u4e2d\u91c7\u7528\u5185\u5b58\u590d\u5236\u6280\u672f\uff0c\u5c06\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5b89\u5168\u6027\u64cd\u4f5c\u4ea4\u8fd8\u6570\u636e\u5e73\u9762\uff0c\u4ee5\u53ca\u5747\u8861\u5206\u914d\u91cd\u91cf\u7ea7\u7684\u52a0\u5bc6\u5f00\u9500\uff0c\u540c\u65f6\uff0cP4Sync\u4e5f\u5177\u6709\u8f83\u4f4e\u7684\u6d41\u91cf\u548c\u5185\u5b58\u5f00\u9500\u3002 Gang Liu.:P4NIS Improving network immunity against eavesdropping with programmable data planes,INFOCOM,2020 Keywords: Protocols, Eavesdropping , Encryption , Internet , Servers Due to improving computational capacity of supercomputers, transmitting encrypted packets via one single network path is vulnerable to brute-force attacks. The versatile attackers secretly eavesdrop all the packets, classify packets into different streams, performs an exhaustive search for the decryption key, and extract sensitive personal information from the streams. However, new Internet Protocol (IP) brings great opportunities and challenges for preventing eavesdropping attacks. In this paper, we propose a Programming Protocol-independent Packet Processors (P4) based Network Immune Scheme (P4NIS) against the eavesdropping attacks. Specifically, P4NIS is equipped with three lines of defense to improve the network immunity. The first line is promiscuous forwarding by splitting all the traffic packets in different network paths disorderly. Complementally, the second line encrypts transmission port fields of the packets using diverse encryption algorithms. The encryption could distribute traffic packets from one stream into different streams, and disturb eavesdroppers to classify them correctly. Besides, P4NIS inherits the advantages from the existing encryption-based countermeasures which is the third line of defense. Using a paradigm of programmable data planes\u2014P4, we implement P4NIS and evaluate its performances. Experimental results show that P4NIS can increase difficulties of eavesdropping significantly, and increase transmission throughput by 31.7% compared with state-of-the-art mechanisms. \u7531\u4e8e\u8d85\u7ea7\u8ba1\u7b97\u673a\u8ba1\u7b97\u80fd\u529b\u7684\u63d0\u9ad8\uff0c\u901a\u8fc7\u5355\u4e00\u7f51\u7edc\u8def\u5f84\u4f20\u8f93\u52a0\u5bc6\u6570\u636e\u5305\u5f88\u5bb9\u6613\u53d7\u5230\u66b4\u529b\u653b\u51fb\u3002\u80fd\u529b\u51fa\u4f17\u7684\u653b\u51fb\u8005\u79d8\u5bc6\u7a83\u542c\u6240\u6709\u6570\u636e\u5305\uff0c\u5c06\u6570\u636e\u5305\u5206\u7c7b\u5230\u4e0d\u540c\u7684\u6d41\u4e2d\uff0c\u5bf9\u89e3\u5bc6\u5bc6\u94a5\u8fdb\u884c\u7a77\u4e3e\u641c\u7d22\uff0c\u5e76\u4ece\u6d41\u4e2d\u63d0\u53d6\u654f\u611f\u7684\u4e2a\u4eba\u4fe1\u606f\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u534f\u8bae\u65e0\u5173\u7684\u6570\u636e\u5305\u5904\u7406\u5668(P4)\u7684\u7f51\u7edc\u514d\u75ab\u65b9\u6848(P4NIS)\u6765\u62b5\u6297\u7a83\u542c\u653b\u51fb\u3002\u5177\u4f53\u6765\u8bf4\uff0cP4NIS\u914d\u5907\u4e09\u9053\u9632\u7ebf\uff0c\u63d0\u9ad8\u7f51\u7edc\u514d\u75ab\u529b\u3002\u7b2c\u4e00\u9053\u9632\u7ebf\u662f\u6df7\u6dc6\u8f6c\u53d1\uff0c\u5c06\u4e0d\u540c\u7f51\u7edc\u8def\u5f84\u4e2d\u7684\u6240\u6709\u6d41\u91cf\u5206\u7ec4\u65e0\u5e8f\u5730\u5206\u53d1\u3002\u7b2c\u4e8c\u9053\u9632\u7ebf\u4f7f\u7528\u4e0d\u540c\u7684\u52a0\u5bc6\u7b97\u6cd5\u52a0\u5bc6\u6570\u636e\u5305\u7684\u4f20\u8f93\u7aef\u53e3\u5b57\u6bb5\u3002\u8be5\u52a0\u5bc6\u6280\u672f\u53ef\u4ee5\u5c06\u6d41\u91cf\u5305\u4ece\u4e00\u4e2a\u6d41\u5206\u53d1\u5230\u4e0d\u540c\u7684\u6d41\u4e2d\uff0c\u5e76\u5e72\u6270\u7a83\u542c\u8005\u5bf9\u5176\u8fdb\u884c\u6b63\u786e\u7684\u5206\u7c7b\u3002 \u7b2c\u4e09\u9053\u9632\u7ebf\u662fP4NIS\u7ee7\u627f\u4e86\u57fa\u4e8e\u52a0\u5bc6\u7b56\u7565\u7684\u4f18\u52bf\u3002\u8fd0\u7528\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762p4\u7684\u57fa\u672c\u6848\u4f8b\uff0c\u6211\u4eec\u5b9e\u73b0\u4e86P4NIS\u5e76\u5bf9\u5176\u6027\u80fd\u8fdb\u884c\u4e86\u8bc4\u4f30\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cP4NIS\u80fd\u591f\u663e\u8457\u589e\u52a0\u7a83\u542c\u7684\u96be\u5ea6\uff0c\u4e0e\u73b0\u6709\u673a\u5236\u76f8\u6bd4\uff0c\u4f20\u8f93\u541e\u5410\u91cf\u63d0\u9ad8\u4e8631.7%\u3002","title":"\u6570\u636e\u5e73\u9762\u5b89\u5168\u52a0\u5bc6"},{"location":"First%20Part/#ddos","text":"Francesco Musumeci.:Machine-learning-assisted DDoS attack detection with P4 language,ICC,2020 Keywords:Computer crime,Feature extraction,Real-time systems,Prediction algorithms,Support vector machines,Protocols,Metadata While Software Defined Networking (SDN) provides well-known advantages in terms of network automation, flexibility and resources utilization, it has been observed that SDN controllers may represent critical points of failure for the entire network infrastructure, especially when they are targeted by malicious cyber attacks such as Distributed Denial of Service (DDoS). To address this issue, in this paper we exploit stateful data planes, as enabled by P4 programming language, where switches maintain persistent memory of handled packets to perform attack detection directly at the data plane, with only marginal involvement of the SDN controllers. As machine learning (ML) is recognized as primary anomaly detection methodology, we perform DDoS attack detection using a MLbased classification and compare different ML algorithms in terms of classification accuracy and train/test duration. Moreover, we combine ML and P4-enab1ed stateful data planes to design a real-time DDoS attack detection module, which we evaluate in terms of latency required for the detection. Three real-time scenarios are considered, where P4-enab1ed switches elaborate the received packets in different ways, namely, packet mirroring, header mirroring, and P4-metadata extraction. Numerical results show significant latency reduction when P4 is adopted. \u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(SDN)\u5728\u7f51\u7edc\u81ea\u52a8\u5316,\u7075\u6d3b\u6027\u548c\u8d44\u6e90\u5229\u7528\u7387\u4e0a\u62e5\u6709\u663e\u8457\u4f18\u52bf, SDN\u63a7\u5236\u5668\u88ab\u89c6\u4e3a\u6574\u4e2a\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u4e2d\u6700\u91cd\u8981\u7684\u90e8\u5206,\u7279\u522b\u662f\u5f53\u5b83\u4eec\u79f0\u4e3a\u6076\u610f\u7684\u7f51\u7edc\u653b\u51fb\uff08\u6bd4\u5982\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1(DDoS)\uff09\u7684\u76ee\u6807\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898\uff0c\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5229\u7528\u4e86P4\u7f16\u7a0b\u8bed\u8a00\u6240\u7f16\u5199\u7684\u6709\u72b6\u6001\u6570\u636e\u5e73\u9762\uff0c\u5e73\u9762\u4e2d\u4ea4\u6362\u673a\u7684\u5185\u5b58\u6301\u7eed\u5b58\u50a8\u5df2\u5904\u7406\u6570\u636e\u5305\u4ee5\u76f4\u63a5\u5728\u6570\u636e\u5e73\u9762\u4e0a\u6267\u884c\u653b\u51fb\u68c0\u6d4b\uff0cSDN\u63a7\u5236\u5668\u4ec5\u53c2\u4e0e\u5c11\u91cf\u5de5\u4f5c\u3002\u7531\u4e8e\u673a\u5668\u5b66\u4e60(ML)\u88ab\u8ba4\u4e3a\u662f\u4e3b\u8981\u7684\u5f02\u5e38\u68c0\u6d4b\u65b9\u6cd5\uff0c\u6211\u4eec\u4f7f\u7528\u57fa\u4e8eML\u7684\u5206\u7c7b\u6765\u8fdb\u884cDDoS\u653b\u51fb\u68c0\u6d4b\uff0c\u5e76\u5728\u5206\u7c7b\u7cbe\u5ea6\u548c\u8bad\u7ec3/\u6d4b\u8bd5\u6301\u7eed\u65f6\u95f4\u65b9\u9762\u6bd4\u8f83\u4e0d\u540c\u7684ML\u7b97\u6cd5\u3002\u6b64\u5916\uff0c\u6211\u4eec\u7ed3\u5408ML\u548cp4\u542f\u7528\u7684\u72b6\u6001\u6570\u636e\u5e73\u9762\u8bbe\u8ba1\u4e86\u4e00\u4e2a\u5b9e\u65f6DDoS\u653b\u51fb\u68c0\u6d4b\u6a21\u5757\uff0c\u6211\u4eec\u6839\u636e\u68c0\u6d4b\u6240\u9700\u7684\u5ef6\u8fdf\u8fdb\u884c\u8bc4\u4f30\u3002\u6211\u4eec\u8003\u8651\u4e86\u4e09\u4e2a\u5b9e\u65f6\u573a\u666f\uff0c\u5176\u4e2dP4-enab1ed\u4ea4\u6362\u673a\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u7cbe\u5fc3\u8bbe\u8ba1\u63a5\u6536\u5230\u7684\u6570\u636e\u5305\uff0c\u5373\u6570\u636e\u5305\u955c\u50cf\u3001\u6570\u636e\u5305\u5934\u955c\u50cf\u548cp4 -\u5143\u6570\u636e\u63d0\u53d6\u3002\u6570\u503c\u7ed3\u679c\u8868\u660e\uff0c\u91c7\u7528P4\u53ef\u4ee5\u663e\u8457\u964d\u4f4e\u5ef6\u8fdf\u3002 Song Wang.:SECOD: SDN sEcure control and data plane algorithm for detecting and defending against DoS attacks,IFIP Networking,2018 Keywords:SDN,OpenFlow,Security,Dos Attack Although the popularity of Software-Defined Networking (SDN) is increasing, it is also vulnerable to security attacks such as Denial of Service (DoS) attacks. Since in SDN, the control plane is isolated from the data plane, DoS attackers can easily target the control plane to impair the network infrastructure in addition to the data plane to degrade the user's Quality of Service (QoS). In our previous work, we introduced SECO, an SDN Secure Controller algorithm to detect and defend SDN against DoS attacks. Simulation results showed that SECO successfully defends SDN networks from DoS attacks. In this paper, we present SDN sEcure COntrol and Data Plane (SECOD), which is an improved version of SECO. Basically, SECOD introduces new triggers to detect and prevent DoS attacks in both control and data planes. Moreover, SECOD is implemented and tested using SDN-based hardware testbed, OpenFlow-based switch, and RYU controller to capture the dynamics of realistic hardware and software. The results show that SECOD successfully detects and effectively mitigates DoS attacks on SDN networks keeping data plane performance at 99.72% compared to a network not under attack. \u867d\u7136SDN (Software-Defined Networking, SDN)\u8d8a\u6765\u8d8a\u6d41\u884c\uff0c\u4f46\u5b83\u4e5f\u5bb9\u6613\u53d7\u5230\u8bf8\u5982\u62d2\u7edd\u670d\u52a1(Denial of Service, DoS)\u7b49\u5b89\u5168\u653b\u51fb\u3002\u7531\u4e8e\u5728SDN\u7f51\u7edc\u4e2d\uff0c\u63a7\u5236\u5e73\u9762\u4e0e\u6570\u636e\u5e73\u9762\u662f\u9694\u79bb\u7684\uff0cDoS\u653b\u51fb\u8005\u53ef\u4ee5\u5f88\u5bb9\u6613\u5730\u5c06\u63a7\u5236\u5e73\u9762\u4f5c\u4e3a\u653b\u51fb\u76ee\u6807\u5e76\u7834\u574f\u7f51\u7edc\u57fa\u7840\u8bbe\u65bd\u4ee5\u53ca\u6570\u636e\u5e73\u9762\uff0c\u4ece\u800c\u964d\u4f4e\u7528\u6237\u7684\u670d\u52a1\u8d28\u91cf(QoS)\u3002\u5728\u4e4b\u524d\u7684\u5de5\u4f5c\u4e2d\uff0c\u6211\u4eec\u4ecb\u7ecd\u4e86SECO\uff0c\u4e00\u79cdSDN\u5b89\u5168\u63a7\u5236\u5668\u7b97\u6cd5\uff0c\u7528\u4e8e\u68c0\u6d4b\u548c\u9632\u5fa1DoS\u653b\u51fb\u3002\u4eff\u771f\u7ed3\u679c\u8868\u660e\uff0cSECO\u6210\u529f\u5730\u62b5\u5fa1\u4e86DoS\u653b\u51fb\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86SDN\u5b89\u5168\u63a7\u5236\u4e0e\u6570\u636e\u5e73\u9762(SECOD)\uff0c\u5b83\u662fSECO\u7684\u6539\u8fdb\u7248\u672c\u3002\u5728SECO\u7684\u57fa\u7840\u4e0a\uff0cSECOD\u5f15\u5165\u4e86\u65b0\u7684\u89e6\u53d1\u5668\uff0c\u5728\u63a7\u5236\u548c\u6570\u636e\u5c42\u9762\u68c0\u6d4b\u548c\u9632\u6b62DoS\u653b\u51fb\u3002\u5229\u7528\u57fa\u4e8esdn\u7684\u786c\u4ef6\u6d4b\u8bd5\u53f0\u3001\u57fa\u4e8eopenflow\u7684\u4ea4\u6362\u673a\u548cRYU\u63a7\u5236\u5668\u5b9e\u73b0\u548c\u6d4b\u8bd5SECOD\uff0c\u83b7\u53d6\u771f\u5b9e\u7684\u786c\u4ef6\u548c\u8f6f\u4ef6\u4fe1\u606f\u3002\u7ed3\u679c\u8868\u660e\uff0cSECOD\u6210\u529f\u68c0\u6d4b\u5e76\u6709\u6548\u964d\u4f4e\u4e86DoS\u5bf9SDN\u7f51\u7edc\u7684\u653b\u51fb\uff0c\u4e0e\u672a\u53d7\u653b\u51fb\u7684\u7f51\u7edc\u76f8\u6bd4\uff0c\u6570\u636e\u5e73\u9762\u6027\u80fd\u4fdd\u6301\u572899.72%\u3002 Aldo Febro.:Distributed SIP DDoS Defense with P4,WCNC,2019 Keywords:SIP,DoS,DDoS,SDN,P4,data plane,control plane SIP DDoS attack is growing and has a real threat to crippling public communication infrastructure. The standard approach to building the defense is at or near the attack destination (i.e. victim's location). This approach is struggling to keep up with the growing volume and attack sophistication. To be better prepared for future attacks, the workload needs to be distributed, and the attack needs to be mitigated as close to the attack source as possible. This paper experiments with data plane programming (P4) and control plane programming of Ethernet switches to provide first-hop detection and mitigation capability for SIP INVITE DDoS attack at every switchport. This approach creates a distributed or source-based defense component which could be added to the existing destination-based components to create a more comprehensive overall solution that is extensible, economical, and scalable against SIP DDoS attack of the future. SIP DDoS\u653b\u51fb\u6570\u91cf\u7684\u4e0d\u65ad\u589e\u52a0\uff0c\u5bf9\u516c\u5171\u901a\u4fe1\u57fa\u7840\u8bbe\u65bd\u6784\u6210\u4e86\u771f\u6b63\u7684\u5a01\u80c1\u3002\u5efa\u7acb\u9632\u5fa1\u7684\u6807\u51c6\u505a\u6cd5\u662f\u5728\u88ab\u653b\u51fb\u76ee\u6807(\u5373\u53d7\u5bb3\u8005\u7684\u4f4d\u7f6e)\u9644\u8fd1\u8fdb\u884c\u9632\u5fa1\u90e8\u7f72\u3002\u8fd9\u79cd\u65b9\u6cd5\u5f88\u96be\u8ddf\u4e0a\u4e0d\u65ad\u589e\u957f\u7684\u6570\u91cf\u548c\u653b\u51fb\u590d\u6742\u6027\u3002\u4e3a\u4e86\u66f4\u597d\u5730\u4e3a\u672a\u6765\u7684\u653b\u51fb\u505a\u51c6\u5907\uff0c\u9700\u8981\u5206\u6563\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u5e76\u4e14\u653b\u51fb\u9700\u8981\u5c3d\u53ef\u80fd\u9760\u8fd1\u653b\u51fb\u6e90\uff08\u8fdc\u79bb\u53d7\u5bb3\u8005\uff09\u4ee5\u51cf\u8f7b\u653b\u51fb\u5f3a\u5ea6\u3002\u672c\u6587\u901a\u8fc7\u5bf9\u6570\u636e\u5e73\u9762\u7f16\u7a0b(P4)\u548c\u4ee5\u592a\u7f51\u4ea4\u6362\u673a\u63a7\u5236\u5e73\u9762\u7f16\u7a0b\u7684\u5b9e\u9a8c\uff0c\u5728\u6bcf\u4e2a\u4ea4\u6362\u673a\u7aef\u53e3\u4e0a\u63d0\u4f9b\u5bf9SIP INVITE DDoS\u653b\u51fb\u7684\u9996\u8df3\u68c0\u6d4b\u548c\u9632\u5fa1\u80fd\u529b\u3002\u8fd9\u79cd\u65b9\u6cd5\u521b\u5efa\u4e00\u4e2a\u5206\u5e03\u5f0f\u6216\u57fa\u4e8e\u6e90\u7684\u9632\u5fa1\u7ec4\u4ef6\uff0c\u53ef\u4ee5\u5c06\u5176\u6dfb\u52a0\u81f3\u73b0\u6709\u7684\u57fa\u4e8e\u76ee\u6807\u7684\u7ec4\u4ef6\u4e2d\uff0c\u4ee5\u521b\u5efa\u4e00\u4e2a\u66f4\u5168\u9762\u7684\u6574\u4f53\u89e3\u51b3\u65b9\u6848\uff0c\u8be5\u89e3\u51b3\u65b9\u6848\u53ef\u6269\u5c55\u3001\u5b9e\u60e0\uff0c\u4ee5\u66f4\u597d\u5730\u5e94\u5bf9\u672a\u6765\u7684SIP DDoS\u653b\u51fb\u3002","title":"DDoS\u653b\u51fb\u9632\u5fa1"},{"location":"First%20Part/#_3","text":"Q. Li.:Security Policy Violations in SDN Data Plane,TON,2018 Keywords: SDN, data plane, policy violationSoftware-defined networking SDN utilizes a centralized controller to distribute packet processing rules to network switches. However, rules are often generated by the applications developed by different organizations, so they may conflict with each other in data plane and lead to violations with security rules. The problem is similar to firewall conflicts in IP networks. Rule conflict resolution should incur negligible process delay, such that all rules can be correctly and safely enforced in the data plane in real time. However, since SDN allows users to use more than 35 fields to specify rules including field transition rules, it is much more complicated to prevent enforcement of SDN rules from violating with security rules than to resolve firewall rule violation, and in particular, field transition rules are enforced. Therefore, it is extremely difficult to resolve such rule conflicts in real time before the rules are installed in SDN data plane. In this paper, we investigate the rule conflict problem in SDN and identify new covert channel attacks due to rule conflicts. To the end, we propose the covert channel defender CCD that prevents covert channel attacks by verifying and resolving rule conflicts. Specifically, CCD tracks all rule insertion and modification messages from applications running on the controller. It analyzes the correlation among rules based on multiple packet header fields and resolves any identified rule conflict in real time before rule installation. We implement CCD with the Floodlight controller and evaluate its performance with the real-world Stanford topology. We show that CCD can efficiently detect and prevent rule conflicts in the data plane that may raise covert channels within hundreds of microseconds and brings small overhead to the packet delivery. SDN\u5229\u7528\u96c6\u4e2d\u5f0f\u63a7\u5236\u5668\u5c06\u6570\u636e\u5305\u5904\u7406\u89c4\u5219\u5206\u53d1\u5230\u7f51\u7edc\u4ea4\u6362\u673a\u3002\u4f46\u662f\uff0c\u89c4\u5219\u901a\u5e38\u662f\u7531\u4e0d\u540c\u7ec4\u7ec7\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\u751f\u6210\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u80fd\u5728\u6570\u636e\u5e73\u9762\u4e2d\u76f8\u4e92\u51b2\u7a81\u5e76\u5bfc\u81f4\u8fdd\u53cd\u5b89\u5168\u89c4\u5219\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5bf9SDN\u4e2d\u7684\u89c4\u5219\u51b2\u7a81\u95ee\u9898\u8fdb\u884c\u5206\u6790\uff0c\u5e76\u53d1\u73b0\u4e86\u7531\u4e8e\u89c4\u5219\u51b2\u7a81\u800c\u5f15\u8d77\u7684\u65b0\u7684\u9690\u853d\u901a\u9053\u653b\u51fb\u3002\u6700\u540e\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u79d8\u5bc6\u901a\u9053\u9632\u5fa1CCD\uff0c\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cCCD\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u548c\u89e3\u51b3\u89c4\u5219\u51b2\u7a81\u6765\u9632\u6b62\u79d8\u5bc6\u901a\u9053\u653b\u51fb\u3002","title":"\u6d41\u8868\u5b89\u5168"},{"location":"Second%20Part/","text":"Second Part OF\u4ea4\u6362\u673a\u6d41\u8868\u5b89\u5168 W. Feng et al.: \"MEM: A Multi-Staged Eviction Mechanism of Flowtable for Software-Defined Datacenters,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 2020, pp. flow entries \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eSDDC\u6d41\u91cf\u7279\u6027\u7684\u6d41\u8868\u591a\u7ea7\u9a71\u9010\u673a\u5236\uff08MEM\uff09\uff0c\u5176\u4e2d\u5305\u62ec\u5206\u7c7b\uff0c\u8bc6\u522b\u548c\u9a71\u9010\u9636\u6bb5\u3002\u6839\u636e\u6d41\u7684\u6301\u4e45\u72b6\u6001\u548c\u57fa\u672c\u7edf\u8ba1\u4fe1\u606f\u5bf9\u6d41\u6761\u76ee\u8fdb\u884c\u4e24\u6b21\u5206\u7c7b\u3002\u7136\u540e\uff0c\u5f15\u5165\u4e00\u4e2a\u79f0\u4e3a\u81ea\u52a8\u56de\u5f52\u79fb\u52a8\u5e73\u5747\u7ebf\uff08ARMA\uff09\u7684\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u6a21\u578b\uff0c\u4ee5\u9884\u6d4b\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\u6d41\u6761\u76ee\u7684\u672a\u6765\u72b6\u6001\u3002\u6700\u540e\uff0c\u9884\u6d4b\u51fa\u7684\u6700\u8fd1\u672a\u4f7f\u7528\u7684\u6d41\u6761\u76ee\u5c06\u88ab\u9a71\u9010\u4ee5\u51cf\u8f7b\u6d41\u8868\u5b58\u50a8\u4e0a\u7684\u538b\u529b\u3002 C. Zhang et al.: \"Admission control in software-defined datacenter network in view of flow table capacity,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Honolulu, HI, 2018, pp. flow entries SDN\u4ea4\u6362\u673a\u7684\u529f\u80fd\u8584\u5f31\uff0c\u4f8b\u5982\u6d41\u8868\u5bb9\u91cf\uff0c\u7ed9\u57fa\u4e8eOpenFlow\u7684SDN\u7684\u53ef\u4f38\u7f29\u6027\u5e26\u6765\u4e86\u6311\u6218\u3002\u8003\u8651\u5230\u4ea4\u6362\u673a\u7684\u6d41\u8868\u5bb9\u91cf\uff0c\u5f53\u524d\u6d41\u8868\u5bb9\u91cf\u548c\u6570\u636e\u4e2d\u5fc3\u6240\u9700\u6d41\u6761\u76ee\u6570\u91cf\u4e4b\u95f4\u7684\u5de8\u5927\u5dee\u8ddd\u9700\u8981\u4e00\u79cd\u65b0\u9896\u7684\u63a5\u7eb3\u63a7\u5236\u673a\u5236\uff0c\u800c\u4e0d\u662f\u50cf\u4f20\u7edf\u7f51\u7edc\u90a3\u6837\u4ec5\u8003\u8651\u94fe\u8def\u5bb9\u91cf\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u63a7\u5236\u5668\u7ea7\u522b\u51c6\u5165\u63a7\u5236\u673a\u5236\uff0c\u5e76\u4f7f\u7528\u89c4\u8303\u7684\u4e09\u5c42\u6570\u636e\u4e2d\u5fc3\u62d3\u6251\u57fa\u4e8e\u6570\u503c\u6a21\u62df\u7ed3\u679c\u8bc4\u4f30\u4e86\u5176\u6709\u6548\u6027\u3002 G. Shen et al.: \"How Powerful Switches Should be Deployed: A Precise Estimation Based on Queuing Theory,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. flow entries SDN\u5bf9\u8bb8\u591a\u4f20\u7edf\u7684\u6570\u636e\u4e2d\u5fc3\u7f51\u7edc\uff08DCN\uff09\u8fdb\u884c\u4e86\u5347\u7ea7\uff0c\u4ee5\u63d0\u9ad8\u94fe\u8def\u5229\u7528\u7387\u548c\u7ba1\u7406\u7075\u6d3b\u6027\uff0c\u4f46\u662f\u5b83\u4eec\u7f3a\u4e4f\u9009\u62e9\u5177\u6709\u9002\u5f53\u6d41\u8868\u7a7a\u95f4\u7684\u4ee3\u7528SDN\u4ea4\u6362\u673a\u4ee5\u5b9e\u73b0\u5177\u6709\u6210\u672c\u6548\u76ca\u548c\u8282\u80fd\u7f51\u7edc\u7684\u8bf4\u660e\u3002\u672c\u6587\u586b\u8865\u4e86\u57fa\u4e8e\u6392\u961f\u8bba\u89e3\u51b3\u6d41\u8868\u7a7a\u95f4\u4f30\u8ba1\u95ee\u9898\u7684\u7a7a\u767d\u3002\u9996\u5148\uff0c\u5c06\u6d41\u8868\u6761\u76ee\u7684\u751f\u5b58\u8fc7\u7a0b\u5206\u4e3a\u5165\u5305\u8fc7\u7a0b\uff0c\u5904\u7406\u8fc7\u7a0b\u548c\u670d\u52a1\u8fc7\u7a0b\uff0c\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6392\u961f\u7cfb\u7edf\uff0c\u4ee5\u4f30\u8ba1\u6700\u5c11\u6570\u91cf\u7684SDN\u4ea4\u6362\u673a\u6d41\u8868\u6761\u76ee\u3002\u7b2c\u4e8c\uff0c\u5206\u6790DCN\u7684\u6d41\u91cf\u5206\u5e03\uff0c\u4ee5\u8ba1\u7b97\u6a21\u578b\u4e2d\u7684\u5173\u952e\u53c2\u6570\u3002\u7b2c\u4e09\uff0c\u57fa\u4e8eDCN\u4e2d\u7ed3\u6784\u5316\u62d3\u6251\u7684\u672c\u8d28\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u8def\u7531\u7b56\u7565\u7684\u6982\u7387\u6a21\u578b\uff0c\u4ee5\u91cf\u5316\u8def\u5f84\u9009\u62e9\u7684\u5f71\u54cd\u3002 B. Zhao et al.: \"Efficient and Consistent TCAM Updates,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. flow entries \u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\u7684\u52a8\u6001\u6027\u8d28\u8981\u6c42\u9891\u7e41\u66f4\u65b0\u4ea4\u6362\u673a\u6570\u636e\u5e73\u9762\u4e2d\u7684\u6d41\u8868\u3002\u73b0\u6709\u7684\u73b0\u6210\u4ea4\u6362\u673a\u6279\u91cf\u66f4\u65b0\u89c4\u5219\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u662f\u5728\u6279\u91cf\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u8f6c\u53d1\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u672c\u6587\u8bbe\u8ba1\u548c\u8bc4\u4f30\u4e86\u4e00\u4e2aTCAM\u66f4\u65b0\u4f18\u5316\u6846\u67b6\uff0c\u8be5\u6846\u67b6\u53ef\u4ee5\u5728\u4f7f\u7528\u5206\u5c42TCAM\u7ed3\u6784\u7684\u540c\u65f6\u4fdd\u8bc1\u6574\u4e2a\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u7684\u4e00\u81f4\u8f6c\u53d1\u3002\u6b64\u65b9\u6cd5\u57fa\u4e8e\u4fee\u6539\u540e\u7684\u6761\u76ee\u4f18\u5148\u5199\u56de\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u53ef\u663e\u7740\u51cf\u5c11TCAM\u6761\u76ee\u79fb\u52a8\u5e26\u6765\u7684\u5f00\u9500\u3002\u8fd8\u53ef\u4ee5\u68c0\u6d4b\u5230\u91cd\u65b0\u6392\u5e8f\u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u8fdb\u884c\u5904\u7406\u3002 Garegin Grigoryan et al.: 2018. PFCA: a programmable FIB caching architecture. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 97\u2013103. openflow TCAM\u6602\u8d35\u4e14\u8017\u80fd\u3002\u6b64\u5916\uff0cFIB\u7684\u6301\u7eed\u589e\u957f\u53ef\u80fd\u4f1a\u5bfc\u81f4TCAM\u6ea2\u51fa\u95ee\u9898\u3002\u7136\u800c\uff0c\u53ea\u6709\u4e00\u5c0f\u90e8\u5206FIB\u6761\u76ee\u627f\u8f7d\u4e86\u5927\u90e8\u5206\u7f51\u7edc\u6d41\u91cf\u3002\u56e0\u6b64\uff0cFIB\u7f13\u5b58\uff0c\u5373\u5728\u5feb\u901f\u5b58\u50a8\u5668\uff08\u4f8b\u5982TCAM\uff09\u4e2d\u5b89\u88c5\u6700\u6d41\u884c\u7684\u6761\u76ee\uff0c\u53ef\u80fd\u4f1a\u5927\u5927\u51cf\u5c11TCAM\u7684\u4f7f\u7528\u3002\u5728\u504f\u8bba\u6587\u4e2d\uff0c\u5229\u7528\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u6982\u5ff5\u6765\u8bbe\u8ba1\u5177\u6709\u4e24\u7ea7\u7f13\u5b58\u7684\u53ef\u7f16\u7a0bFIB\u7f13\u5b58\u4f53\u7cfb\u7ed3\u6784\uff08PFCA\uff09\u3002\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u7ba1\u9053\u7684\u7b97\u6cd5\u6765\u68c0\u6d4b\u7f13\u5b58\u4e2d\u7528\u4e8e\u9a71\u9010\u53d7\u5bb3\u8005\u7684\u6700\u4e0d\u6d41\u884c\u7684\u524d\u7f00\u3002 N. Huang et al.: \"Software-Defined Label Switching: Scalable Per-Flow Control in SDN,\" 2018 IEEE/ACM 26th International Symposium on Quality of Service (IWQoS), Banff, AB, Canada, 2018, pp. openflow \u4e3a\u4fdd\u7559\u6570\u636e\u5e73\u9762\u53ef\u4f38\u7f29\u6027\u7684\u540c\u65f6\u5b9e\u73b0\u6bcf\u6d41\u63a7\u5236\u3002\u73b0\u6709\u7684SDN\u67b6\u6784\u65e0\u6cd5\u6709\u6548\u5730\u5b9e\u73b0\u6bcf\u6d41\u63a7\u5236\uff1a\u5b83\u4eec\u8981\u4e48\u5bfc\u81f4\u6570\u636e\u5305\u7684\u989d\u5916\u5ef6\u8fdf\uff0c\u8981\u4e48\u7ed9\u4ea4\u6362\u673a\u5e26\u6765\u9ad8\u5b58\u50a8\u8d1f\u62c5\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u8f6f\u4ef6\u5b9a\u4e49\u7684\u6807\u7b7e\u4ea4\u6362\uff08SDLS\uff09\uff0c\u4ee5\u5b9e\u73b0\u6570\u636e\u5e73\u9762\u53ef\u6269\u5c55\u6027\u548c\u6309\u6d41\u63a7\u5236\u3002SDLS\u5c06\u4e2d\u592e\u63a7\u5236\u4e0e\u6807\u7b7e\u5207\u6362\u76f8\u7ed3\u5408\uff0c\u4ee5\u51cf\u8f7b\u5b58\u50a8\u8d1f\u62c5\uff0c\u540c\u65f6\u4fdd\u6301\u6bcf\u6d41\u63a7\u5236\u3002SDLS\u5c06\u8f6f\u4ef6\u4ea4\u6362\u673a\u5f15\u5165\u6570\u636e\u5e73\u9762\uff0c\u5e76\u5728\u533a\u57df\u4e2d\u7ba1\u7406\u7f51\u7edc\u4ee5\u5b9e\u73b0\u53ef\u4f38\u7f29\u6027\u3002SDLS\u4e0eOpenFlow\u517c\u5bb9\uff0c\u5e76\u91c7\u7528\u6df7\u5408\u6570\u636e\u5e73\u9762\u6765\u63d0\u4f9b\u6709\u6548\u7684\u6d41\u8bbe\u7f6e\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660eSDLS\u53ef\u4ee5\u5728\u5ef6\u8fdf\u6027\u80fd\u65b9\u9762\u8fbe\u5230\u6700\u4f73\uff0c\u540c\u65f6\u5c06\u6d41\u6761\u76ee\u548c\u6ea2\u51fa\u7684\u6570\u91cf\u51cf\u5c11\u4e8647\uff05\u4ee5\u4e0a\u3002 H. Xu et al.: \"Lightweight Flow Distribution for Collaborative Traffic Measurement in Software Defined Networks,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. flow entries \u6d41\u91cf\u7ea7\u522b\u7684\u7ec6\u7c92\u5ea6\u6d41\u91cf\u6d4b\u91cf\u4e2d\uff0c\u7531\u4e8e\u57fa\u4e8eTCAM\u7684\u6d41\u6761\u76ee\u4ec5\u63d0\u4f9b\u805a\u5408\u7684\u6d41\u91cf\u7edf\u8ba1\u4fe1\u606f\uff0c\u56e0\u6b64\u5148\u524d\u7684\u7814\u7a76\u5efa\u8bae\u5728SRAM\u4e2d\u6267\u884c\u6d41\u7ea7\u522b\u7684\u6d4b\u91cf\uff0c\u5e76\u901a\u8fc7\u534f\u4f5c\u6d41\u91cf\u6d4b\u91cf\u6765\u5e73\u8861\u6574\u4e2a\u7f51\u7edc\u4e0a\u7684\u6d4b\u91cf\u8d1f\u8f7d\u3002\u534f\u4f5c\u6d4b\u91cf\u7684\u5173\u952e\u95ee\u9898\u662f\u63d0\u4f9b\u4e00\u79cd\u5c06\u6d41\u91cf\u5206\u914d\u5230\u4ea4\u6362\u673a\u7684\u673a\u5236\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u4ea4\u6362\u673a\u90fd\u53ef\u4ee5\u6807\u8bc6\u8981\u6d4b\u91cf\u7684\u6d41\u91cf\u5b50\u96c6\u3002\u5148\u524d\u7684\u5de5\u4f5c\u96c6\u4e2d\u5728\u4f18\u5316\u4ea4\u6362\u673a\u4e4b\u95f4\u7684\u6d41\u5206\u914d\u4e0a\uff0c\u4f46\u662f\u5ffd\u7565\u4e86\u5b83\u4eec\u5f15\u5165\u6570\u636e\u5e73\u9762\u7684\u9ad8\u7a7a\u95f4\u548c\u6309\u6570\u636e\u5305\u5904\u7406\u7684\u5f00\u9500\uff0c\u8fd9\u5728\u5927\u578bSDN\u7cfb\u7edf\u4e2d\u6210\u4e3a\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8f7b\u91cf\u7ea7\u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u6d41\u91cf\u5206\u914d\u95ee\u9898\u3002\u5b83\u9075\u5faa\u901a\u8fc7\u6700\u5c0f\u5316\u6570\u636e\u5e73\u9762\u7a7a\u95f4\u548c\u5904\u7406\u5f00\u9500\u6765\u51cf\u8f7b\u6570\u636e\u5e73\u9762\u590d\u6742\u6027\u7684\u8bbe\u8ba1\u539f\u7406\u3002\u5728\u63a7\u5236\u5e73\u9762\u4e0a\uff0c\u5c06\u6d41\u91cf\u5206\u914d\u516c\u5f0f\u5316\u4e3a\u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u4f18\u5316\u95ee\u9898\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u901a\u8fc7\u8fb9\u7f18\u4ea4\u6362\u673a\u548c\u8fb9\u7f18/\u6838\u5fc3\u4ea4\u6362\u673a\u4e00\u8d77\u5b9e\u65bd\u534f\u4f5c\u6d4b\u91cf\u3002\u4eff\u771f\u8868\u660e\uff0c\u4e0e\u73b0\u6709\u6700\u597d\u7684\u5de5\u4f5c\u76f8\u6bd4\uff0c\u6240\u63d0\u51fa\u7684\u8f7b\u91cf\u7ea7\u89e3\u51b3\u65b9\u6848\u5728\u8d1f\u8f7d\u5e73\u8861\u65b9\u9762\u8fbe\u5230\u4e86\u53ef\u6bd4\u7684\u6027\u80fd\uff0c\u540c\u65f6\u5927\u5927\u51cf\u5c11\u4e86\u7a7a\u95f4\u5f00\u9500\u548c\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5904\u7406\u5f00\u9500\uff0c\u4f7f\u5176\u5728\u5b9e\u9645\u7cfb\u7edf\u4e2d\u66f4\u52a0\u5b9e\u7528\uff0c\u5bf9\u6d41\u91cf\u5206\u914d\u6240\u5e26\u6765\u7684\u989d\u5916\u5f00\u9500\u5f88\u654f\u611f\u3002 G. Zhao et al.: \"HiFi: Hybrid Rule Placement for Fine-Grained Flow Management in SDNs,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. \u5728\u672c\u6587\u4e2d\uff0c\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86HiFi\uff0c\u8be5\u7cfb\u7edf\u53ef\u901a\u8fc7\u6700\u5c11\u7684\u6d41\u6761\u76ee\u6570\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u7ba1\u7406\u3002\u4e3a\u6b64\uff0cHiFi\u91c7\u7528\u4e24\u6b65\u65b9\u6cd5\uff1a\u901a\u914d\u7b26\u6761\u76ee\u5b89\u88c5\u548c\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u7cbe\u786e\u5339\u914d\u6761\u76ee\u5b89\u88c5\u3002\u4f46\u662f\uff0c\u5982\u4f55\u6700\u4f73\u5730\u5b89\u88c5\u901a\u914d\u7b26\u548c\u5b8c\u5168\u5339\u914d\u6d41\u6761\u76ee\u662f\u5f88\u68d8\u624b\u7684\u3002\u56e0\u6b64\uff0cHiFi\u7528\u6709\u754c\u56e0\u7d20\u7684\u8fd1\u4f3c\u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u5e76\u4ee5\u6848\u4f8b\u7814\u7a76\u7684\u65b9\u5f0f\u8003\u8651\u5982\u4f55\u901a\u8fc7\u7ec6\u7c92\u5ea6\u7684\u6d41\u91cf\u7ba1\u7406\u5b9e\u73b0\u7f51\u7edc\u8303\u56f4\u7684\u8d1f\u8f7d\u5e73\u8861\u3002\u5b9e\u9a8c\u548c\u4eff\u771f\u7ed3\u679c\u5747\u8868\u660e\uff0c\u4e0e\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u6700\u65b0\u65b9\u6cd5\u76f8\u6bd4\uff0cHiFi\u53ef\u4ee5\u5c06\u6240\u9700\u6d41\u6761\u76ee\u7684\u6570\u91cf\u51cf\u5c11\u7ea645\uff05-69\uff05\uff0c\u5e76\u5c06\u63a7\u5236\u5f00\u9500\u51cf\u5c1128\uff05-50\uff05\u3002 C. He et al.: \"POMP: Protocol Oblivious SDN Programming with Automatic Multi-Table Pipelining,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications, Honolulu, HI, 2018, pp. POMP\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u540c\u65f6\u652f\u6301\u534f\u8bae\u9057\u5fd8\u8f6c\u53d1\u548c\u81ea\u52a8\u591a\u8868\u6d41\u6c34\u7ebf\u64cd\u4f5c\u7684SDN\u7f16\u7a0b\u73af\u5883\u3002POMP\u5e94\u7528\u9759\u6001\u6c61\u70b9\u5206\u6790\u6280\u672f\u4ece\u7a0b\u5e8f\u5458\u7f16\u5199\u7684\u6570\u636e\u5e73\u9762\u4e0d\u53ef\u77e5\u7f51\u7edc\u7b56\u7565\u81ea\u52a8\u63a8\u65ad\u7d27\u51d1\u9ad8\u6548\u7684\u591a\u8868\u7ba1\u9053\u3002\u8fd0\u884c\u65f6\u7cfb\u7edf\u8ddf\u8e2a\u7f51\u7edc\u7b56\u7565\u7684\u6267\u884c\uff0c\u5e76\u81ea\u52a8\u751f\u6210\u8868\u6761\u76ee\u3002POMP\u5728\u6c61\u70b9\u5206\u6790\u4e2d\u8fd8\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u4f9d\u8d56\u6807\u7b7e\u6982\u5ff5\uff0c\u8be5\u6982\u5ff5\u4e0e\u7f51\u7edc\u7b56\u7565\u7684\u8fd0\u884c\u65f6\u4fe1\u606f\u76f8\u7ed3\u5408\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c11\u8868\u9879\u7684\u6570\u91cf\u3002\u4e0eP4\u4e00\u6837\uff0cPOMP\u901a\u8fc7\u63d0\u4f9b\u7f51\u7edc\u534f\u8bae\u89c4\u8303\u8bed\u8a00\u6765\u652f\u6301\u534f\u8bae\u65e0\u5173\u7684\u7f16\u7a0b\u3002\u53ef\u4ee5\u6839\u636e\u534f\u8bae\u89c4\u8303\u81ea\u52a8\u751f\u6210\u6570\u636e\u5305\u89e3\u6790\u5668\u3002POMP\u652f\u6301\u4e24\u4e2a\u4e3b\u8981\u7684\u65b0\u5174SDN\u5e73\u53f0POF\u548cP4\uff0c\u56e0\u6b64\uff0c\u7528POMP\u7f16\u5199\u7684\u7f51\u7edc\u7b56\u7565\u53ef\u4ee5\u5728\u652f\u6301POF\u6216P4\u7684\u4efb\u4f55\u4ea4\u6362\u673a\u4e0a\u79fb\u690d\u3002\u53ef\u4ee5\u6839\u636e\u534f\u8bae\u89c4\u8303\u81ea\u52a8\u751f\u6210\u6570\u636e\u5305\u89e3\u6790\u5668\u3002 M. Yu et al.: \"Flow Table Security in SDN: Adversarial Reconnaissance and Intelligent Attacks,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. \u672c\u7bc7\u63d0\u51fa\u4e86\u4e00\u79cd\u9488\u5bf9openflow \u6d41\u8868\u7684\u667a\u80fd\u653b\u51fb\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5229\u7528\u6d41\u8868\u7684\u7279\u5b9a\u4e8e\u9ad8\u901f\u7f13\u5b58\u7684\u884c\u4e3a\u6765\u63a8\u65ad\u5176\u5185\u90e8\u914d\u7f6e\u548c\u72b6\u6001\uff0c\u7136\u540e\u76f8\u5e94\u5730\u8bbe\u8ba1\u653b\u51fb\u53c2\u6570\u3002 \u7f51\u7edc\u67b6\u6784\u5b89\u5168\uff0c\u68c0\u6d4b\uff0c\u6545\u969c\u6062\u590d Arjun Roy et al.: 2018. Cloud Datacenter SDN Monitoring: Experiences and Challenges. In Proceedings of the Internet Measurement Conference 2018 ( IMC \u201918 ). Association for Computing Machinery, New York, NY, USA, 464\u2013470. keyword\uff1aNetwork measurement; Cloud computing; Network monitoring; \u8fd9\u7bc7\u8bba\u6587\u9762\u5bf9\u4e91\u8ba1\u7b97\u6570\u636e\u4e2d\u5fc3\u7684\u7f51\u7edc\u67b6\u6784\u6240\u9700\u8981\u7684\u5feb\u901f\u68c0\u6d4b\u548c\u7f13\u89e3\u67b6\u6784\u6545\u969c\u95ee\u9898\uff0c\u63cf\u8ff0\u4e86\u6784\u5efa\u76f8\u5e94\u7684\u57fa\u4e8e\u4e91\u7684\u6545\u969c\u76d1\u63a7\u7cfb\u7edf\u6240\u9762\u4e34\u7684\u6311\u6218\uff0c\u5e76\u9610\u660e\u4e86\u865a\u62df\u5316\u67b6\u6784\u4e0b\u5bf9\u6570\u636e\u4e2d\u5fc3\u6545\u969c\u7ba1\u7406\u7684\u5f71\u54cd\uff0c\u7ed3\u8bba\u663e\u793a\uff0c\u865a\u62df\u5316\uff0c\u79df\u6237\u8f6f\u4ef6\u548c\u7f51\u7edc\u7ed3\u6784\u7684\u8f83\u4f4e\u5c42\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u6545\u969c\u68c0\u6d4b\u548c\u8bca\u65ad\u5de5\u4f5c\u7684\u5404\u4e2a\u4e0d\u540c\u65b9\u9762\u5373\u5b58\u5728\u7b80\u5316\uff0c\u4e5f\u5b58\u5728\u590d\u6742\u5316\u3002 S. Lee et al.: AudiSDN: Automated Detection of Network Policy Inconsistencies in Software-Defined Networks, IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. SDN, Software-Defined Networking, Network Policy Inconsistency AudiSDN\uff0c\u8fd9\u662f\u4e00\u4e2a\u81ea\u52a8\u7684\u6a21\u7cca\u6d4b\u8bd5\u6846\u67b6\uff0c\u65e8\u5728\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u3002\u5728OpenFlow\u7f51\u7edc\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u7b56\u7565\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u5982\u7528\u6237\u505a\u51fa\u7684\u51b3\u7b56\u4e0e\u6240\u4e0b\u53d1\u7684\u7b56\u7565\u5728\u5b9e\u9645\u6267\u884c\u7684\u65f6\u5019\u5b58\u5728\u67d0\u4e9b\u6f0f\u6d1e\u3002AudiSDN\u5c06\u7528\u6237\u6240\u8981\u4e0b\u53d1\u7684\u51b3\u7b56\uff0c\u8fdb\u884c\u590d\u5236\uff0c\u5e76\u4ee5\u4fee\u6539\u5185\u5bb9\u7684\u65b9\u5f0f\u8fdb\u884c\u89c4\u5219\u7684\u6a21\u7cca\u5316\uff0c\u4f7f\u5f97\u539f\u89c4\u5219\u4e0e\u6a21\u7cca\u89c4\u5219\u5171\u540c\u4e0b\u53d1\u5230\u5e95\u5c42\u8bbe\u5907\u4e4b\u4e2d\u3002\u518d\u901a\u8fc7\u4e0d\u4e00\u81f4\u6027\u68c0\u6d4b\u6765\u5224\u5b9a\u662f\u5426\u5b58\u5728\u4e0d\u4e00\u81f4\u60c5\u51b5\u3002\u5b9e\u9a8c\u4e2d\uff0cAudiSDN\u6d4b\u8bd5\u4e86Floodlight\u548cONOS\u7684\u7ed3\u679c\u3002 Jehandad Khan et al.: 2018. Query language for large-scale P4 network debugging. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 162\u2013164. openflow \u901a\u8fc7\u5c06\u7f51\u7edc\u62d3\u6251\u4fe1\u606f\u4e0e\u72b6\u6001\u6536\u96c6\u5408\u5e76\uff0c\u6b64\u8bba\u6587\u63a2\u7d22\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u6765\u67e5\u770b\u7f51\u7edc\u76d1\u89c6\u548c\u6545\u969c\u6392\u9664\u95ee\u9898\u4ee5\u5bf9\u73b0\u4ee3\u6570\u636e\u4e2d\u5fc3\u8fdb\u884c\u8bca\u65ad\u548c\u89e3\u51b3\u95ee\u9898\u3002\u5c06\u6574\u4e2a\u7f51\u7edc\u62bd\u8c61\u4e3a\u4e00\u4e2a\u5b9e\u4f53\u53ef\u7b80\u5316\u8c03\u8bd5\u8fc7\u7a0b\uff0c\u4f7f\u5168\u9762\u7684\u6839\u672c\u539f\u56e0\u5206\u6790\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u4f7f\u7f51\u7edc\u7ba1\u7406\u5458\u65e0\u9700\u5904\u7406\u8bb8\u591a\u8bbe\u5907\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u751f\u4ea7\u7387\u548c\u6548\u7387\u3002\u8fd9\u79cd\u5408\u5e76\u5141\u8bb8\u5c06\u4ee5\u9886\u57df\u7279\u5b9a\u8bed\u8a00\u8868\u8fbe\u7684\u6027\u80fd\u67e5\u8be2\u8f6c\u6362\u4e3a\u5728\u7f51\u7edc\u4e2d\u6536\u96c6\u5fc5\u8981\u72b6\u6001\u7684\u4e0d\u540c\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u5c0f\u6bb5\u4ee3\u7801\u3002\u8fd9\u79cd\u5408\u5e76\u53ef\u4ee5\u51cf\u5c11\u6bcf\u4e2a\u4ea4\u6362\u673a\u7684\u5f00\u9500\uff0c\u5e76\u51cf\u8f7b\u8bbe\u5907\u7684\u8d1f\u62c5\uff0c\u5e76\u4e3a\u7ba1\u7406\u5458\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u62bd\u8c61\u3002 Jinghan Zhou et al.: 2018. APF: fast network all-pair reachability calculation. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 172\u2013173. programmable data plane \u7f51\u7edc\u9a8c\u8bc1\u4e3b\u8981\u662f\u6839\u636e\u7f51\u7edc\u4e0d\u53d8\u6027\u6216\u8fd0\u8425\u5546\u7684\u4fe1\u5ff5\u6765\u68c0\u67e5\u7f51\u7edc\u72b6\u6001\u3002\u4e8b\u5148\u5feb\u901f\u8ba1\u7b97\u7f51\u7edc\u7684\u6240\u6709\u5bf9\u53ef\u8fbe\u6027\uff0c\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u67e5\u8be2\u6216\u6574\u4f53\u5206\u6790\uff0c\u53ef\u4ee5\u4e3a\u7f51\u7edc\u9a8c\u8bc1\u63d0\u4f9b\u5de8\u5927\u5e2e\u52a9\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5feb\u901f\u5168\u5bf9\u53ef\u8fbe\u6027\u8ba1\u7b97\u7b97\u6cd5Atomic Predicates Flooding\uff08APF\uff09\u3002\u5728\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u57fa\u4e8e\u7f51\u7edc\u96fe\u5316\u7684\u65b0\u7b97\u6cd5\u6bd4\u6ca1\u6709\u7f51\u7edc\u96fe\u5316\u7684\u73b0\u6709\u7b97\u6cd5\u5feb\u7ea6\u4e09\u5230\u56db\u4e2a\u6570\u91cf\u7ea7\u3002\u5728\u5927\u591a\u6570\u6570\u636e\u96c6\u4e0a\uff0cAPF\u751a\u81f3\u6bd4\u57fa\u4e8eWarshall\u7684\u5177\u6709\u96fe\u5316\u529f\u80fd\u7684\u5168\u5bf9\u53ef\u8fbe\u6027\u7b97\u6cd5\u5feb2\u81f35\u500d\u3002 Zehua Guo et al.: 2019. RetroFlow: maintaining control resiliency and flow programmability for software-defined WANs. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 1, 1\u201310. openflow \u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u5c06\u8f6f\u4ef6\u5b9a\u4e49\u7684WAN\u5206\u4e3a\u591a\u4e2a\u57df\uff0c\u8fd9\u4e9b\u57df\u7531\u5177\u6709\u903b\u8f91\u96c6\u4e2d\u89c6\u56fe\u7684\u591a\u4e2a\u63a7\u5236\u5668\u63a7\u5236\u3002\u5728\u63a7\u5236\u5668\u6545\u969c\u4e0b\uff0c\u5c06\u8131\u673a\u4ea4\u6362\u673a\u7684\u63a7\u5236\u4ece\u53d1\u751f\u6545\u969c\u7684\u63a7\u5236\u5668\u91cd\u65b0\u6620\u5c04\u5230\u5176\u4ed6\u6d3b\u52a8\u63a7\u5236\u5668\u3002\u7531\u4e8e\u589e\u52a0\u4e86\u63a7\u5236\u5668-\u4ea4\u6362\u673a\u7684\u901a\u4fe1\u5f00\u9500\uff0c\u73b0\u6709\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u4f1a\u4f7f\u6d3b\u52a8\u7684\u63a7\u5236\u5668\u8fc7\u8f7d\uff0c\u4ece\u800c\u4e2d\u65ad\u5176\u6b63\u5e38\u8fd0\u884c\uff0c\u6216\u8005\u964d\u4f4e\u7f51\u7edc\u6027\u80fd\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51faRetroFlow\u4ee5\u5b9e\u73b0\u4f4e\u901a\u4fe1\u5f00\u9500\uff0c\u800c\u4e0d\u4f1a\u5728\u63a7\u5236\u5668\u6545\u969c\u671f\u95f4\u4e2d\u65ad\u6d3b\u52a8\u63a7\u5236\u5668\u7684\u6b63\u5e38\u5904\u7406\u3002\u901a\u8fc7\u667a\u80fd\u5730\u914d\u7f6e\u4e00\u7ec4\u5728\u4f20\u7edf\u8def\u7531\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u7684\u9009\u5b9a\u8131\u673a\u4ea4\u6362\u673a\uff0cRetroFlow\u53ef\u4ee5\u4f7f\u6d3b\u52a8\u63a7\u5236\u5668\u5728\u63a7\u5236SDN\u7684\u6d41\u53ef\u7f16\u7a0b\u6027\u7684\u540c\u65f6\uff0c\u4e0d\u63a7\u5236\u9009\u5b9a\u7684\u8131\u673a\u4ea4\u6362\u673a\u3002RetroFlow\u8fd8\u53ef\u4ee5\u901a\u8fc7SDN\u8def\u7531\u6a21\u5f0f\u5c06\u8131\u673a\u4ea4\u6362\u673a\u7684\u63a7\u5236\u667a\u80fd\u5730\u8f6c\u79fb\u5230\u6d3b\u52a8\u63a7\u5236\u5668\uff0c\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u8fd9\u4e9b\u8131\u673a\u4ea4\u6362\u673a\u4e0e\u6d3b\u52a8\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u5f00\u9500\u3002 Yu Zhou et al.: 2019. P4Tester: efficient runtime rule fault detection for programmable data planes. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 5, 1\u201310. programmable data plane \u672c\u6587\u63d0\u51fa\u4e86P4Tester\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8e\u5bf9\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e0a\u7684\u8fd0\u884c\u65f6\u89c4\u5219\u6545\u969c\u8fdb\u884c\u6545\u969c\u6392\u9664\u7684\u65b0\u578b\u7f51\u7edc\u6d4b\u8bd5\u7cfb\u7edf\u3002\u9996\u5148\uff0cP4Tester\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u4e8c\u8fdb\u5236\u51b3\u7b56\u56fe\u7684\u65b0\u7684\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\uff0c\u8be5\u8868\u793a\u5f62\u5f0f\u53ef\u4ee5\u4e3a\u5404\u79cdP4\u5b9a\u4e49\u7684\u6570\u636e\u5e73\u9762\u529f\u80fd\u9ad8\u6548\u751f\u6210\u63a2\u9488\u3002\u5176\u6b21\uff0cP4Tester\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u63a2\u9488\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u4f7f\u7528\u6e90\u8def\u7531\u6765\u8f6c\u53d1\u63a2\u9488\u3002\u8be5\u63a2\u9488\u6a21\u578b\u6781\u5927\u5730\u51cf\u5c11\u4e86\u89c4\u5219\u6545\u969c\u68c0\u6d4b\u7684\u5f00\u9500\uff0c\u5373\u4ec5\u9700\u8981\u4e00\u53f0\u670d\u52a1\u5668\u5373\u53ef\u4e3a\u5927\u578b\u7f51\u7edc\u751f\u6210\u63a2\u9488\uff0c\u5e76\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u4e86\u63a2\u9488\u7684\u6570\u91cf\u3002\u6b64\u5916\uff0c\u8be5\u63a2\u9488\u6a21\u578b\u53ef\u4ee5\u6d4b\u8bd5\u7f51\u7edc\u4e2d\u7684\u6240\u6709\u8868\u89c4\u5219\uff0c\u4ece\u800c\u5b9e\u73b0\u5b8c\u6574\u7684\u6545\u969c\u8986\u76d6\u3002\u6839\u636e\u5b9e\u9645\u6570\u636e\u96c6\u8fdb\u884c\u7684\u8bc4\u4f30\u8868\u660eP4Tester \u53ef\u4ee5\u6709\u6548\u5730\u68c0\u67e5\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e2d\u7684\u6240\u6709\u89c4\u5219\uff0c\u751f\u6210\u7684\u63a2\u9488\u6bd4ATPG\u548cPronto\u5c1159\uff05\uff0c\u6bd4ATPG\u5feb\u4e24\u4e2a\u6570\u91cf\u7ea7\uff0c\u5e76\u5728\u4e00\u79d2\u949f\u5185\u5bf9BMv2\u548cTofino\u4e0a\u7684\u591a\u4e2a\u89c4\u5219\u6545\u969c\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002 Xinbo Liu et al.: 2019. ATMPA: attacking machine learning-based malware visualization detection methods via adversarial examples. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 38, 1\u201310. programmable data plane \u81ea\u52a8\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u6280\u672f\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\uff0c\u5176\u4e2d\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\uff08ML\uff09\u7684\u53ef\u89c6\u5316\u68c0\u6d4b\u65b9\u6cd5\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\u3002\u672c\u6587\u8bc1\u660e\u4e86\u57fa\u4e8eML\u7684\u6700\u65b0\u53ef\u89c6\u5316\u68c0\u6d4b\u65b9\u6cd5\u5bb9\u6613\u53d7\u5230\u5bf9\u6297\u793a\u4f8b\uff08AE\uff09\u653b\u51fb\u3002\u5e76\u5f00\u53d1\u4e86\u4e00\u79cd\u57fa\u4e8e\u68af\u5ea6\u4e0b\u964d\u548cL\u7684\u65b0\u578b\u5bf9\u6297\u7eb9\u7406\u6076\u610f\u8f6f\u4ef6\u6444\u52a8\u653b\u51fb\uff08ATMPA\uff09\u65b9\u6cd5-norm\u4f18\u5316\u65b9\u6cd5\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5728\u8f6c\u6362\u540e\u7684\u6570\u636e\u96c6\u4e0a\u5f15\u5165\u4e00\u4e9b\u5fae\u5c0f\u7684\u5e72\u6270\uff0c\u4ece\u800c\u4f7f\u57fa\u4e8eML\u7684\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u65b9\u6cd5\u5b8c\u5168\u5931\u8d25\u3002 Hui Cai et al.: 2019. Towards privacy-preserving data trading for web browsing history. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 25, 1\u201310. openflow \u672c\u6587\u63d0\u51fa\u4e86PEATSE\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8eWeb\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u7684\u65b0\u7684\u9690\u79c1\u4fdd\u62a4dAta\u4ea4\u6613\u6846\u67b6\u3002\u5b83\u8003\u8651\u4e86\u7528\u6237\u7684\u5404\u79cd\u9690\u79c1\u504f\u597d\u548c\u4ed6\u4eec\u7684Web\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u7684\u5b9e\u7528\u7a0b\u5e8f\u3002PEATSE\u5728\u5df2\u53d1\u5e03\u7684\u6d4f\u89c8\u8bb0\u5f55\u4e0a\u5e72\u6270\u7528\u6237\u7684\u8be6\u7ec6\u6d4f\u89c8\u65f6\u95f4\uff0c\u4ee5\u4fdd\u62a4\u7528\u6237\u9690\u79c1\uff0c\u540c\u65f6\u5e73\u8861\u9690\u79c1\u4e0e\u5b9e\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6743\u8861\u3002\u901a\u8fc7\u57fa\u4e8e\u771f\u5b9e\u6570\u636e\u7684\u5b9e\u9a8c\uff0c\u6211\u4eec\u7684\u5206\u6790\u548c\u8bc4\u4f30\u7ed3\u679c\u8868\u660ePEATSE\u786e\u5b9e\u5b9e\u73b0\u4e86\u7528\u6237\u9690\u79c1\u4fdd\u62a4\uff0c\u6570\u636e\u6d88\u8d39\u8005\u7684\u51c6\u786e\u6027\u8981\u6c42\uff0c\u771f\u5b9e\u6027\uff0c\u4e2a\u4eba\u5408\u7406\u6027\u4ee5\u53ca\u9884\u7b97\u5e73\u8861\u3002 Mohammad Jahanian et al.: 2019. Name Space Analysis: Verification of Named Data Network Data Planes. In Proceedings of the 6th ACM Conference on Information-Centric Networking (ICN \u201919). Association for Computing Machinery, New York, NY, USA, 44\u201354. programmable data plane \u672c\u6587\u63d0\u51fa\u4e86\u540d\u79f0\u7a7a\u95f4\u5206\u6790\uff08NSA\uff09\uff0c\u4e00\u79cd\u7528\u4e8e\u5bf9NDN\u6570\u636e\u5e73\u9762\u8fdb\u884c\u5efa\u6a21\u548c\u5206\u6790\u7684\u7f51\u7edc\u9a8c\u8bc1\u6846\u67b6\u3002NSA\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5feb\u7167\u4f5c\u4e3a\u8f93\u5165\uff0c\u6bcf\u4e2a\u5feb\u7167\u4ee3\u8868\u6570\u636e\u5e73\u9762\u7684\u7279\u5b9a\u72b6\u6001\u3002\u7136\u540e\uff0c\u5b83\u6839\u636e\u6307\u5b9a\u7684\u5c5e\u6027\u63d0\u4f9b\u9a8c\u8bc1\u7ed3\u679c\u3002NSA\u5efa\u7acb\u5728\u6807\u5934\u7a7a\u95f4\u5206\u6790\u7406\u8bba\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u4f8b\u5982\u4ee5\u7075\u6d3b\u7684\u683c\u5f0f\u652f\u6301\u53ef\u53d8\u5927\u5c0f\u7684\u6807\u5934\uff0c\u5f15\u5165\u540d\u79f0\u7a7a\u95f4\u529f\u80fd\uff0c\u5e76\u5141\u8bb8\u57fa\u4e8e\u540d\u79f0\u7684\u5c5e\u6027\uff0c\u4f8b\u5982\u5185\u5bb9\u53ef\u8bbf\u95ee\u6027\u548c\u540d\u79f0\u6cc4\u6f0f\u81ea\u7531\u3002\u8fd9\u4e9b\u91cd\u8981\u7684\u8865\u5145\u53cd\u6620\u4e86NDN\u7684\u884c\u4e3a\u548c\u8981\u6c42\uff0c\u8981\u6c42\u5efa\u6a21\u548c\u9a8c\u8bc1\u57fa\u7840\u4e0e\u4f20\u7edf\u7684\u4ee5\u4e3b\u673a\u4e3a\u4e2d\u5fc3\u7684\u7f51\u7edc\u6839\u672c\u4e0d\u540c\u3002 X. Jia et al.: \"Link fault protection and traffic engineering in hybrid SDN networks,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Honolulu, HI, 2018, pp. \u5728\u5177\u6709SDN\u548c\u975eSDN\u4ea4\u6362\u673a\u7684\u6df7\u5408\u7f51\u7edc\u4e2d\uff0c\u73b0\u6709\u94fe\u8def\u6545\u969c\u4fdd\u62a4\u7684\u89e3\u51b3\u65b9\u6848\u9700\u8981\u8f83\u957f\u7684\u8ba1\u7b97\u65f6\u95f4\u548c\u8f83\u9ad8\u7684\u914d\u7f6e\u5f00\u9500\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cdHybrid-Hie\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u5b9e\u73b0\u6df7\u5408SDN\u7f51\u7edc\u4e2d\u7684\u5feb\u901f\u91cd\u8def\u7531\u548c\u8d1f\u8f7d\u5e73\u8861\u3002\u672c\u6587\u901a\u8fc7\u9884\u6d4b\u94fe\u63a5\u5229\u7528\u7387\u6765\u9884\u5148\u5728\u6bcf\u4e2a\u5907\u4efd\u8def\u5f84\u4e0a\u914d\u7f6e\u5206\u914d\u6bd4\u4f8b\u3002\u4e0e\u73b0\u6709\u89e3\u51b3\u65b9\u6848\u76f8\u6bd4\uff0c\u53ef\u4ee51\uff09\u5b9e\u73b0\u57df\u95f4\u94fe\u63a5\u7684\u6709\u6548\u6545\u969c\u6062\u590d\uff0c\u4ee5\u53ca2\uff09\u5b9e\u73b0\u66f4\u597d\u7684\u8d1f\u8f7d\u5e73\u8861\u548c\u6062\u590d\u8def\u5f84\u6269\u5c55\u3002 \u653b\u51fb\u68c0\u6d4b L. Tang et al.: \"SpreadSketch: Toward Invertible and Network-Wide Detection of Superspreaders,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. p4 \u4e3a\u5b9e\u65f6\u51c6\u786e\u5730\u5927\u89c4\u6a21\u68c0\u6d4b\u8d85\u7ea7\u4f20\u64ad\u8005\u7684\u95ee\u9898\u3002\u8bba\u6587\u63d0\u51faSpreadSketch\uff0c\u8fd9\u662f\u4e00\u79cd\u53ef\u9006\u7684\u8349\u56fe\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u7f51\u7edc\u8303\u56f4\u7684\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\u68c0\u6d4b\uff0c\u5e76\u5728\u5185\u5b58\u7a7a\u95f4\uff0c\u6027\u80fd\u548c\u51c6\u786e\u6027\u65b9\u9762\u63d0\u4f9b\u4e86\u7406\u8bba\u4e0a\u7684\u4fdd\u8bc1\u3002SpreadSketch\u8ddf\u8e2a\u5019\u9009\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\uff0c\u5e76\u5c06\u4f30\u8ba1\u7684\u6247\u51fa\u6269\u5c55\u5d4c\u5165\u5c0f\u578b\u548c\u9759\u6001\u5185\u5b58\u7a7a\u95f4\u5185\u7684\u4e8c\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\u4e2d\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5408\u5e76\u591a\u4e2aSpreadSketch\u5b9e\u4f8b\uff0c\u4ee5\u63d0\u4f9b\u6574\u4e2a\u7f51\u7edc\u7684\u6d4b\u91cf\u89c6\u56fe\uff0c\u4ee5\u6062\u590d\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\u53ca\u5176\u4f30\u8ba1\u7684\u6247\u51fa\u3002 \u8bc4\u4f30\u8868\u660e\uff0cSpreadSketch\u4e0e\u6700\u65b0\u7684\u8349\u56fe\u76f8\u6bd4\uff0c\u5177\u6709\u66f4\u9ad8\u7684\u51c6\u786e\u6027\u548c\u6027\u80fd\u3002 Garegin Grigoryan et al.: 2018. LAMP: prompt layer 7 attack mitigation with programmable data planes. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 158\u2013159. openflow LAMP\uff0c\u5373\u5177\u6709\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u7b2c7\u5c42\u653b\u51fb\u7f13\u89e3\u3002 LAMP\u8ddf\u8e2a\u8fdb\u5165\u53d7\u653b\u51fb\u7f51\u7edc\u7684\u6bcf\u4e2a\u6d41\u7684\u8def\u5f84\u3002\u5982\u679c\u6700\u7ec8\u4e3b\u673a\u5e94\u7528\u7a0b\u5e8f\u68c0\u6d4b\u5230\u5165\u4fb5\u4f01\u56fe\uff0c\u5219\u4f1a\u901a\u8fc7\u5728\u4fe1\u53f7\u5305\u7684IP\u9009\u9879\u5b57\u6bb5\u4e2d\u5d4c\u5165\u4fe1\u53f7\u6807\u5fd7\u548c\u653b\u51fb\u8005\u7684IP\u5730\u5740\u6765\u751f\u6210\u653b\u51fb\u8b66\u62a5\u3002 \u5047\u5b9a\u6b64\u7c7b\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u4fee\u6539\u8b66\u62a5\u6d88\u606f\u7684IP\u6570\u636e\u5305\u5b57\u6bb5\u7684\u7279\u6743\u3002 \u8b66\u62a5\u5c06\u76f4\u63a5\u53d1\u9001\u5230\u6700\u8fd1\u7684\u4ea4\u6362\u673a\uff0c\u8be5\u4ea4\u6362\u673a\u6700\u7ec8\u5c06\u6570\u636e\u5305\u8f6c\u53d1\u5230\u627f\u8f7d\u539f\u59cb\u6076\u610f\u6d41\u91cf\u7684\u5165\u53e3\u4ea4\u6362\u673a\u3002 \u6536\u5230\u8b66\u62a5\u540e\uff0c\u5165\u53e3\u4ea4\u6362\u673a\u5c06\u4fee\u6539\u5176\u6d41\u63a7\u5236\u7b56\u7565\uff0c\u4ee5\u963b\u6b62\u6765\u81ea\u653b\u51fb\u8005\u7684\u540e\u7eed\u6d41\u91cf\u3002 \u8fd9\u4e2a\u7f13\u89e3\u7b56\u7565\u81f3\u5c11\u5177\u6709\u4e09\u4e2a\u4f18\u70b9\uff1a\uff081\uff09\u5b83\u4f7f\u7f51\u7edc\u8303\u56f4\u5185\u7684\u534f\u4f5c\u68c0\u6d4b\u548c\u653b\u51fb\u7f13\u89e3\u6210\u4e3a\u53ef\u80fd\u3002 \u7ec8\u7aef\u4e3b\u673a\u83b7\u5f97\u7684\u68c0\u6d4b\u7ed3\u679c\u53ef\u4ee5\u91cd\u65b0\u7528\u4e8e\u6574\u4e2a\u7f51\u7edc\u7684\u670d\u52a1\uff1b \uff082\uff09\u7531\u4e8e\u7f51\u7edc\u8fb9\u7f18\u8fc5\u901f\u963b\u585e\u4e86\u7f51\u7edc\u5185\u6076\u610f\u6d41\u91cf\uff0c\u7f51\u7edc\u5185\u6076\u610f\u6d41\u91cf\u5927\u5927\u51cf\u5c11\u4e86\uff1b \uff083\uff09\u4e0e\u73b0\u6709\u7684SDN\u65b9\u6cd5\u76f8\u6bd4\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u8f7b\u91cf\u548c\u9ad8\u6548\u7684\u7f51\u7edc\u64cd\u4f5c\uff0c\u5728\u73b0\u6709\u7684SDN\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981SDN\u63a7\u5236\u5668\u6765\u5f25\u5408\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7edc\u5c42\u670d\u52a1\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002 Jan Ku\u010dera et al.: 2018. Hardware acceleration of intrusion detection systems for high-speed networks. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 177\u2013178. programmable data plane \u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\uff08IDS\uff09\u662f\u4fdd\u62a4\u8ba1\u7b97\u673a\u7f51\u7edc\u5b89\u5168\u7684\u6d41\u884c\u6280\u672f\u4e4b\u4e00\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u7684\u9ad8\u8ba1\u7b97\u590d\u6742\u6027\u4f7f\u5176\u96be\u4ee5\u6ee1\u8db3\u73b0\u4ee3\u9ad8\u901f\u7f51\u7edc\u7684\u6027\u80fd\u76ee\u6807\u3002\u672c\u6587\u65e8\u5728\u901a\u8fc7\u4fe1\u606f\u5305\u4e22\u5f03\u6765\u52a0\u901fIDS\u3002\u5c06IDS\u53ef\u7528\u7684\u6709\u9650\u8ba1\u7b97\u8d44\u6e90\u4ec5\u96c6\u4e2d\u4e8e\u4f20\u5165\u6d41\u91cf\u4e2d\u6700\u76f8\u5173\u7684\u90e8\u5206\uff0c\u5e76\u5c06\u5176\u4f59\u90e8\u5206\u5378\u8f7d\uff08\u7ed5\u8fc7\uff09\u3002\u8bba\u6587\u8868\u660e\uff0c\u8fd9\u79cd\u5bf9\u5b9a\u4e49\u660e\u786e\u7684\u6d41\u91cf\u90e8\u5206\u7684\u63a7\u5236\uff08\u77e5\u60c5\uff09\u4e22\u5f03\u76f8\u8f83\u8f6f\u4ef6\u548cFPGA\u52a0\u901f\u7684\u4e22\u5f03\u5b9e\u73b0\uff0c\u6709\u52a9\u4e8eIDS\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 S. Sun et al.: \"Detecting and Mitigating ARP Attacks in SDN-Based Cloud Environment,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 2020, pp. \u4e91\u8ba1\u7b97\u7f51\u7edc\u975e\u5e38\u9700\u8981\u5b89\u5168\u6027\uff0c\u4fdd\u62a4\u4e91\u73af\u5883\u514d\u53d7\u5404\u79cd\u653b\u51fb\u5df2\u6210\u4e3a\u70ed\u95e8\u95ee\u9898\u3002\u672c\u6587\u4e2d\uff0c\u5c06SDN\u5e94\u7528\u4e8e\u4fdd\u62a4\u4e91\u8ba1\u7b97\u7f51\u7edc\u514d\u53d7\u5730\u5740\u89e3\u6790\u534f\u8bae\uff08ARP\uff09\u653b\u51fb\u3002\u5728\u5efa\u8bae\u7684\u65b9\u6cd5\u4e2d\uff0c\u63a7\u5236\u5668\u7fa4\u96c6\u4f1a\u68c0\u6d4b\u4e3b\u673a\u53d1\u9001\u7684ARP\u6570\u636e\u5305\uff0c\u4e3a\u4e86\u627e\u51fa\u4f2a\u9020\u8005\u5e76\u9632\u6b62ARP\u6b3a\u9a97\u653b\u51fb\u3002\u6b64\u5916\uff0c\u63a7\u5236\u5668\u4f1a\u4e0d\u65f6\u76d1\u89c6ARP\u6570\u636e\u5305\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u4ee5\u68c0\u6d4bARP\u6cdb\u6d2a\u653b\u51fb\u3002\u4e00\u65e6\u68c0\u6d4b\u5230\u653b\u51fb\uff0c\u63a7\u5236\u5668\u5c31\u4f1a\u5728\u76f8\u5e94\u7684\u4ea4\u6362\u673a\u4e0a\u5b89\u88c5\u6d41\u6761\u76ee\uff0c\u4ee5\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u963b\u6b62\u6d41\u3002\u5b9e\u9a8c\u8868\u660e\u6b64\u65b9\u6cd5\u53ef\u7528\u4e8e\u68c0\u6d4b\u548c\u7f13\u89e3\u57fa\u4e8eSDN\u7684\u4e91\u73af\u5883\u4e2d\u7684ARP\u653b\u51fb\u3002 \u6d41\u91cf\u5206\u6790 Jing Guo et al.: 2019. Who limits the resource efficiency of my datacenter: an analysis of Alibaba datacenter traces. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 39, 1\u201310. programmable data plane \u73b0\u4ee3\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u5229\u7528\u7387\u4f4e\u4f1a\u6d6a\u8d39\u5927\u91cf\u786c\u4ef6\u8d44\u6e90\u548c\u57fa\u7840\u67b6\u6784\u6295\u8d44\u3002\u4e3a\u4e86\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u4e00\u79cd\u76f4\u63a5\u7684\u65b9\u6cd5\u662f\u5c06\u4e0d\u540c\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5171\u5b58\u4e8e\u540c\u4e00\u786c\u4ef6\u4e0a\u3002\u4e3a\u4e86\u5f04\u6e05\u8d44\u6e90\u6548\u7387\u5e76\u4e86\u89e3\u4f4d\u4e8e\u540c\u4e00\u5730\u70b9\u7684\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5173\u952e\u7279\u5f81\uff0c\u672c\u6587\u5206\u6790\u4e86\u6765\u81ea\u963f\u91cc\u5df4\u5df4\u751f\u4ea7\u73af\u5883\u4e0b\u76848\u5929trace\uff0c\u5e76\u63ed\u793a\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u4e3b\u8981\u53d1\u73b0\u3002\u9996\u5148\uff0c\u5185\u5b58\u6210\u4e3a\u65b0\u7684\u74f6\u9888\uff0c\u5e76\u9650\u5236\u4e86\u963f\u91cc\u5df4\u5df4\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u6548\u7387\u3002\u5176\u6b21\uff0c\u4e3a\u4e86\u4fdd\u62a4\u5173\u952e\u5ef6\u8fdf\u5e94\u7528\u7a0b\u5e8f\uff0c\u6279\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u88ab\u89c6\u4e3a\u7b2c\u4e8c\u7b49\u516c\u6c11\uff0c\u5e76\u4e14\u88ab\u9650\u5236\u4f7f\u7528\u6709\u9650\u7684\u8d44\u6e90\u3002\u7b2c\u4e09\uff0c\u8d85\u8fc790\uff05\u7684\u5ef6\u8fdf\u5173\u952e\u578b\u5e94\u7528\u7a0b\u5e8f\u662f\u7528Java\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u7684\u3002\u5927\u91cf\u72ec\u7acb\u7684JVM\u8fdb\u4e00\u6b65\u4f7f\u8d44\u6e90\u7ba1\u7406\u590d\u6742\u5316\uff0c\u5e76\u9650\u5236\u4e86\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u6548\u7387\u3002 Ran Ben Basat et al.: 2019. Q-MAX: A Unified Scheme for Improving Network Measurement Throughput. In Proceedings of the Internet Measurement Conference ( IMC \u201919 ). Association for Computing Machinery, New York, NY, USA, 322\u2013336. keyword\uff1aNetwork algorithms \u7ebf\u901f\u8fd0\u884c\u7684\u6d4b\u91cf\u5e94\u7528\u662f\u7f51\u7edc\u6d4b\u91cf\u9886\u57df\u7684\u91cd\u5927\u6311\u6218\u3002\u672c\u6587\u901a\u8fc7\u63d0\u4f9b\u4e00\u79cd\u6539\u5584\u5404\u79cd\u7f51\u7edc\u7b97\u6cd5\u66f4\u65b0\u65f6\u95f4\u7684\u7edf\u4e00\u673a\u5236\u6765\u5e94\u5bf9\u8fd9\u4e00\u6311\u6218\u3002\u901a\u8fc7\u8bc6\u522b\uff0c\u7814\u7a76\u548c\u4f18\u5316\u79f0\u4e3aq-MAX\u7684\u5e38\u89c1\u7b97\u6cd5\u6a21\u5f0f\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u76ee\u6807\u662f\u4fdd\u6301\u6570\u636e\u5305\u6d41\u4e2d\u7684\u6700\u5927q\u503c\u3002\u8bba\u6587\u5bf9\u6b64\u95ee\u9898\u8fdb\u884c\u6b63\u5f0f\u5206\u6790\uff0c\u5e76\u4ecb\u7ecd\u95f4\u9694\u548c\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5177\u6709\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6052\u5b9a\u66f4\u65b0\u65f6\u95f4\u3002\u7ed3\u8bba\u8bc1\u660e\uff0c\u4e0e\u5e93\u7b97\u6cd5\u76f8\u6bd4\uff0cq-MAX\u7b97\u6cd5\u6267\u884cX20\u7684\u901f\u5ea6\u5feb\u5f97\u591a\uff0c\u5728\u771f\u5b9e\u7684\u7f51\u7edc\u8f68\u8ff9\u4e0a\uff0c\u541e\u5410\u91cf\u6700\u591a\u53ef\u63d0\u9ad8X12\u3002\u5b9e\u9a8c\u5728\u6700\u5148\u8fdb\u7684\u865a\u62df\u4ea4\u6362\u673aOpen vSwitch\u4e2d\u5b9e\u73b0\u4e86\u8be5\u65b9\u6848\u3002","title":"Second Part"},{"location":"Second%20Part/#second-part","text":"","title":"Second Part"},{"location":"Second%20Part/#of","text":"W. Feng et al.: \"MEM: A Multi-Staged Eviction Mechanism of Flowtable for Software-Defined Datacenters,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 2020, pp. flow entries \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eSDDC\u6d41\u91cf\u7279\u6027\u7684\u6d41\u8868\u591a\u7ea7\u9a71\u9010\u673a\u5236\uff08MEM\uff09\uff0c\u5176\u4e2d\u5305\u62ec\u5206\u7c7b\uff0c\u8bc6\u522b\u548c\u9a71\u9010\u9636\u6bb5\u3002\u6839\u636e\u6d41\u7684\u6301\u4e45\u72b6\u6001\u548c\u57fa\u672c\u7edf\u8ba1\u4fe1\u606f\u5bf9\u6d41\u6761\u76ee\u8fdb\u884c\u4e24\u6b21\u5206\u7c7b\u3002\u7136\u540e\uff0c\u5f15\u5165\u4e00\u4e2a\u79f0\u4e3a\u81ea\u52a8\u56de\u5f52\u79fb\u52a8\u5e73\u5747\u7ebf\uff08ARMA\uff09\u7684\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u6a21\u578b\uff0c\u4ee5\u9884\u6d4b\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\u6d41\u6761\u76ee\u7684\u672a\u6765\u72b6\u6001\u3002\u6700\u540e\uff0c\u9884\u6d4b\u51fa\u7684\u6700\u8fd1\u672a\u4f7f\u7528\u7684\u6d41\u6761\u76ee\u5c06\u88ab\u9a71\u9010\u4ee5\u51cf\u8f7b\u6d41\u8868\u5b58\u50a8\u4e0a\u7684\u538b\u529b\u3002 C. Zhang et al.: \"Admission control in software-defined datacenter network in view of flow table capacity,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Honolulu, HI, 2018, pp. flow entries SDN\u4ea4\u6362\u673a\u7684\u529f\u80fd\u8584\u5f31\uff0c\u4f8b\u5982\u6d41\u8868\u5bb9\u91cf\uff0c\u7ed9\u57fa\u4e8eOpenFlow\u7684SDN\u7684\u53ef\u4f38\u7f29\u6027\u5e26\u6765\u4e86\u6311\u6218\u3002\u8003\u8651\u5230\u4ea4\u6362\u673a\u7684\u6d41\u8868\u5bb9\u91cf\uff0c\u5f53\u524d\u6d41\u8868\u5bb9\u91cf\u548c\u6570\u636e\u4e2d\u5fc3\u6240\u9700\u6d41\u6761\u76ee\u6570\u91cf\u4e4b\u95f4\u7684\u5de8\u5927\u5dee\u8ddd\u9700\u8981\u4e00\u79cd\u65b0\u9896\u7684\u63a5\u7eb3\u63a7\u5236\u673a\u5236\uff0c\u800c\u4e0d\u662f\u50cf\u4f20\u7edf\u7f51\u7edc\u90a3\u6837\u4ec5\u8003\u8651\u94fe\u8def\u5bb9\u91cf\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u63a7\u5236\u5668\u7ea7\u522b\u51c6\u5165\u63a7\u5236\u673a\u5236\uff0c\u5e76\u4f7f\u7528\u89c4\u8303\u7684\u4e09\u5c42\u6570\u636e\u4e2d\u5fc3\u62d3\u6251\u57fa\u4e8e\u6570\u503c\u6a21\u62df\u7ed3\u679c\u8bc4\u4f30\u4e86\u5176\u6709\u6548\u6027\u3002 G. Shen et al.: \"How Powerful Switches Should be Deployed: A Precise Estimation Based on Queuing Theory,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. flow entries SDN\u5bf9\u8bb8\u591a\u4f20\u7edf\u7684\u6570\u636e\u4e2d\u5fc3\u7f51\u7edc\uff08DCN\uff09\u8fdb\u884c\u4e86\u5347\u7ea7\uff0c\u4ee5\u63d0\u9ad8\u94fe\u8def\u5229\u7528\u7387\u548c\u7ba1\u7406\u7075\u6d3b\u6027\uff0c\u4f46\u662f\u5b83\u4eec\u7f3a\u4e4f\u9009\u62e9\u5177\u6709\u9002\u5f53\u6d41\u8868\u7a7a\u95f4\u7684\u4ee3\u7528SDN\u4ea4\u6362\u673a\u4ee5\u5b9e\u73b0\u5177\u6709\u6210\u672c\u6548\u76ca\u548c\u8282\u80fd\u7f51\u7edc\u7684\u8bf4\u660e\u3002\u672c\u6587\u586b\u8865\u4e86\u57fa\u4e8e\u6392\u961f\u8bba\u89e3\u51b3\u6d41\u8868\u7a7a\u95f4\u4f30\u8ba1\u95ee\u9898\u7684\u7a7a\u767d\u3002\u9996\u5148\uff0c\u5c06\u6d41\u8868\u6761\u76ee\u7684\u751f\u5b58\u8fc7\u7a0b\u5206\u4e3a\u5165\u5305\u8fc7\u7a0b\uff0c\u5904\u7406\u8fc7\u7a0b\u548c\u670d\u52a1\u8fc7\u7a0b\uff0c\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6392\u961f\u7cfb\u7edf\uff0c\u4ee5\u4f30\u8ba1\u6700\u5c11\u6570\u91cf\u7684SDN\u4ea4\u6362\u673a\u6d41\u8868\u6761\u76ee\u3002\u7b2c\u4e8c\uff0c\u5206\u6790DCN\u7684\u6d41\u91cf\u5206\u5e03\uff0c\u4ee5\u8ba1\u7b97\u6a21\u578b\u4e2d\u7684\u5173\u952e\u53c2\u6570\u3002\u7b2c\u4e09\uff0c\u57fa\u4e8eDCN\u4e2d\u7ed3\u6784\u5316\u62d3\u6251\u7684\u672c\u8d28\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u8def\u7531\u7b56\u7565\u7684\u6982\u7387\u6a21\u578b\uff0c\u4ee5\u91cf\u5316\u8def\u5f84\u9009\u62e9\u7684\u5f71\u54cd\u3002 B. Zhao et al.: \"Efficient and Consistent TCAM Updates,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. flow entries \u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\u7684\u52a8\u6001\u6027\u8d28\u8981\u6c42\u9891\u7e41\u66f4\u65b0\u4ea4\u6362\u673a\u6570\u636e\u5e73\u9762\u4e2d\u7684\u6d41\u8868\u3002\u73b0\u6709\u7684\u73b0\u6210\u4ea4\u6362\u673a\u6279\u91cf\u66f4\u65b0\u89c4\u5219\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u662f\u5728\u6279\u91cf\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u8f6c\u53d1\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u672c\u6587\u8bbe\u8ba1\u548c\u8bc4\u4f30\u4e86\u4e00\u4e2aTCAM\u66f4\u65b0\u4f18\u5316\u6846\u67b6\uff0c\u8be5\u6846\u67b6\u53ef\u4ee5\u5728\u4f7f\u7528\u5206\u5c42TCAM\u7ed3\u6784\u7684\u540c\u65f6\u4fdd\u8bc1\u6574\u4e2a\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u7684\u4e00\u81f4\u8f6c\u53d1\u3002\u6b64\u65b9\u6cd5\u57fa\u4e8e\u4fee\u6539\u540e\u7684\u6761\u76ee\u4f18\u5148\u5199\u56de\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u53ef\u663e\u7740\u51cf\u5c11TCAM\u6761\u76ee\u79fb\u52a8\u5e26\u6765\u7684\u5f00\u9500\u3002\u8fd8\u53ef\u4ee5\u68c0\u6d4b\u5230\u91cd\u65b0\u6392\u5e8f\u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u8fdb\u884c\u5904\u7406\u3002 Garegin Grigoryan et al.: 2018. PFCA: a programmable FIB caching architecture. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 97\u2013103. openflow TCAM\u6602\u8d35\u4e14\u8017\u80fd\u3002\u6b64\u5916\uff0cFIB\u7684\u6301\u7eed\u589e\u957f\u53ef\u80fd\u4f1a\u5bfc\u81f4TCAM\u6ea2\u51fa\u95ee\u9898\u3002\u7136\u800c\uff0c\u53ea\u6709\u4e00\u5c0f\u90e8\u5206FIB\u6761\u76ee\u627f\u8f7d\u4e86\u5927\u90e8\u5206\u7f51\u7edc\u6d41\u91cf\u3002\u56e0\u6b64\uff0cFIB\u7f13\u5b58\uff0c\u5373\u5728\u5feb\u901f\u5b58\u50a8\u5668\uff08\u4f8b\u5982TCAM\uff09\u4e2d\u5b89\u88c5\u6700\u6d41\u884c\u7684\u6761\u76ee\uff0c\u53ef\u80fd\u4f1a\u5927\u5927\u51cf\u5c11TCAM\u7684\u4f7f\u7528\u3002\u5728\u504f\u8bba\u6587\u4e2d\uff0c\u5229\u7528\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u6982\u5ff5\u6765\u8bbe\u8ba1\u5177\u6709\u4e24\u7ea7\u7f13\u5b58\u7684\u53ef\u7f16\u7a0bFIB\u7f13\u5b58\u4f53\u7cfb\u7ed3\u6784\uff08PFCA\uff09\u3002\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u7ba1\u9053\u7684\u7b97\u6cd5\u6765\u68c0\u6d4b\u7f13\u5b58\u4e2d\u7528\u4e8e\u9a71\u9010\u53d7\u5bb3\u8005\u7684\u6700\u4e0d\u6d41\u884c\u7684\u524d\u7f00\u3002 N. Huang et al.: \"Software-Defined Label Switching: Scalable Per-Flow Control in SDN,\" 2018 IEEE/ACM 26th International Symposium on Quality of Service (IWQoS), Banff, AB, Canada, 2018, pp. openflow \u4e3a\u4fdd\u7559\u6570\u636e\u5e73\u9762\u53ef\u4f38\u7f29\u6027\u7684\u540c\u65f6\u5b9e\u73b0\u6bcf\u6d41\u63a7\u5236\u3002\u73b0\u6709\u7684SDN\u67b6\u6784\u65e0\u6cd5\u6709\u6548\u5730\u5b9e\u73b0\u6bcf\u6d41\u63a7\u5236\uff1a\u5b83\u4eec\u8981\u4e48\u5bfc\u81f4\u6570\u636e\u5305\u7684\u989d\u5916\u5ef6\u8fdf\uff0c\u8981\u4e48\u7ed9\u4ea4\u6362\u673a\u5e26\u6765\u9ad8\u5b58\u50a8\u8d1f\u62c5\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u8f6f\u4ef6\u5b9a\u4e49\u7684\u6807\u7b7e\u4ea4\u6362\uff08SDLS\uff09\uff0c\u4ee5\u5b9e\u73b0\u6570\u636e\u5e73\u9762\u53ef\u6269\u5c55\u6027\u548c\u6309\u6d41\u63a7\u5236\u3002SDLS\u5c06\u4e2d\u592e\u63a7\u5236\u4e0e\u6807\u7b7e\u5207\u6362\u76f8\u7ed3\u5408\uff0c\u4ee5\u51cf\u8f7b\u5b58\u50a8\u8d1f\u62c5\uff0c\u540c\u65f6\u4fdd\u6301\u6bcf\u6d41\u63a7\u5236\u3002SDLS\u5c06\u8f6f\u4ef6\u4ea4\u6362\u673a\u5f15\u5165\u6570\u636e\u5e73\u9762\uff0c\u5e76\u5728\u533a\u57df\u4e2d\u7ba1\u7406\u7f51\u7edc\u4ee5\u5b9e\u73b0\u53ef\u4f38\u7f29\u6027\u3002SDLS\u4e0eOpenFlow\u517c\u5bb9\uff0c\u5e76\u91c7\u7528\u6df7\u5408\u6570\u636e\u5e73\u9762\u6765\u63d0\u4f9b\u6709\u6548\u7684\u6d41\u8bbe\u7f6e\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660eSDLS\u53ef\u4ee5\u5728\u5ef6\u8fdf\u6027\u80fd\u65b9\u9762\u8fbe\u5230\u6700\u4f73\uff0c\u540c\u65f6\u5c06\u6d41\u6761\u76ee\u548c\u6ea2\u51fa\u7684\u6570\u91cf\u51cf\u5c11\u4e8647\uff05\u4ee5\u4e0a\u3002 H. Xu et al.: \"Lightweight Flow Distribution for Collaborative Traffic Measurement in Software Defined Networks,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. flow entries \u6d41\u91cf\u7ea7\u522b\u7684\u7ec6\u7c92\u5ea6\u6d41\u91cf\u6d4b\u91cf\u4e2d\uff0c\u7531\u4e8e\u57fa\u4e8eTCAM\u7684\u6d41\u6761\u76ee\u4ec5\u63d0\u4f9b\u805a\u5408\u7684\u6d41\u91cf\u7edf\u8ba1\u4fe1\u606f\uff0c\u56e0\u6b64\u5148\u524d\u7684\u7814\u7a76\u5efa\u8bae\u5728SRAM\u4e2d\u6267\u884c\u6d41\u7ea7\u522b\u7684\u6d4b\u91cf\uff0c\u5e76\u901a\u8fc7\u534f\u4f5c\u6d41\u91cf\u6d4b\u91cf\u6765\u5e73\u8861\u6574\u4e2a\u7f51\u7edc\u4e0a\u7684\u6d4b\u91cf\u8d1f\u8f7d\u3002\u534f\u4f5c\u6d4b\u91cf\u7684\u5173\u952e\u95ee\u9898\u662f\u63d0\u4f9b\u4e00\u79cd\u5c06\u6d41\u91cf\u5206\u914d\u5230\u4ea4\u6362\u673a\u7684\u673a\u5236\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u4ea4\u6362\u673a\u90fd\u53ef\u4ee5\u6807\u8bc6\u8981\u6d4b\u91cf\u7684\u6d41\u91cf\u5b50\u96c6\u3002\u5148\u524d\u7684\u5de5\u4f5c\u96c6\u4e2d\u5728\u4f18\u5316\u4ea4\u6362\u673a\u4e4b\u95f4\u7684\u6d41\u5206\u914d\u4e0a\uff0c\u4f46\u662f\u5ffd\u7565\u4e86\u5b83\u4eec\u5f15\u5165\u6570\u636e\u5e73\u9762\u7684\u9ad8\u7a7a\u95f4\u548c\u6309\u6570\u636e\u5305\u5904\u7406\u7684\u5f00\u9500\uff0c\u8fd9\u5728\u5927\u578bSDN\u7cfb\u7edf\u4e2d\u6210\u4e3a\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8f7b\u91cf\u7ea7\u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u6d41\u91cf\u5206\u914d\u95ee\u9898\u3002\u5b83\u9075\u5faa\u901a\u8fc7\u6700\u5c0f\u5316\u6570\u636e\u5e73\u9762\u7a7a\u95f4\u548c\u5904\u7406\u5f00\u9500\u6765\u51cf\u8f7b\u6570\u636e\u5e73\u9762\u590d\u6742\u6027\u7684\u8bbe\u8ba1\u539f\u7406\u3002\u5728\u63a7\u5236\u5e73\u9762\u4e0a\uff0c\u5c06\u6d41\u91cf\u5206\u914d\u516c\u5f0f\u5316\u4e3a\u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u4f18\u5316\u95ee\u9898\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u901a\u8fc7\u8fb9\u7f18\u4ea4\u6362\u673a\u548c\u8fb9\u7f18/\u6838\u5fc3\u4ea4\u6362\u673a\u4e00\u8d77\u5b9e\u65bd\u534f\u4f5c\u6d4b\u91cf\u3002\u4eff\u771f\u8868\u660e\uff0c\u4e0e\u73b0\u6709\u6700\u597d\u7684\u5de5\u4f5c\u76f8\u6bd4\uff0c\u6240\u63d0\u51fa\u7684\u8f7b\u91cf\u7ea7\u89e3\u51b3\u65b9\u6848\u5728\u8d1f\u8f7d\u5e73\u8861\u65b9\u9762\u8fbe\u5230\u4e86\u53ef\u6bd4\u7684\u6027\u80fd\uff0c\u540c\u65f6\u5927\u5927\u51cf\u5c11\u4e86\u7a7a\u95f4\u5f00\u9500\u548c\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5904\u7406\u5f00\u9500\uff0c\u4f7f\u5176\u5728\u5b9e\u9645\u7cfb\u7edf\u4e2d\u66f4\u52a0\u5b9e\u7528\uff0c\u5bf9\u6d41\u91cf\u5206\u914d\u6240\u5e26\u6765\u7684\u989d\u5916\u5f00\u9500\u5f88\u654f\u611f\u3002 G. Zhao et al.: \"HiFi: Hybrid Rule Placement for Fine-Grained Flow Management in SDNs,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. \u5728\u672c\u6587\u4e2d\uff0c\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86HiFi\uff0c\u8be5\u7cfb\u7edf\u53ef\u901a\u8fc7\u6700\u5c11\u7684\u6d41\u6761\u76ee\u6570\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u7ba1\u7406\u3002\u4e3a\u6b64\uff0cHiFi\u91c7\u7528\u4e24\u6b65\u65b9\u6cd5\uff1a\u901a\u914d\u7b26\u6761\u76ee\u5b89\u88c5\u548c\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u7cbe\u786e\u5339\u914d\u6761\u76ee\u5b89\u88c5\u3002\u4f46\u662f\uff0c\u5982\u4f55\u6700\u4f73\u5730\u5b89\u88c5\u901a\u914d\u7b26\u548c\u5b8c\u5168\u5339\u914d\u6d41\u6761\u76ee\u662f\u5f88\u68d8\u624b\u7684\u3002\u56e0\u6b64\uff0cHiFi\u7528\u6709\u754c\u56e0\u7d20\u7684\u8fd1\u4f3c\u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u5e76\u4ee5\u6848\u4f8b\u7814\u7a76\u7684\u65b9\u5f0f\u8003\u8651\u5982\u4f55\u901a\u8fc7\u7ec6\u7c92\u5ea6\u7684\u6d41\u91cf\u7ba1\u7406\u5b9e\u73b0\u7f51\u7edc\u8303\u56f4\u7684\u8d1f\u8f7d\u5e73\u8861\u3002\u5b9e\u9a8c\u548c\u4eff\u771f\u7ed3\u679c\u5747\u8868\u660e\uff0c\u4e0e\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u6700\u65b0\u65b9\u6cd5\u76f8\u6bd4\uff0cHiFi\u53ef\u4ee5\u5c06\u6240\u9700\u6d41\u6761\u76ee\u7684\u6570\u91cf\u51cf\u5c11\u7ea645\uff05-69\uff05\uff0c\u5e76\u5c06\u63a7\u5236\u5f00\u9500\u51cf\u5c1128\uff05-50\uff05\u3002 C. He et al.: \"POMP: Protocol Oblivious SDN Programming with Automatic Multi-Table Pipelining,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications, Honolulu, HI, 2018, pp. POMP\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u540c\u65f6\u652f\u6301\u534f\u8bae\u9057\u5fd8\u8f6c\u53d1\u548c\u81ea\u52a8\u591a\u8868\u6d41\u6c34\u7ebf\u64cd\u4f5c\u7684SDN\u7f16\u7a0b\u73af\u5883\u3002POMP\u5e94\u7528\u9759\u6001\u6c61\u70b9\u5206\u6790\u6280\u672f\u4ece\u7a0b\u5e8f\u5458\u7f16\u5199\u7684\u6570\u636e\u5e73\u9762\u4e0d\u53ef\u77e5\u7f51\u7edc\u7b56\u7565\u81ea\u52a8\u63a8\u65ad\u7d27\u51d1\u9ad8\u6548\u7684\u591a\u8868\u7ba1\u9053\u3002\u8fd0\u884c\u65f6\u7cfb\u7edf\u8ddf\u8e2a\u7f51\u7edc\u7b56\u7565\u7684\u6267\u884c\uff0c\u5e76\u81ea\u52a8\u751f\u6210\u8868\u6761\u76ee\u3002POMP\u5728\u6c61\u70b9\u5206\u6790\u4e2d\u8fd8\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u4f9d\u8d56\u6807\u7b7e\u6982\u5ff5\uff0c\u8be5\u6982\u5ff5\u4e0e\u7f51\u7edc\u7b56\u7565\u7684\u8fd0\u884c\u65f6\u4fe1\u606f\u76f8\u7ed3\u5408\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c11\u8868\u9879\u7684\u6570\u91cf\u3002\u4e0eP4\u4e00\u6837\uff0cPOMP\u901a\u8fc7\u63d0\u4f9b\u7f51\u7edc\u534f\u8bae\u89c4\u8303\u8bed\u8a00\u6765\u652f\u6301\u534f\u8bae\u65e0\u5173\u7684\u7f16\u7a0b\u3002\u53ef\u4ee5\u6839\u636e\u534f\u8bae\u89c4\u8303\u81ea\u52a8\u751f\u6210\u6570\u636e\u5305\u89e3\u6790\u5668\u3002POMP\u652f\u6301\u4e24\u4e2a\u4e3b\u8981\u7684\u65b0\u5174SDN\u5e73\u53f0POF\u548cP4\uff0c\u56e0\u6b64\uff0c\u7528POMP\u7f16\u5199\u7684\u7f51\u7edc\u7b56\u7565\u53ef\u4ee5\u5728\u652f\u6301POF\u6216P4\u7684\u4efb\u4f55\u4ea4\u6362\u673a\u4e0a\u79fb\u690d\u3002\u53ef\u4ee5\u6839\u636e\u534f\u8bae\u89c4\u8303\u81ea\u52a8\u751f\u6210\u6570\u636e\u5305\u89e3\u6790\u5668\u3002 M. Yu et al.: \"Flow Table Security in SDN: Adversarial Reconnaissance and Intelligent Attacks,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. \u672c\u7bc7\u63d0\u51fa\u4e86\u4e00\u79cd\u9488\u5bf9openflow \u6d41\u8868\u7684\u667a\u80fd\u653b\u51fb\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5229\u7528\u6d41\u8868\u7684\u7279\u5b9a\u4e8e\u9ad8\u901f\u7f13\u5b58\u7684\u884c\u4e3a\u6765\u63a8\u65ad\u5176\u5185\u90e8\u914d\u7f6e\u548c\u72b6\u6001\uff0c\u7136\u540e\u76f8\u5e94\u5730\u8bbe\u8ba1\u653b\u51fb\u53c2\u6570\u3002","title":"OF\u4ea4\u6362\u673a\u6d41\u8868\u5b89\u5168"},{"location":"Second%20Part/#_1","text":"Arjun Roy et al.: 2018. Cloud Datacenter SDN Monitoring: Experiences and Challenges. In Proceedings of the Internet Measurement Conference 2018 ( IMC \u201918 ). Association for Computing Machinery, New York, NY, USA, 464\u2013470. keyword\uff1aNetwork measurement; Cloud computing; Network monitoring; \u8fd9\u7bc7\u8bba\u6587\u9762\u5bf9\u4e91\u8ba1\u7b97\u6570\u636e\u4e2d\u5fc3\u7684\u7f51\u7edc\u67b6\u6784\u6240\u9700\u8981\u7684\u5feb\u901f\u68c0\u6d4b\u548c\u7f13\u89e3\u67b6\u6784\u6545\u969c\u95ee\u9898\uff0c\u63cf\u8ff0\u4e86\u6784\u5efa\u76f8\u5e94\u7684\u57fa\u4e8e\u4e91\u7684\u6545\u969c\u76d1\u63a7\u7cfb\u7edf\u6240\u9762\u4e34\u7684\u6311\u6218\uff0c\u5e76\u9610\u660e\u4e86\u865a\u62df\u5316\u67b6\u6784\u4e0b\u5bf9\u6570\u636e\u4e2d\u5fc3\u6545\u969c\u7ba1\u7406\u7684\u5f71\u54cd\uff0c\u7ed3\u8bba\u663e\u793a\uff0c\u865a\u62df\u5316\uff0c\u79df\u6237\u8f6f\u4ef6\u548c\u7f51\u7edc\u7ed3\u6784\u7684\u8f83\u4f4e\u5c42\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u6545\u969c\u68c0\u6d4b\u548c\u8bca\u65ad\u5de5\u4f5c\u7684\u5404\u4e2a\u4e0d\u540c\u65b9\u9762\u5373\u5b58\u5728\u7b80\u5316\uff0c\u4e5f\u5b58\u5728\u590d\u6742\u5316\u3002 S. Lee et al.: AudiSDN: Automated Detection of Network Policy Inconsistencies in Software-Defined Networks, IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. SDN, Software-Defined Networking, Network Policy Inconsistency AudiSDN\uff0c\u8fd9\u662f\u4e00\u4e2a\u81ea\u52a8\u7684\u6a21\u7cca\u6d4b\u8bd5\u6846\u67b6\uff0c\u65e8\u5728\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u3002\u5728OpenFlow\u7f51\u7edc\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u7b56\u7565\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u5982\u7528\u6237\u505a\u51fa\u7684\u51b3\u7b56\u4e0e\u6240\u4e0b\u53d1\u7684\u7b56\u7565\u5728\u5b9e\u9645\u6267\u884c\u7684\u65f6\u5019\u5b58\u5728\u67d0\u4e9b\u6f0f\u6d1e\u3002AudiSDN\u5c06\u7528\u6237\u6240\u8981\u4e0b\u53d1\u7684\u51b3\u7b56\uff0c\u8fdb\u884c\u590d\u5236\uff0c\u5e76\u4ee5\u4fee\u6539\u5185\u5bb9\u7684\u65b9\u5f0f\u8fdb\u884c\u89c4\u5219\u7684\u6a21\u7cca\u5316\uff0c\u4f7f\u5f97\u539f\u89c4\u5219\u4e0e\u6a21\u7cca\u89c4\u5219\u5171\u540c\u4e0b\u53d1\u5230\u5e95\u5c42\u8bbe\u5907\u4e4b\u4e2d\u3002\u518d\u901a\u8fc7\u4e0d\u4e00\u81f4\u6027\u68c0\u6d4b\u6765\u5224\u5b9a\u662f\u5426\u5b58\u5728\u4e0d\u4e00\u81f4\u60c5\u51b5\u3002\u5b9e\u9a8c\u4e2d\uff0cAudiSDN\u6d4b\u8bd5\u4e86Floodlight\u548cONOS\u7684\u7ed3\u679c\u3002 Jehandad Khan et al.: 2018. Query language for large-scale P4 network debugging. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 162\u2013164. openflow \u901a\u8fc7\u5c06\u7f51\u7edc\u62d3\u6251\u4fe1\u606f\u4e0e\u72b6\u6001\u6536\u96c6\u5408\u5e76\uff0c\u6b64\u8bba\u6587\u63a2\u7d22\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u6765\u67e5\u770b\u7f51\u7edc\u76d1\u89c6\u548c\u6545\u969c\u6392\u9664\u95ee\u9898\u4ee5\u5bf9\u73b0\u4ee3\u6570\u636e\u4e2d\u5fc3\u8fdb\u884c\u8bca\u65ad\u548c\u89e3\u51b3\u95ee\u9898\u3002\u5c06\u6574\u4e2a\u7f51\u7edc\u62bd\u8c61\u4e3a\u4e00\u4e2a\u5b9e\u4f53\u53ef\u7b80\u5316\u8c03\u8bd5\u8fc7\u7a0b\uff0c\u4f7f\u5168\u9762\u7684\u6839\u672c\u539f\u56e0\u5206\u6790\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u4f7f\u7f51\u7edc\u7ba1\u7406\u5458\u65e0\u9700\u5904\u7406\u8bb8\u591a\u8bbe\u5907\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u751f\u4ea7\u7387\u548c\u6548\u7387\u3002\u8fd9\u79cd\u5408\u5e76\u5141\u8bb8\u5c06\u4ee5\u9886\u57df\u7279\u5b9a\u8bed\u8a00\u8868\u8fbe\u7684\u6027\u80fd\u67e5\u8be2\u8f6c\u6362\u4e3a\u5728\u7f51\u7edc\u4e2d\u6536\u96c6\u5fc5\u8981\u72b6\u6001\u7684\u4e0d\u540c\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u5c0f\u6bb5\u4ee3\u7801\u3002\u8fd9\u79cd\u5408\u5e76\u53ef\u4ee5\u51cf\u5c11\u6bcf\u4e2a\u4ea4\u6362\u673a\u7684\u5f00\u9500\uff0c\u5e76\u51cf\u8f7b\u8bbe\u5907\u7684\u8d1f\u62c5\uff0c\u5e76\u4e3a\u7ba1\u7406\u5458\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u62bd\u8c61\u3002 Jinghan Zhou et al.: 2018. APF: fast network all-pair reachability calculation. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 172\u2013173. programmable data plane \u7f51\u7edc\u9a8c\u8bc1\u4e3b\u8981\u662f\u6839\u636e\u7f51\u7edc\u4e0d\u53d8\u6027\u6216\u8fd0\u8425\u5546\u7684\u4fe1\u5ff5\u6765\u68c0\u67e5\u7f51\u7edc\u72b6\u6001\u3002\u4e8b\u5148\u5feb\u901f\u8ba1\u7b97\u7f51\u7edc\u7684\u6240\u6709\u5bf9\u53ef\u8fbe\u6027\uff0c\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u67e5\u8be2\u6216\u6574\u4f53\u5206\u6790\uff0c\u53ef\u4ee5\u4e3a\u7f51\u7edc\u9a8c\u8bc1\u63d0\u4f9b\u5de8\u5927\u5e2e\u52a9\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5feb\u901f\u5168\u5bf9\u53ef\u8fbe\u6027\u8ba1\u7b97\u7b97\u6cd5Atomic Predicates Flooding\uff08APF\uff09\u3002\u5728\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u57fa\u4e8e\u7f51\u7edc\u96fe\u5316\u7684\u65b0\u7b97\u6cd5\u6bd4\u6ca1\u6709\u7f51\u7edc\u96fe\u5316\u7684\u73b0\u6709\u7b97\u6cd5\u5feb\u7ea6\u4e09\u5230\u56db\u4e2a\u6570\u91cf\u7ea7\u3002\u5728\u5927\u591a\u6570\u6570\u636e\u96c6\u4e0a\uff0cAPF\u751a\u81f3\u6bd4\u57fa\u4e8eWarshall\u7684\u5177\u6709\u96fe\u5316\u529f\u80fd\u7684\u5168\u5bf9\u53ef\u8fbe\u6027\u7b97\u6cd5\u5feb2\u81f35\u500d\u3002 Zehua Guo et al.: 2019. RetroFlow: maintaining control resiliency and flow programmability for software-defined WANs. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 1, 1\u201310. openflow \u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u5c06\u8f6f\u4ef6\u5b9a\u4e49\u7684WAN\u5206\u4e3a\u591a\u4e2a\u57df\uff0c\u8fd9\u4e9b\u57df\u7531\u5177\u6709\u903b\u8f91\u96c6\u4e2d\u89c6\u56fe\u7684\u591a\u4e2a\u63a7\u5236\u5668\u63a7\u5236\u3002\u5728\u63a7\u5236\u5668\u6545\u969c\u4e0b\uff0c\u5c06\u8131\u673a\u4ea4\u6362\u673a\u7684\u63a7\u5236\u4ece\u53d1\u751f\u6545\u969c\u7684\u63a7\u5236\u5668\u91cd\u65b0\u6620\u5c04\u5230\u5176\u4ed6\u6d3b\u52a8\u63a7\u5236\u5668\u3002\u7531\u4e8e\u589e\u52a0\u4e86\u63a7\u5236\u5668-\u4ea4\u6362\u673a\u7684\u901a\u4fe1\u5f00\u9500\uff0c\u73b0\u6709\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u4f1a\u4f7f\u6d3b\u52a8\u7684\u63a7\u5236\u5668\u8fc7\u8f7d\uff0c\u4ece\u800c\u4e2d\u65ad\u5176\u6b63\u5e38\u8fd0\u884c\uff0c\u6216\u8005\u964d\u4f4e\u7f51\u7edc\u6027\u80fd\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51faRetroFlow\u4ee5\u5b9e\u73b0\u4f4e\u901a\u4fe1\u5f00\u9500\uff0c\u800c\u4e0d\u4f1a\u5728\u63a7\u5236\u5668\u6545\u969c\u671f\u95f4\u4e2d\u65ad\u6d3b\u52a8\u63a7\u5236\u5668\u7684\u6b63\u5e38\u5904\u7406\u3002\u901a\u8fc7\u667a\u80fd\u5730\u914d\u7f6e\u4e00\u7ec4\u5728\u4f20\u7edf\u8def\u7531\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u7684\u9009\u5b9a\u8131\u673a\u4ea4\u6362\u673a\uff0cRetroFlow\u53ef\u4ee5\u4f7f\u6d3b\u52a8\u63a7\u5236\u5668\u5728\u63a7\u5236SDN\u7684\u6d41\u53ef\u7f16\u7a0b\u6027\u7684\u540c\u65f6\uff0c\u4e0d\u63a7\u5236\u9009\u5b9a\u7684\u8131\u673a\u4ea4\u6362\u673a\u3002RetroFlow\u8fd8\u53ef\u4ee5\u901a\u8fc7SDN\u8def\u7531\u6a21\u5f0f\u5c06\u8131\u673a\u4ea4\u6362\u673a\u7684\u63a7\u5236\u667a\u80fd\u5730\u8f6c\u79fb\u5230\u6d3b\u52a8\u63a7\u5236\u5668\uff0c\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u8fd9\u4e9b\u8131\u673a\u4ea4\u6362\u673a\u4e0e\u6d3b\u52a8\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u5f00\u9500\u3002 Yu Zhou et al.: 2019. P4Tester: efficient runtime rule fault detection for programmable data planes. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 5, 1\u201310. programmable data plane \u672c\u6587\u63d0\u51fa\u4e86P4Tester\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8e\u5bf9\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e0a\u7684\u8fd0\u884c\u65f6\u89c4\u5219\u6545\u969c\u8fdb\u884c\u6545\u969c\u6392\u9664\u7684\u65b0\u578b\u7f51\u7edc\u6d4b\u8bd5\u7cfb\u7edf\u3002\u9996\u5148\uff0cP4Tester\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u4e8c\u8fdb\u5236\u51b3\u7b56\u56fe\u7684\u65b0\u7684\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\uff0c\u8be5\u8868\u793a\u5f62\u5f0f\u53ef\u4ee5\u4e3a\u5404\u79cdP4\u5b9a\u4e49\u7684\u6570\u636e\u5e73\u9762\u529f\u80fd\u9ad8\u6548\u751f\u6210\u63a2\u9488\u3002\u5176\u6b21\uff0cP4Tester\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u63a2\u9488\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u4f7f\u7528\u6e90\u8def\u7531\u6765\u8f6c\u53d1\u63a2\u9488\u3002\u8be5\u63a2\u9488\u6a21\u578b\u6781\u5927\u5730\u51cf\u5c11\u4e86\u89c4\u5219\u6545\u969c\u68c0\u6d4b\u7684\u5f00\u9500\uff0c\u5373\u4ec5\u9700\u8981\u4e00\u53f0\u670d\u52a1\u5668\u5373\u53ef\u4e3a\u5927\u578b\u7f51\u7edc\u751f\u6210\u63a2\u9488\uff0c\u5e76\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u4e86\u63a2\u9488\u7684\u6570\u91cf\u3002\u6b64\u5916\uff0c\u8be5\u63a2\u9488\u6a21\u578b\u53ef\u4ee5\u6d4b\u8bd5\u7f51\u7edc\u4e2d\u7684\u6240\u6709\u8868\u89c4\u5219\uff0c\u4ece\u800c\u5b9e\u73b0\u5b8c\u6574\u7684\u6545\u969c\u8986\u76d6\u3002\u6839\u636e\u5b9e\u9645\u6570\u636e\u96c6\u8fdb\u884c\u7684\u8bc4\u4f30\u8868\u660eP4Tester \u53ef\u4ee5\u6709\u6548\u5730\u68c0\u67e5\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e2d\u7684\u6240\u6709\u89c4\u5219\uff0c\u751f\u6210\u7684\u63a2\u9488\u6bd4ATPG\u548cPronto\u5c1159\uff05\uff0c\u6bd4ATPG\u5feb\u4e24\u4e2a\u6570\u91cf\u7ea7\uff0c\u5e76\u5728\u4e00\u79d2\u949f\u5185\u5bf9BMv2\u548cTofino\u4e0a\u7684\u591a\u4e2a\u89c4\u5219\u6545\u969c\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002 Xinbo Liu et al.: 2019. ATMPA: attacking machine learning-based malware visualization detection methods via adversarial examples. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 38, 1\u201310. programmable data plane \u81ea\u52a8\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u6280\u672f\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\uff0c\u5176\u4e2d\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\uff08ML\uff09\u7684\u53ef\u89c6\u5316\u68c0\u6d4b\u65b9\u6cd5\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\u3002\u672c\u6587\u8bc1\u660e\u4e86\u57fa\u4e8eML\u7684\u6700\u65b0\u53ef\u89c6\u5316\u68c0\u6d4b\u65b9\u6cd5\u5bb9\u6613\u53d7\u5230\u5bf9\u6297\u793a\u4f8b\uff08AE\uff09\u653b\u51fb\u3002\u5e76\u5f00\u53d1\u4e86\u4e00\u79cd\u57fa\u4e8e\u68af\u5ea6\u4e0b\u964d\u548cL\u7684\u65b0\u578b\u5bf9\u6297\u7eb9\u7406\u6076\u610f\u8f6f\u4ef6\u6444\u52a8\u653b\u51fb\uff08ATMPA\uff09\u65b9\u6cd5-norm\u4f18\u5316\u65b9\u6cd5\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5728\u8f6c\u6362\u540e\u7684\u6570\u636e\u96c6\u4e0a\u5f15\u5165\u4e00\u4e9b\u5fae\u5c0f\u7684\u5e72\u6270\uff0c\u4ece\u800c\u4f7f\u57fa\u4e8eML\u7684\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u65b9\u6cd5\u5b8c\u5168\u5931\u8d25\u3002 Hui Cai et al.: 2019. Towards privacy-preserving data trading for web browsing history. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 25, 1\u201310. openflow \u672c\u6587\u63d0\u51fa\u4e86PEATSE\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8eWeb\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u7684\u65b0\u7684\u9690\u79c1\u4fdd\u62a4dAta\u4ea4\u6613\u6846\u67b6\u3002\u5b83\u8003\u8651\u4e86\u7528\u6237\u7684\u5404\u79cd\u9690\u79c1\u504f\u597d\u548c\u4ed6\u4eec\u7684Web\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u7684\u5b9e\u7528\u7a0b\u5e8f\u3002PEATSE\u5728\u5df2\u53d1\u5e03\u7684\u6d4f\u89c8\u8bb0\u5f55\u4e0a\u5e72\u6270\u7528\u6237\u7684\u8be6\u7ec6\u6d4f\u89c8\u65f6\u95f4\uff0c\u4ee5\u4fdd\u62a4\u7528\u6237\u9690\u79c1\uff0c\u540c\u65f6\u5e73\u8861\u9690\u79c1\u4e0e\u5b9e\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6743\u8861\u3002\u901a\u8fc7\u57fa\u4e8e\u771f\u5b9e\u6570\u636e\u7684\u5b9e\u9a8c\uff0c\u6211\u4eec\u7684\u5206\u6790\u548c\u8bc4\u4f30\u7ed3\u679c\u8868\u660ePEATSE\u786e\u5b9e\u5b9e\u73b0\u4e86\u7528\u6237\u9690\u79c1\u4fdd\u62a4\uff0c\u6570\u636e\u6d88\u8d39\u8005\u7684\u51c6\u786e\u6027\u8981\u6c42\uff0c\u771f\u5b9e\u6027\uff0c\u4e2a\u4eba\u5408\u7406\u6027\u4ee5\u53ca\u9884\u7b97\u5e73\u8861\u3002 Mohammad Jahanian et al.: 2019. Name Space Analysis: Verification of Named Data Network Data Planes. In Proceedings of the 6th ACM Conference on Information-Centric Networking (ICN \u201919). Association for Computing Machinery, New York, NY, USA, 44\u201354. programmable data plane \u672c\u6587\u63d0\u51fa\u4e86\u540d\u79f0\u7a7a\u95f4\u5206\u6790\uff08NSA\uff09\uff0c\u4e00\u79cd\u7528\u4e8e\u5bf9NDN\u6570\u636e\u5e73\u9762\u8fdb\u884c\u5efa\u6a21\u548c\u5206\u6790\u7684\u7f51\u7edc\u9a8c\u8bc1\u6846\u67b6\u3002NSA\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5feb\u7167\u4f5c\u4e3a\u8f93\u5165\uff0c\u6bcf\u4e2a\u5feb\u7167\u4ee3\u8868\u6570\u636e\u5e73\u9762\u7684\u7279\u5b9a\u72b6\u6001\u3002\u7136\u540e\uff0c\u5b83\u6839\u636e\u6307\u5b9a\u7684\u5c5e\u6027\u63d0\u4f9b\u9a8c\u8bc1\u7ed3\u679c\u3002NSA\u5efa\u7acb\u5728\u6807\u5934\u7a7a\u95f4\u5206\u6790\u7406\u8bba\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u4f8b\u5982\u4ee5\u7075\u6d3b\u7684\u683c\u5f0f\u652f\u6301\u53ef\u53d8\u5927\u5c0f\u7684\u6807\u5934\uff0c\u5f15\u5165\u540d\u79f0\u7a7a\u95f4\u529f\u80fd\uff0c\u5e76\u5141\u8bb8\u57fa\u4e8e\u540d\u79f0\u7684\u5c5e\u6027\uff0c\u4f8b\u5982\u5185\u5bb9\u53ef\u8bbf\u95ee\u6027\u548c\u540d\u79f0\u6cc4\u6f0f\u81ea\u7531\u3002\u8fd9\u4e9b\u91cd\u8981\u7684\u8865\u5145\u53cd\u6620\u4e86NDN\u7684\u884c\u4e3a\u548c\u8981\u6c42\uff0c\u8981\u6c42\u5efa\u6a21\u548c\u9a8c\u8bc1\u57fa\u7840\u4e0e\u4f20\u7edf\u7684\u4ee5\u4e3b\u673a\u4e3a\u4e2d\u5fc3\u7684\u7f51\u7edc\u6839\u672c\u4e0d\u540c\u3002 X. Jia et al.: \"Link fault protection and traffic engineering in hybrid SDN networks,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Honolulu, HI, 2018, pp. \u5728\u5177\u6709SDN\u548c\u975eSDN\u4ea4\u6362\u673a\u7684\u6df7\u5408\u7f51\u7edc\u4e2d\uff0c\u73b0\u6709\u94fe\u8def\u6545\u969c\u4fdd\u62a4\u7684\u89e3\u51b3\u65b9\u6848\u9700\u8981\u8f83\u957f\u7684\u8ba1\u7b97\u65f6\u95f4\u548c\u8f83\u9ad8\u7684\u914d\u7f6e\u5f00\u9500\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cdHybrid-Hie\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u5b9e\u73b0\u6df7\u5408SDN\u7f51\u7edc\u4e2d\u7684\u5feb\u901f\u91cd\u8def\u7531\u548c\u8d1f\u8f7d\u5e73\u8861\u3002\u672c\u6587\u901a\u8fc7\u9884\u6d4b\u94fe\u63a5\u5229\u7528\u7387\u6765\u9884\u5148\u5728\u6bcf\u4e2a\u5907\u4efd\u8def\u5f84\u4e0a\u914d\u7f6e\u5206\u914d\u6bd4\u4f8b\u3002\u4e0e\u73b0\u6709\u89e3\u51b3\u65b9\u6848\u76f8\u6bd4\uff0c\u53ef\u4ee51\uff09\u5b9e\u73b0\u57df\u95f4\u94fe\u63a5\u7684\u6709\u6548\u6545\u969c\u6062\u590d\uff0c\u4ee5\u53ca2\uff09\u5b9e\u73b0\u66f4\u597d\u7684\u8d1f\u8f7d\u5e73\u8861\u548c\u6062\u590d\u8def\u5f84\u6269\u5c55\u3002","title":"\u7f51\u7edc\u67b6\u6784\u5b89\u5168\uff0c\u68c0\u6d4b\uff0c\u6545\u969c\u6062\u590d"},{"location":"Second%20Part/#_2","text":"L. Tang et al.: \"SpreadSketch: Toward Invertible and Network-Wide Detection of Superspreaders,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. p4 \u4e3a\u5b9e\u65f6\u51c6\u786e\u5730\u5927\u89c4\u6a21\u68c0\u6d4b\u8d85\u7ea7\u4f20\u64ad\u8005\u7684\u95ee\u9898\u3002\u8bba\u6587\u63d0\u51faSpreadSketch\uff0c\u8fd9\u662f\u4e00\u79cd\u53ef\u9006\u7684\u8349\u56fe\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u7f51\u7edc\u8303\u56f4\u7684\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\u68c0\u6d4b\uff0c\u5e76\u5728\u5185\u5b58\u7a7a\u95f4\uff0c\u6027\u80fd\u548c\u51c6\u786e\u6027\u65b9\u9762\u63d0\u4f9b\u4e86\u7406\u8bba\u4e0a\u7684\u4fdd\u8bc1\u3002SpreadSketch\u8ddf\u8e2a\u5019\u9009\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\uff0c\u5e76\u5c06\u4f30\u8ba1\u7684\u6247\u51fa\u6269\u5c55\u5d4c\u5165\u5c0f\u578b\u548c\u9759\u6001\u5185\u5b58\u7a7a\u95f4\u5185\u7684\u4e8c\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\u4e2d\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5408\u5e76\u591a\u4e2aSpreadSketch\u5b9e\u4f8b\uff0c\u4ee5\u63d0\u4f9b\u6574\u4e2a\u7f51\u7edc\u7684\u6d4b\u91cf\u89c6\u56fe\uff0c\u4ee5\u6062\u590d\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\u53ca\u5176\u4f30\u8ba1\u7684\u6247\u51fa\u3002 \u8bc4\u4f30\u8868\u660e\uff0cSpreadSketch\u4e0e\u6700\u65b0\u7684\u8349\u56fe\u76f8\u6bd4\uff0c\u5177\u6709\u66f4\u9ad8\u7684\u51c6\u786e\u6027\u548c\u6027\u80fd\u3002 Garegin Grigoryan et al.: 2018. LAMP: prompt layer 7 attack mitigation with programmable data planes. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 158\u2013159. openflow LAMP\uff0c\u5373\u5177\u6709\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u7b2c7\u5c42\u653b\u51fb\u7f13\u89e3\u3002 LAMP\u8ddf\u8e2a\u8fdb\u5165\u53d7\u653b\u51fb\u7f51\u7edc\u7684\u6bcf\u4e2a\u6d41\u7684\u8def\u5f84\u3002\u5982\u679c\u6700\u7ec8\u4e3b\u673a\u5e94\u7528\u7a0b\u5e8f\u68c0\u6d4b\u5230\u5165\u4fb5\u4f01\u56fe\uff0c\u5219\u4f1a\u901a\u8fc7\u5728\u4fe1\u53f7\u5305\u7684IP\u9009\u9879\u5b57\u6bb5\u4e2d\u5d4c\u5165\u4fe1\u53f7\u6807\u5fd7\u548c\u653b\u51fb\u8005\u7684IP\u5730\u5740\u6765\u751f\u6210\u653b\u51fb\u8b66\u62a5\u3002 \u5047\u5b9a\u6b64\u7c7b\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u4fee\u6539\u8b66\u62a5\u6d88\u606f\u7684IP\u6570\u636e\u5305\u5b57\u6bb5\u7684\u7279\u6743\u3002 \u8b66\u62a5\u5c06\u76f4\u63a5\u53d1\u9001\u5230\u6700\u8fd1\u7684\u4ea4\u6362\u673a\uff0c\u8be5\u4ea4\u6362\u673a\u6700\u7ec8\u5c06\u6570\u636e\u5305\u8f6c\u53d1\u5230\u627f\u8f7d\u539f\u59cb\u6076\u610f\u6d41\u91cf\u7684\u5165\u53e3\u4ea4\u6362\u673a\u3002 \u6536\u5230\u8b66\u62a5\u540e\uff0c\u5165\u53e3\u4ea4\u6362\u673a\u5c06\u4fee\u6539\u5176\u6d41\u63a7\u5236\u7b56\u7565\uff0c\u4ee5\u963b\u6b62\u6765\u81ea\u653b\u51fb\u8005\u7684\u540e\u7eed\u6d41\u91cf\u3002 \u8fd9\u4e2a\u7f13\u89e3\u7b56\u7565\u81f3\u5c11\u5177\u6709\u4e09\u4e2a\u4f18\u70b9\uff1a\uff081\uff09\u5b83\u4f7f\u7f51\u7edc\u8303\u56f4\u5185\u7684\u534f\u4f5c\u68c0\u6d4b\u548c\u653b\u51fb\u7f13\u89e3\u6210\u4e3a\u53ef\u80fd\u3002 \u7ec8\u7aef\u4e3b\u673a\u83b7\u5f97\u7684\u68c0\u6d4b\u7ed3\u679c\u53ef\u4ee5\u91cd\u65b0\u7528\u4e8e\u6574\u4e2a\u7f51\u7edc\u7684\u670d\u52a1\uff1b \uff082\uff09\u7531\u4e8e\u7f51\u7edc\u8fb9\u7f18\u8fc5\u901f\u963b\u585e\u4e86\u7f51\u7edc\u5185\u6076\u610f\u6d41\u91cf\uff0c\u7f51\u7edc\u5185\u6076\u610f\u6d41\u91cf\u5927\u5927\u51cf\u5c11\u4e86\uff1b \uff083\uff09\u4e0e\u73b0\u6709\u7684SDN\u65b9\u6cd5\u76f8\u6bd4\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u8f7b\u91cf\u548c\u9ad8\u6548\u7684\u7f51\u7edc\u64cd\u4f5c\uff0c\u5728\u73b0\u6709\u7684SDN\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981SDN\u63a7\u5236\u5668\u6765\u5f25\u5408\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7edc\u5c42\u670d\u52a1\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002 Jan Ku\u010dera et al.: 2018. Hardware acceleration of intrusion detection systems for high-speed networks. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 177\u2013178. programmable data plane \u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\uff08IDS\uff09\u662f\u4fdd\u62a4\u8ba1\u7b97\u673a\u7f51\u7edc\u5b89\u5168\u7684\u6d41\u884c\u6280\u672f\u4e4b\u4e00\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u7684\u9ad8\u8ba1\u7b97\u590d\u6742\u6027\u4f7f\u5176\u96be\u4ee5\u6ee1\u8db3\u73b0\u4ee3\u9ad8\u901f\u7f51\u7edc\u7684\u6027\u80fd\u76ee\u6807\u3002\u672c\u6587\u65e8\u5728\u901a\u8fc7\u4fe1\u606f\u5305\u4e22\u5f03\u6765\u52a0\u901fIDS\u3002\u5c06IDS\u53ef\u7528\u7684\u6709\u9650\u8ba1\u7b97\u8d44\u6e90\u4ec5\u96c6\u4e2d\u4e8e\u4f20\u5165\u6d41\u91cf\u4e2d\u6700\u76f8\u5173\u7684\u90e8\u5206\uff0c\u5e76\u5c06\u5176\u4f59\u90e8\u5206\u5378\u8f7d\uff08\u7ed5\u8fc7\uff09\u3002\u8bba\u6587\u8868\u660e\uff0c\u8fd9\u79cd\u5bf9\u5b9a\u4e49\u660e\u786e\u7684\u6d41\u91cf\u90e8\u5206\u7684\u63a7\u5236\uff08\u77e5\u60c5\uff09\u4e22\u5f03\u76f8\u8f83\u8f6f\u4ef6\u548cFPGA\u52a0\u901f\u7684\u4e22\u5f03\u5b9e\u73b0\uff0c\u6709\u52a9\u4e8eIDS\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 S. Sun et al.: \"Detecting and Mitigating ARP Attacks in SDN-Based Cloud Environment,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 2020, pp. \u4e91\u8ba1\u7b97\u7f51\u7edc\u975e\u5e38\u9700\u8981\u5b89\u5168\u6027\uff0c\u4fdd\u62a4\u4e91\u73af\u5883\u514d\u53d7\u5404\u79cd\u653b\u51fb\u5df2\u6210\u4e3a\u70ed\u95e8\u95ee\u9898\u3002\u672c\u6587\u4e2d\uff0c\u5c06SDN\u5e94\u7528\u4e8e\u4fdd\u62a4\u4e91\u8ba1\u7b97\u7f51\u7edc\u514d\u53d7\u5730\u5740\u89e3\u6790\u534f\u8bae\uff08ARP\uff09\u653b\u51fb\u3002\u5728\u5efa\u8bae\u7684\u65b9\u6cd5\u4e2d\uff0c\u63a7\u5236\u5668\u7fa4\u96c6\u4f1a\u68c0\u6d4b\u4e3b\u673a\u53d1\u9001\u7684ARP\u6570\u636e\u5305\uff0c\u4e3a\u4e86\u627e\u51fa\u4f2a\u9020\u8005\u5e76\u9632\u6b62ARP\u6b3a\u9a97\u653b\u51fb\u3002\u6b64\u5916\uff0c\u63a7\u5236\u5668\u4f1a\u4e0d\u65f6\u76d1\u89c6ARP\u6570\u636e\u5305\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u4ee5\u68c0\u6d4bARP\u6cdb\u6d2a\u653b\u51fb\u3002\u4e00\u65e6\u68c0\u6d4b\u5230\u653b\u51fb\uff0c\u63a7\u5236\u5668\u5c31\u4f1a\u5728\u76f8\u5e94\u7684\u4ea4\u6362\u673a\u4e0a\u5b89\u88c5\u6d41\u6761\u76ee\uff0c\u4ee5\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u963b\u6b62\u6d41\u3002\u5b9e\u9a8c\u8868\u660e\u6b64\u65b9\u6cd5\u53ef\u7528\u4e8e\u68c0\u6d4b\u548c\u7f13\u89e3\u57fa\u4e8eSDN\u7684\u4e91\u73af\u5883\u4e2d\u7684ARP\u653b\u51fb\u3002","title":"\u653b\u51fb\u68c0\u6d4b"},{"location":"Second%20Part/#_3","text":"Jing Guo et al.: 2019. Who limits the resource efficiency of my datacenter: an analysis of Alibaba datacenter traces. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 39, 1\u201310. programmable data plane \u73b0\u4ee3\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u5229\u7528\u7387\u4f4e\u4f1a\u6d6a\u8d39\u5927\u91cf\u786c\u4ef6\u8d44\u6e90\u548c\u57fa\u7840\u67b6\u6784\u6295\u8d44\u3002\u4e3a\u4e86\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u4e00\u79cd\u76f4\u63a5\u7684\u65b9\u6cd5\u662f\u5c06\u4e0d\u540c\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5171\u5b58\u4e8e\u540c\u4e00\u786c\u4ef6\u4e0a\u3002\u4e3a\u4e86\u5f04\u6e05\u8d44\u6e90\u6548\u7387\u5e76\u4e86\u89e3\u4f4d\u4e8e\u540c\u4e00\u5730\u70b9\u7684\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5173\u952e\u7279\u5f81\uff0c\u672c\u6587\u5206\u6790\u4e86\u6765\u81ea\u963f\u91cc\u5df4\u5df4\u751f\u4ea7\u73af\u5883\u4e0b\u76848\u5929trace\uff0c\u5e76\u63ed\u793a\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u4e3b\u8981\u53d1\u73b0\u3002\u9996\u5148\uff0c\u5185\u5b58\u6210\u4e3a\u65b0\u7684\u74f6\u9888\uff0c\u5e76\u9650\u5236\u4e86\u963f\u91cc\u5df4\u5df4\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u6548\u7387\u3002\u5176\u6b21\uff0c\u4e3a\u4e86\u4fdd\u62a4\u5173\u952e\u5ef6\u8fdf\u5e94\u7528\u7a0b\u5e8f\uff0c\u6279\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u88ab\u89c6\u4e3a\u7b2c\u4e8c\u7b49\u516c\u6c11\uff0c\u5e76\u4e14\u88ab\u9650\u5236\u4f7f\u7528\u6709\u9650\u7684\u8d44\u6e90\u3002\u7b2c\u4e09\uff0c\u8d85\u8fc790\uff05\u7684\u5ef6\u8fdf\u5173\u952e\u578b\u5e94\u7528\u7a0b\u5e8f\u662f\u7528Java\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u7684\u3002\u5927\u91cf\u72ec\u7acb\u7684JVM\u8fdb\u4e00\u6b65\u4f7f\u8d44\u6e90\u7ba1\u7406\u590d\u6742\u5316\uff0c\u5e76\u9650\u5236\u4e86\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u6548\u7387\u3002 Ran Ben Basat et al.: 2019. Q-MAX: A Unified Scheme for Improving Network Measurement Throughput. In Proceedings of the Internet Measurement Conference ( IMC \u201919 ). Association for Computing Machinery, New York, NY, USA, 322\u2013336. keyword\uff1aNetwork algorithms \u7ebf\u901f\u8fd0\u884c\u7684\u6d4b\u91cf\u5e94\u7528\u662f\u7f51\u7edc\u6d4b\u91cf\u9886\u57df\u7684\u91cd\u5927\u6311\u6218\u3002\u672c\u6587\u901a\u8fc7\u63d0\u4f9b\u4e00\u79cd\u6539\u5584\u5404\u79cd\u7f51\u7edc\u7b97\u6cd5\u66f4\u65b0\u65f6\u95f4\u7684\u7edf\u4e00\u673a\u5236\u6765\u5e94\u5bf9\u8fd9\u4e00\u6311\u6218\u3002\u901a\u8fc7\u8bc6\u522b\uff0c\u7814\u7a76\u548c\u4f18\u5316\u79f0\u4e3aq-MAX\u7684\u5e38\u89c1\u7b97\u6cd5\u6a21\u5f0f\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u76ee\u6807\u662f\u4fdd\u6301\u6570\u636e\u5305\u6d41\u4e2d\u7684\u6700\u5927q\u503c\u3002\u8bba\u6587\u5bf9\u6b64\u95ee\u9898\u8fdb\u884c\u6b63\u5f0f\u5206\u6790\uff0c\u5e76\u4ecb\u7ecd\u95f4\u9694\u548c\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5177\u6709\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6052\u5b9a\u66f4\u65b0\u65f6\u95f4\u3002\u7ed3\u8bba\u8bc1\u660e\uff0c\u4e0e\u5e93\u7b97\u6cd5\u76f8\u6bd4\uff0cq-MAX\u7b97\u6cd5\u6267\u884cX20\u7684\u901f\u5ea6\u5feb\u5f97\u591a\uff0c\u5728\u771f\u5b9e\u7684\u7f51\u7edc\u8f68\u8ff9\u4e0a\uff0c\u541e\u5410\u91cf\u6700\u591a\u53ef\u63d0\u9ad8X12\u3002\u5b9e\u9a8c\u5728\u6700\u5148\u8fdb\u7684\u865a\u62df\u4ea4\u6362\u673aOpen vSwitch\u4e2d\u5b9e\u73b0\u4e86\u8be5\u65b9\u6848\u3002","title":"\u6d41\u91cf\u5206\u6790"},{"location":"Third%20Part/","text":"Third Part Wendi Feng et al.: Enhancing Security with Programmable Data plane Enabled Hybrid SDN, ACM International Conference on Emerging Networking Experiments and Technologies.2019 In this paper, they propose Cl\u00e9, a programmable dataplane (PD) enabled hybrid SDN security enhancement solution. Cl\u00e9 consists of a smart algorithm to select LSes to upgrade, a unified controller that automatically \"attracts\" traffic to programmable SDN switches, and the security network functions combined PD that can directly detect and mitigate threats without degrading the performance. \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u53ef\u7f16\u7a0b\u6570\u636e\u901a\u9053(PD)\u7684\u6df7\u5408\u578b SDN \u5b89\u5168\u589e\u5f3a\u89e3\u51b3\u65b9\u6848 cl\u00e9\u3002Cl\u00e9 \u5305\u62ec\u4e00\u4e2a\u667a\u80fd\u7b97\u6cd5\u6765\u9009\u62e9\u8981\u5347\u7ea7\u7684 lse\uff0c\u4e00\u4e2a\u7edf\u4e00\u7684\u63a7\u5236\u5668\u81ea\u52a8\u201c\u5438\u5f15\u201d\u6d41\u91cf\u5230\u53ef\u7f16\u7a0b SDN \u4ea4\u6362\u673a\uff0c\u4ee5\u53ca\u5b89\u5168\u7f51\u7edc\u529f\u80fd\u7ed3\u5408 PD\uff0c\u53ef\u4ee5\u76f4\u63a5\u68c0\u6d4b\u548c\u51cf\u8f7b\u5a01\u80c1\uff0c\u800c\u4e0d\u4f1a\u964d\u4f4e\u6027\u80fd\u3002 Chanhee Lee et al.: A New Framework For Detecting Malicious SDN Applications. International Conference on Network Protocols.2018 In this paper, we propose a novel system, called Indago, which statically analyzes SDN applications to model their behavioral profiles, and finally, it automatically detects malicious SDN applications with a machine learning approach. \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aIndago\u7684\u7cfb\u7edf,\u8be5\u7cfb\u7edf\u9759\u6001\u5206\u6790SDN\u5e94\u7528\u7a0b\u5e8f\u7684\u884c\u4e3a\u7279\u5f81,\u6700\u540e\u91c7\u7528\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\u81ea\u52a8\u68c0\u6d4b\u6076\u610fSDN\u5e94\u7528 Cheng Zhang et al.: P4DB: On-the-fly Debugging of the Programmable Data Plane, International Conference on Network Protocols.2017 This paper is devoted to on-the-fly debugging of runtime bugs for programmable data planes. they propose P4DB, a general debugging platform that empowers operators to debug P4 programs in three levels of visibility with rich primitives. By P4DB, operators can use the watch primitive to quickly narrow the debugging scope from the network level or the device level to the table level, then use the break and next primitives to decompose match-action tables and finely locate bugs\u3002 \u672c\u6587\u81f4\u529b\u4e8e\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u8fd0\u884c\u65f6\u9519\u8bef\u7684\u52a8\u6001\u8c03\u8bd5\u3002\u4ed6\u4eec\u63d0\u51fa\u4e86P4DB\uff0c\u8fd9\u662f\u4e00\u4e2a\u901a\u7528\u7684\u8c03\u8bd5\u5e73\u53f0\uff0c\u5141\u8bb8\u64cd\u4f5c\u5458\u4f7f\u7528\u4e30\u5bcc\u7684\u539f\u8bed\u5728\u4e09\u4e2a\u53ef\u89c1\u6027\u7ea7\u522b\u4e0a\u8c03\u8bd5P4\u7a0b\u5e8f\u3002\u901a\u8fc7P4DB\uff0c\u64cd\u4f5c\u5458\u53ef\u4ee5\u4f7f\u7528WATCH\u539f\u8bed\u5feb\u901f\u5c06\u8c03\u8bd5\u8303\u56f4\u4ece\u7f51\u7edc\u7ea7\u6216\u8bbe\u5907\u7ea7\u7f29\u5c0f\u5230\u8868\u7ea7\uff0c\u7136\u540e\u4f7f\u7528Break\u548cNext\u539f\u8bed\u5206\u89e3\u5339\u914d\u64cd\u4f5c\u8868\u5e76\u7cbe\u786e\u5b9a\u4f4d\u9519\u8bef\u3002 Benjamin E. Ujcich et al.: Automated Discovery ofCross-Plane Event-Based Vulnerabilities in Software- Defined Networking. ISOC Network and Distributed System Security Symposium.2020 They present EVENTSCOPE, a vulnerability detection tool that automatically analyzes SDN control plane event usage, discovers candidate vulnerabilities based on missing event-handling routines, and validates vulnerabilities based on data plane effects. \u4ed6\u4eec\u4ecb\u7ecd\u4e86EVENTSCOPE\uff0c\u8fd9\u662f\u4e00\u4e2a\u6f0f\u6d1e\u68c0\u6d4b\u5de5\u5177\uff0c\u81ea\u52a8\u5206\u6790SDN\u63a7\u5236\u5e73\u9762\u4e8b\u4ef6\u4f7f\u7528\u60c5\u51b5\uff0c\u53d1\u73b0\u57fa\u4e8e\u4e22\u5931\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u7684\u5019\u9009\u6f0f\u6d1e\u5e76\u6839\u636e\u6570\u636e\u5e73\u9762\u5f71\u54cd\u9a8c\u8bc1\u6f0f\u6d1e Menghao Zhang et al.: Poseidon: Mitigating Volumetric DDoS Attacks with Programmable Switches. ISOC Network and Distributed System Security Symposium.2020 In this paper, they propose POSEIDON, a system that addresses these limitations in today\u2019s DDoS defense. It leverages emerging programmable switches, which can be reconfigured in the field without additional hardware upgrade. Users of POSEIDON can specify their defense strategies in a modular fashion in the form of a set of defense primitives. \u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86Poseidon\uff0c\u8fd9\u662f\u4e00\u4e2a\u89e3\u51b3\u5f53\u4ecaDDoS\u9632\u5fa1\u4e2d\u8fd9\u4e9b\u5c40\u9650\u6027\u7684\u7cfb\u7edf\u3002\u5b83\u5229\u7528\u65b0\u5174\u7684\u53ef\u7f16\u7a0b\u4ea4\u6362\u673a\uff0c\u65e0\u9700\u989d\u5916\u7684\u786c\u4ef6\u5347\u7ea7\u5373\u53ef\u73b0\u573a\u91cd\u65b0\u914d\u7f6e\u3002Poseidon\u7684\u7528\u6237\u53ef\u4ee5\u4ee5\u4e00\u7ec4\u9632\u5fa1\u539f\u8bed\u7684\u5f62\u5f0f\u4ee5\u6a21\u5757\u5316\u65b9\u5f0f\u6307\u5b9a\u4ed6\u4eec\u7684\u9632\u5fa1\u7b56\u7565 Jiahao Cao et al.: When Match Fields Do Not Need to Match: Buffered Packets Hijacking in SDN, ISOC Network and Distributed System Security Symposium.2020 In this paper, they identify a new vulnerability on flow rule installation in SDN, namely, buffered packet hijacking, which can be exploited by malicious applications to launch effective attacks bypassing all existing defense systems. The root cause of this vulnerability lies in that SDN systems do not check the inconsistency between buffer IDs and match fields when an application attempts to install flow rules. Thus, a malicious application can manipulate buffer IDs to hijack buffered packets even though they do not match any installed flow rules\u3002 \u5728\u672c\u6587\u4e2d,\u6211\u4eec\u53d1\u73b0SDN\u4e2d\u7684\u6d41\u89c4\u5219\u5b89\u88c5\u5b58\u5728\u4e00\u4e2a\u65b0\u7684\u6f0f\u6d1e,\u5373\u7f13\u51b2\u5305\u52ab\u6301,\u5b83\u53ef\u4ee5\u88ab\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\u5229\u7528,\u4ece\u800c\u7ed5\u8fc7\u6240\u6709\u73b0\u6709\u7684\u9632\u5fa1\u7cfb\u7edf\u53d1\u8d77\u6709\u6548\u7684\u653b\u51fb\u3002\u9020\u6210\u6b64\u6f0f\u6d1e\u7684\u6839\u672c\u539f\u56e0\u5728\u4e8e\u5f53\u5e94\u7528\u7a0b\u5e8f\u8bd5\u56fe\u5b89\u88c5\u6d41\u89c4\u5219\u65f6,SDN\u7cfb\u7edf\u4e0d\u4f1a\u68c0\u67e5\u7f13\u51b2\u533aID\u548c\u5339\u914d\u5b57\u6bb5\u4e4b\u95f4\u7684\u4e0d\u4e00\u81f4\u6027\u3002\u56e0\u6b64,\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u64cd\u7eb5\u7f13\u51b2\u533aID\u6765\u52ab\u6301\u7f13\u51b2\u6570\u636e\u5305,\u5373\u4f7f\u5b83\u4eec\u4e0d\u5339\u914d\u4efb\u4f55\u5df2\u5b89\u88c5\u7684\u6d41\u89c4\u5219\u3002 Qiao Kang et al.: Programmable In-Network Security for Context-aware BYOD Policies. Usenix Security Symposium.2020 They present a new paradigm, programmable in-network security (Poise), which is enabled by the emergence of programmable switches. At the heart of Poise is a novel security primitive, which can be programmed to support a wide range of context-aware policies in hardware. Users of Poise specify concise policies, and Poise compiles them into different configurations of the primitive in P4. Compared with traditional SDN defenses, Poise is resilient to control plane saturation attacks, and it dramatically increases defense agility. \u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8303\u4f8b\uff0c\u7f51\u7edc\u5185\u53ef\u7f16\u7a0b\u5b89\u5168(Poise) \uff0c\u5b83\u662f\u7531\u53ef\u7f16\u7a0b\u4ea4\u6362\u5668\u7684\u51fa\u73b0\u800c\u5b9e\u73b0\u7684\u3002Poise \u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u65b0\u9896\u7684\u5b89\u5168\u539f\u8bed\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u6765\u652f\u6301\u5404\u79cd\u786c\u4ef6\u4e0a\u4e0b\u6587\u611f\u77e5\u7b56\u7565\u3002Poise \u7684\u7528\u6237\u6307\u5b9a\u7b80\u660e\u7684\u7b56\u7565\uff0c\u5e76\u5c06\u5b83\u4eec\u7f16\u8bd1\u6210 P4\u4e2d\u539f\u8bed\u7684\u4e0d\u540c\u914d\u7f6e\u3002\u4e0e\u4f20\u7edf\u7684 SDN \u9632\u5fa1\u7cfb\u7edf\u76f8\u6bd4\uff0c\u201c\u6cf0\u8861\u201d\u5177\u6709\u8f83\u5f3a\u7684\u6297\u9971\u548c\u653b\u51fb\u80fd\u529b\uff0c\u5e76\u663e\u8457\u63d0\u9ad8\u4e86\u9632\u5fa1\u7075\u6d3b\u6027\u3002 Jiahao Cao et al.\uff1aThe CrossPath Attack: Disrupting the SDN Control Channel via Shared Links CrossPath. Usenix Security Symposium.2019 For the first time in the literature, they propose the CrossPath attack that disrupts the SDN control channel by exploiting the shared links in paths of control traffic and data traffic. In this attack, crafted data traffic can implicitly disrupt the forwarding of control traffic in the shared links \u5728\u6587\u732e\u4e2d\uff0c\u4ed6\u4eec\u9996\u6b21\u63d0\u51fa\u4e86\u901a\u8fc7\u5229\u7528\u63a7\u5236\u6d41\u91cf\u548c\u6570\u636e\u6d41\u91cf\u8def\u5f84\u4e2d\u7684\u5171\u4eab\u94fe\u8def\u6765\u5e72\u6270 SDN \u63a7\u5236\u4fe1\u9053\u7684\u4ea4\u53c9\u8def\u5f84\u653b\u51fb\u3002\u5728\u8fd9\u79cd\u653b\u51fb\u4e2d\uff0c\u7cbe\u5fc3\u5236\u4f5c\u7684\u6570\u636e\u6d41\u53ef\u80fd\u4f1a\u9690\u5f0f\u7834\u574f\u5171\u4eab\u94fe\u8def\u4e2d\u63a7\u5236\u6d41\u91cf\u7684\u8f6c\u53d1 Taejune et al.: DPX: Data-Plane eXtensions for SDN Security Service Instantiation. Detection of Intrusions and Malware & Vulnerability Assessment.2019 they propose a new SDN-based data plane architecture called DPX that natively supports security services as a set of abstract security actions that are then translated to OpenFlow rule sets\u3002 \u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u57fa\u4e8eSDN\u7684\u6570\u636e\u5e73\u9762\u67b6\u6784\uff0c\u79f0\u4e3aDPX\uff0c\u5b83\u5c06\u5b89\u5168\u670d\u52a1\u4f5c\u4e3a\u4e00\u7ec4\u62bd\u8c61\u7684\u5b89\u5168\u64cd\u4f5c\u8fdb\u884c\u539f\u751f\u652f\u6301\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u62bd\u8c61\u7684\u5b89\u5168\u64cd\u4f5c\u8f6c\u6362\u4e3aOpenFlow\u89c4\u5219\u96c6\u3002 Steven R. Gomez et al.: Controller-Oblivious Dynamic Access Control in Software-Defined Networks. The International Conference on Dependable Systems and Networks.2019 Conventional network access control approaches are static.Such systems are unable to meaningfully stop or hinder motivated attackers seeking to spread throughout an enterprise network. To address this threat, they present Dynamic Flow Isolation (DFI), a novel architecture for supporting dynamic, fine-grained access control policies enforced in a Software-Defined Network (SDN). \u4f20\u7edf\u7684\u7f51\u7edc\u8bbf\u95ee\u63a7\u5236\u65b9\u6cd5\u662f\u9759\u6001\u7684\uff0c\u8fd9\u6837\u7684\u7cfb\u7edf\u4e0d\u80fd\u6709\u6548\u5730\u963b\u6b62\u6216\u963b\u6b62\u4f01\u56fe\u5728\u6574\u4e2a\u4f01\u4e1a\u7f51\u7edc\u4e2d\u4f20\u64ad\u7684\u6709\u52a8\u673a\u7684\u653b\u51fb\u8005\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u4e00\u5a01\u80c1\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u52a8\u6001\u6d41\u9694\u79bb(DFI)\uff0c\u8fd9\u662f\u4e00\u79cd\u65b0\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u7528\u4e8e\u652f\u6301\u5728\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(SDN)\u4e2d\u5b9e\u65bd\u7684\u52a8\u6001\u3001\u7ec6\u7c92\u5ea6\u8bbf\u95ee\u63a7\u5236\u7b56\u7565\u3002 Richard Skowyra et al.: Effective Topology Tampering Attacks and Defenses in Software-Defined Networks. The International Conference on Dependable Systems and Networks.2018 As Software-Defined Networking has gained increasing prominence, new attacks have been demonstrated which can corrupt the SDN controller's view of network topology.In this paper, we analyze two such defenses, TopoGuard and Sphinx, and present two new attacks, Port Probing and Port Amnesia, that can successfully bypass them. We then develop and present extensions to TopoGuard to make it resilient to such attacks. \u968f\u7740\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(Software-Defined Networking)\u7684\u65e5\u76ca\u7a81\u51fa\uff0c\u51fa\u73b0\u4e86\u7834\u574fSDN\u63a7\u5236\u5668\u7f51\u7edc\u62d3\u6251\u89c6\u56fe\u7684\u65b0\u653b\u51fb\uff0c\u672c\u6587\u5206\u6790\u4e86TopGuard\u548cSphinx\u8fd9\u4e24\u79cd\u9632\u5fa1\u65b9\u5f0f\uff0c\u63d0\u51fa\u4e86\u4e24\u79cd\u53ef\u4ee5\u6210\u529f\u7ed5\u8fc7\u5b83\u4eec\u7684\u65b0\u653b\u51fb\u65b9\u5f0f\uff0c\u5373\u7aef\u53e3\u63a2\u6d4b\u653b\u51fb\u548c\u7aef\u53e3\u5931\u5fc6\u653b\u51fb\u3002\u7136\u540e\uff0c\u6211\u4eec\u5f00\u53d1\u5e76\u63d0\u4f9b\u5bf9TopGuard\u7684\u6269\u5c55\uff0c\u4ee5\u4f7f\u5176\u5bf9\u6b64\u7c7b\u653b\u51fb\u5177\u6709\u5f39\u6027 Amir Alimohammadifar et al.: Stealthy Probing-Based Verification (SPV): An Active Approach to Defending Software Defined Networks Against Topology Poisoning Attacks. European Symposium on Research in Computer Security.2018 rcently discovered vulnerabilities in OpenFlow Discovery Protocol (OFDP) show that malicious hosts and switches can poison the network view of the SDN controller and consequently lead to more severe security attacks, such as man-in-the-middle or denial of service. Existing solutions mostly rely on passive techniques, which only work for known attacking methods. In this paper, we propose a novel stealthy probing-based verification approach, namely, SPV, to detect fake links regardless of the attacking methods used to fabricate them. \u6700\u8fd1\u53d1\u73b0\u7684OpenFlow\u53d1\u73b0\u534f\u8bae(OFDP)\u4e2d\u7684\u6f0f\u6d1e\u8868\u660e,\u6076\u610f\u4e3b\u673a\u548c\u4ea4\u6362\u673a\u4f1a\u6bd2\u5bb3SDN\u63a7\u5236\u5668\u7684\u7f51\u7edc\u89c6\u56fe,\u4ece\u800c\u5bfc\u81f4\u66f4\u4e25\u91cd\u7684\u5b89\u5168\u653b\u51fb,\u5982\u4e2d\u95f4\u4eba\u6216\u62d2\u7edd\u670d\u52a1\u3002\u73b0\u6709\u7684\u89e3\u51b3\u65b9\u6848\u5927\u591a\u4f9d\u9760\u88ab\u52a8\u6280\u672f,\u800c\u88ab\u52a8\u6280\u672f\u53ea\u9002\u7528\u4e8e\u5df2\u77e5\u7684\u653b\u51fb\u65b9\u6cd5\u3002\u5728\u672c\u6587\u4e2d,\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u57fa\u4e8e\u9690\u8eab\u63a2\u6d4b\u7684\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u5373SPV\uff0c\u7528\u4e8e\u68c0\u6d4b\u5047\u94fe\u8def\uff0c\u800c\u4e0d\u8003\u8651\u7528\u6765\u5236\u9020\u5047\u94fe\u8def\u7684\u653b\u51fb\u65b9\u6cd5 Nicolae Paladi et al.: Trust Anchors in Software Defined Networks. European Symposium on Research in Computer Security.2018 Often, software network elements are either themselves vulnerable to software attacks or can be compromised through the bloated trusted computing base. To address this, we protect the core security assets of network elements - authentication credentials and cryptographic context - by provisioning them to and maintaining them exclusively in isolated execution environments \u901a\u5e38\uff0c\u8f6f\u4ef6\u7f51\u5143\u672c\u8eab\u8981\u4e48\u5bb9\u6613\u53d7\u5230\u8f6f\u4ef6\u653b\u51fb\uff0c\u8981\u4e48\u4f1a\u901a\u8fc7\u81c3\u80bf\u7684\u53ef\u4fe1\u8ba1\u7b97\u57fa\u7840\u53d7\u5230\u5a01\u80c1\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u6211\u4eec\u4fdd\u62a4\u7f51\u7edc\u5143\u7d20\u7684\u6838\u5fc3\u5b89\u5168\u8d44\u4ea7(\u8eab\u4efd\u9a8c\u8bc1\u51ed\u636e\u548c\u52a0\u5bc6\u4e0a\u4e0b\u6587)\uff0c\u65b9\u6cd5\u662f\u5c06\u5b83\u4eec\u914d\u7f6e\u5230\u9694\u79bb\u6267\u884c\u73af\u5883\u4e2d\u5e76\u4ee5\u72ec\u5360\u65b9\u5f0f\u8fdb\u884c\u7ef4\u62a4 Kallol Krishna Karmakar et al.: Towards a Dynamic Policy Enhanced Integrated Security Architecture for SDN Infrastructure. IFIP/IEEE International Symposium on Integrated Network Management.2020 This paper focuses on the design and implementation of an integrated security architecture for SDN based enterprise networks. The integrated security architecture uses a policy-based approach to coordinate different security mechanisms to detect and counteract a range of security attacks in the SDN \u672c\u6587\u91cd\u70b9\u7814\u7a76\u4e86\u4e00\u79cd\u57fa\u4e8eSDN\u7684\u4f01\u4e1a\u7f51\u7edc\u7efc\u5408\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u3002\u96c6\u6210\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u4f7f\u7528\u57fa\u4e8e\u7b56\u7565\u7684\u65b9\u6cd5\u6765\u534f\u8c03\u4e0d\u540c\u7684\u5b89\u5168\u673a\u5236\uff0c\u4ee5\u68c0\u6d4b\u548c\u5bf9\u6297SDN\u4e2d\u7684\u4e00\u7cfb\u5217\u5b89\u5168\u653b\u51fb Iman Akbari et al.: ATMoS: Autonomous Threat Mitigation in SDN using Reinforcement Learning. IFIP/IEEE International Symposium on Integrated Network Management.2020 In this paper, we propose ATMoS, a general framework designed to facilitate the rapid design of RL applications for network security management using SDN. We evaluate our framework for implementing RL applications for threat mitigation, by showcasing the use of ATMoS with a Neural Fitted Q-learning agent to mitigate an Advanced Persistent Threat. \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86Atmos\uff0c\u8fd9\u662f\u4e00\u4e2a\u901a\u7528\u6846\u67b6\uff0c\u65e8\u5728\u4fc3\u8fdb\u4f7f\u7528SDN\u5feb\u901f\u8bbe\u8ba1\u7528\u4e8e\u7f51\u7edc\u5b89\u5168\u7ba1\u7406\u7684RL\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u4eec\u901a\u8fc7\u5c55\u793aAtmos\u4e0e\u795e\u7ecf\u9002\u914dQ-Learning\u4ee3\u7406\u7684\u4f7f\u7528\u6765\u7f13\u89e3\u9ad8\u7ea7\u6301\u7eed\u6027\u5a01\u80c1\uff0c\u6765\u8bc4\u4f30\u6211\u4eec\u5b9e\u65bdRL\u5e94\u7528\u7a0b\u5e8f\u4ee5\u7f13\u89e3\u5a01\u80c1\u7684\u6846\u67b6 \u00c2ngelo Cardoso Lapolli et al.: Offloading Real-time DDoS Attack Detection to Programmable Data Planes. FIP/IEEE International Symposium on Integrated Network Management.2019 In recent years, Distributed Denial-of-Service (DDoS) attacks have escalated both in frequency and traffic volume, with outbreaks reaching rates up to the order of terabits per second and compromising the availability of supposedly highly resilient infrastructure, Data plane programmability has emerged as a promising approach to help meeting these requirements as forwarding devices can be configured to execute algorithms and examine traffic at line rate. In this paper, we explore P4 primitives to design a fine-grained, low-footprint, and low-latency traffic inspection mechanism for real-time DDoS attack detection \u8fd1\u5e74\u6765\uff0c\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1(DDoS)\u653b\u51fb\u5728\u9891\u7387\u548c\u901a\u4fe1\u91cf\u4e0a\u90fd\u4e0d\u65ad\u5347\u7ea7\uff0c\u7206\u53d1\u901f\u7387\u9ad8\u8fbe\u6bcf\u79d2\u6bd4\u7279\u6570\u91cf\u7ea7\uff0c\u5e76\u5371\u53ca\u672c\u5e94\u5177\u6709\u9ad8\u5ea6\u5f39\u6027\u7684\u57fa\u7840\u8bbe\u65bd\u7684\u53ef\u7528\u6027\uff0c\u6570\u636e\u5e73\u9762\u53ef\u7f16\u7a0b\u6027\u5df2\u6210\u4e3a\u5e2e\u52a9\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u7684\u4e00\u79cd\u5f88\u6709\u524d\u9014\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8f6c\u53d1\u8bbe\u5907\u53ef\u4ee5\u914d\u7f6e\u4e3a\u4ee5\u7ebf\u901f\u6267\u884c\u7b97\u6cd5\u548c\u68c0\u67e5\u6d41\u91cf\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5229\u7528P4\u539f\u8bed\u6765\u8bbe\u8ba1\u4e00\u79cd\u7ec6\u7c92\u5ea6\u3001\u4f4e\u5360\u7528\u7a7a\u95f4\u3001\u4f4e\u5ef6\u8fdf\u7684\u6d41\u91cf\u68c0\u6d4b\u673a\u5236\uff0c\u7528\u4e8e\u5b9e\u65f6\u68c0\u6d4bDDoS\u653b\u51fb Jiahao Cao et al.: Fingerprinting SDN Applications via Encrypted Control Traffic. International Symposium on Recent Advances in Intrusion Detection.2019 In this paper, we show an adversary can infer what applications run on SDN controllers by analyzing low-level and encrypted control traffic. Such information can help an adversary to identify valuable targets, know the possible presence of network defense, and thus schedule a better plan for a later stage of an attack \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5206\u6790\u4f4e\u7ea7\u548c\u52a0\u5bc6\u7684\u63a7\u5236\u6d41\u91cf\u6765\u63a8\u65ad\u54ea\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5728SDN\u63a7\u5236\u5668\u4e0a\u8fd0\u884c\u3002\u8fd9\u6837\u7684\u4fe1\u606f\u53ef\u4ee5\u5e2e\u52a9\u5bf9\u624b\u8bc6\u522b\u6709\u4ef7\u503c\u7684\u76ee\u6807\uff0c\u4e86\u89e3\u53ef\u80fd\u5b58\u5728\u7684\u7f51\u7edc\u9632\u5fa1\uff0c\u4ece\u800c\u4e3a\u653b\u51fb\u7684\u540e\u671f\u9636\u6bb5\u5236\u5b9a\u66f4\u597d\u7684\u8ba1\u5212 Menghao et al.: Control Plane Reflection Attacks in SDNs: New Attacks and Countermeasures. International Symposium on Recent Advances in Intrusion Detection.2019 In this paper, they present Control Plane Reflection Attacks to exploit the limited processing capability of SDN-enabled hardware switches. Moreover, we propose a two-phase probing-triggering attack strategy to make the reflection attacks much more efficient, stealthy and powerful. \u5728\u672c\u6587\u4e2d\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u63a7\u5236\u5e73\u9762\u53cd\u5c04\u653b\u51fb\uff0c\u4ee5\u5229\u7528\u652f\u6301SDN\u7684\u786c\u4ef6\u4ea4\u6362\u673a\u6709\u9650\u7684\u5904\u7406\u80fd\u529b\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u63d0\u51fa\u4e86\u4e00\u79cd\u4e24\u9636\u6bb5\u63a2\u6d4b-\u89e6\u53d1\u653b\u51fb\u7b56\u7565\uff0c\u4f7f\u53cd\u5c04\u653b\u51fb\u66f4\u52a0\u9ad8\u6548\u3001\u9690\u853d\u548c\u5f3a\u5927\u3002","title":"Third Part"},{"location":"Third%20Part/#third-part","text":"Wendi Feng et al.: Enhancing Security with Programmable Data plane Enabled Hybrid SDN, ACM International Conference on Emerging Networking Experiments and Technologies.2019 In this paper, they propose Cl\u00e9, a programmable dataplane (PD) enabled hybrid SDN security enhancement solution. Cl\u00e9 consists of a smart algorithm to select LSes to upgrade, a unified controller that automatically \"attracts\" traffic to programmable SDN switches, and the security network functions combined PD that can directly detect and mitigate threats without degrading the performance. \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u53ef\u7f16\u7a0b\u6570\u636e\u901a\u9053(PD)\u7684\u6df7\u5408\u578b SDN \u5b89\u5168\u589e\u5f3a\u89e3\u51b3\u65b9\u6848 cl\u00e9\u3002Cl\u00e9 \u5305\u62ec\u4e00\u4e2a\u667a\u80fd\u7b97\u6cd5\u6765\u9009\u62e9\u8981\u5347\u7ea7\u7684 lse\uff0c\u4e00\u4e2a\u7edf\u4e00\u7684\u63a7\u5236\u5668\u81ea\u52a8\u201c\u5438\u5f15\u201d\u6d41\u91cf\u5230\u53ef\u7f16\u7a0b SDN \u4ea4\u6362\u673a\uff0c\u4ee5\u53ca\u5b89\u5168\u7f51\u7edc\u529f\u80fd\u7ed3\u5408 PD\uff0c\u53ef\u4ee5\u76f4\u63a5\u68c0\u6d4b\u548c\u51cf\u8f7b\u5a01\u80c1\uff0c\u800c\u4e0d\u4f1a\u964d\u4f4e\u6027\u80fd\u3002 Chanhee Lee et al.: A New Framework For Detecting Malicious SDN Applications. International Conference on Network Protocols.2018 In this paper, we propose a novel system, called Indago, which statically analyzes SDN applications to model their behavioral profiles, and finally, it automatically detects malicious SDN applications with a machine learning approach. \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aIndago\u7684\u7cfb\u7edf,\u8be5\u7cfb\u7edf\u9759\u6001\u5206\u6790SDN\u5e94\u7528\u7a0b\u5e8f\u7684\u884c\u4e3a\u7279\u5f81,\u6700\u540e\u91c7\u7528\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\u81ea\u52a8\u68c0\u6d4b\u6076\u610fSDN\u5e94\u7528 Cheng Zhang et al.: P4DB: On-the-fly Debugging of the Programmable Data Plane, International Conference on Network Protocols.2017 This paper is devoted to on-the-fly debugging of runtime bugs for programmable data planes. they propose P4DB, a general debugging platform that empowers operators to debug P4 programs in three levels of visibility with rich primitives. By P4DB, operators can use the watch primitive to quickly narrow the debugging scope from the network level or the device level to the table level, then use the break and next primitives to decompose match-action tables and finely locate bugs\u3002 \u672c\u6587\u81f4\u529b\u4e8e\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u8fd0\u884c\u65f6\u9519\u8bef\u7684\u52a8\u6001\u8c03\u8bd5\u3002\u4ed6\u4eec\u63d0\u51fa\u4e86P4DB\uff0c\u8fd9\u662f\u4e00\u4e2a\u901a\u7528\u7684\u8c03\u8bd5\u5e73\u53f0\uff0c\u5141\u8bb8\u64cd\u4f5c\u5458\u4f7f\u7528\u4e30\u5bcc\u7684\u539f\u8bed\u5728\u4e09\u4e2a\u53ef\u89c1\u6027\u7ea7\u522b\u4e0a\u8c03\u8bd5P4\u7a0b\u5e8f\u3002\u901a\u8fc7P4DB\uff0c\u64cd\u4f5c\u5458\u53ef\u4ee5\u4f7f\u7528WATCH\u539f\u8bed\u5feb\u901f\u5c06\u8c03\u8bd5\u8303\u56f4\u4ece\u7f51\u7edc\u7ea7\u6216\u8bbe\u5907\u7ea7\u7f29\u5c0f\u5230\u8868\u7ea7\uff0c\u7136\u540e\u4f7f\u7528Break\u548cNext\u539f\u8bed\u5206\u89e3\u5339\u914d\u64cd\u4f5c\u8868\u5e76\u7cbe\u786e\u5b9a\u4f4d\u9519\u8bef\u3002 Benjamin E. Ujcich et al.: Automated Discovery ofCross-Plane Event-Based Vulnerabilities in Software- Defined Networking. ISOC Network and Distributed System Security Symposium.2020 They present EVENTSCOPE, a vulnerability detection tool that automatically analyzes SDN control plane event usage, discovers candidate vulnerabilities based on missing event-handling routines, and validates vulnerabilities based on data plane effects. \u4ed6\u4eec\u4ecb\u7ecd\u4e86EVENTSCOPE\uff0c\u8fd9\u662f\u4e00\u4e2a\u6f0f\u6d1e\u68c0\u6d4b\u5de5\u5177\uff0c\u81ea\u52a8\u5206\u6790SDN\u63a7\u5236\u5e73\u9762\u4e8b\u4ef6\u4f7f\u7528\u60c5\u51b5\uff0c\u53d1\u73b0\u57fa\u4e8e\u4e22\u5931\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u7684\u5019\u9009\u6f0f\u6d1e\u5e76\u6839\u636e\u6570\u636e\u5e73\u9762\u5f71\u54cd\u9a8c\u8bc1\u6f0f\u6d1e Menghao Zhang et al.: Poseidon: Mitigating Volumetric DDoS Attacks with Programmable Switches. ISOC Network and Distributed System Security Symposium.2020 In this paper, they propose POSEIDON, a system that addresses these limitations in today\u2019s DDoS defense. It leverages emerging programmable switches, which can be reconfigured in the field without additional hardware upgrade. Users of POSEIDON can specify their defense strategies in a modular fashion in the form of a set of defense primitives. \u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86Poseidon\uff0c\u8fd9\u662f\u4e00\u4e2a\u89e3\u51b3\u5f53\u4ecaDDoS\u9632\u5fa1\u4e2d\u8fd9\u4e9b\u5c40\u9650\u6027\u7684\u7cfb\u7edf\u3002\u5b83\u5229\u7528\u65b0\u5174\u7684\u53ef\u7f16\u7a0b\u4ea4\u6362\u673a\uff0c\u65e0\u9700\u989d\u5916\u7684\u786c\u4ef6\u5347\u7ea7\u5373\u53ef\u73b0\u573a\u91cd\u65b0\u914d\u7f6e\u3002Poseidon\u7684\u7528\u6237\u53ef\u4ee5\u4ee5\u4e00\u7ec4\u9632\u5fa1\u539f\u8bed\u7684\u5f62\u5f0f\u4ee5\u6a21\u5757\u5316\u65b9\u5f0f\u6307\u5b9a\u4ed6\u4eec\u7684\u9632\u5fa1\u7b56\u7565 Jiahao Cao et al.: When Match Fields Do Not Need to Match: Buffered Packets Hijacking in SDN, ISOC Network and Distributed System Security Symposium.2020 In this paper, they identify a new vulnerability on flow rule installation in SDN, namely, buffered packet hijacking, which can be exploited by malicious applications to launch effective attacks bypassing all existing defense systems. The root cause of this vulnerability lies in that SDN systems do not check the inconsistency between buffer IDs and match fields when an application attempts to install flow rules. Thus, a malicious application can manipulate buffer IDs to hijack buffered packets even though they do not match any installed flow rules\u3002 \u5728\u672c\u6587\u4e2d,\u6211\u4eec\u53d1\u73b0SDN\u4e2d\u7684\u6d41\u89c4\u5219\u5b89\u88c5\u5b58\u5728\u4e00\u4e2a\u65b0\u7684\u6f0f\u6d1e,\u5373\u7f13\u51b2\u5305\u52ab\u6301,\u5b83\u53ef\u4ee5\u88ab\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\u5229\u7528,\u4ece\u800c\u7ed5\u8fc7\u6240\u6709\u73b0\u6709\u7684\u9632\u5fa1\u7cfb\u7edf\u53d1\u8d77\u6709\u6548\u7684\u653b\u51fb\u3002\u9020\u6210\u6b64\u6f0f\u6d1e\u7684\u6839\u672c\u539f\u56e0\u5728\u4e8e\u5f53\u5e94\u7528\u7a0b\u5e8f\u8bd5\u56fe\u5b89\u88c5\u6d41\u89c4\u5219\u65f6,SDN\u7cfb\u7edf\u4e0d\u4f1a\u68c0\u67e5\u7f13\u51b2\u533aID\u548c\u5339\u914d\u5b57\u6bb5\u4e4b\u95f4\u7684\u4e0d\u4e00\u81f4\u6027\u3002\u56e0\u6b64,\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u64cd\u7eb5\u7f13\u51b2\u533aID\u6765\u52ab\u6301\u7f13\u51b2\u6570\u636e\u5305,\u5373\u4f7f\u5b83\u4eec\u4e0d\u5339\u914d\u4efb\u4f55\u5df2\u5b89\u88c5\u7684\u6d41\u89c4\u5219\u3002 Qiao Kang et al.: Programmable In-Network Security for Context-aware BYOD Policies. Usenix Security Symposium.2020 They present a new paradigm, programmable in-network security (Poise), which is enabled by the emergence of programmable switches. At the heart of Poise is a novel security primitive, which can be programmed to support a wide range of context-aware policies in hardware. Users of Poise specify concise policies, and Poise compiles them into different configurations of the primitive in P4. Compared with traditional SDN defenses, Poise is resilient to control plane saturation attacks, and it dramatically increases defense agility. \u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8303\u4f8b\uff0c\u7f51\u7edc\u5185\u53ef\u7f16\u7a0b\u5b89\u5168(Poise) \uff0c\u5b83\u662f\u7531\u53ef\u7f16\u7a0b\u4ea4\u6362\u5668\u7684\u51fa\u73b0\u800c\u5b9e\u73b0\u7684\u3002Poise \u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u65b0\u9896\u7684\u5b89\u5168\u539f\u8bed\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u6765\u652f\u6301\u5404\u79cd\u786c\u4ef6\u4e0a\u4e0b\u6587\u611f\u77e5\u7b56\u7565\u3002Poise \u7684\u7528\u6237\u6307\u5b9a\u7b80\u660e\u7684\u7b56\u7565\uff0c\u5e76\u5c06\u5b83\u4eec\u7f16\u8bd1\u6210 P4\u4e2d\u539f\u8bed\u7684\u4e0d\u540c\u914d\u7f6e\u3002\u4e0e\u4f20\u7edf\u7684 SDN \u9632\u5fa1\u7cfb\u7edf\u76f8\u6bd4\uff0c\u201c\u6cf0\u8861\u201d\u5177\u6709\u8f83\u5f3a\u7684\u6297\u9971\u548c\u653b\u51fb\u80fd\u529b\uff0c\u5e76\u663e\u8457\u63d0\u9ad8\u4e86\u9632\u5fa1\u7075\u6d3b\u6027\u3002 Jiahao Cao et al.\uff1aThe CrossPath Attack: Disrupting the SDN Control Channel via Shared Links CrossPath. Usenix Security Symposium.2019 For the first time in the literature, they propose the CrossPath attack that disrupts the SDN control channel by exploiting the shared links in paths of control traffic and data traffic. In this attack, crafted data traffic can implicitly disrupt the forwarding of control traffic in the shared links \u5728\u6587\u732e\u4e2d\uff0c\u4ed6\u4eec\u9996\u6b21\u63d0\u51fa\u4e86\u901a\u8fc7\u5229\u7528\u63a7\u5236\u6d41\u91cf\u548c\u6570\u636e\u6d41\u91cf\u8def\u5f84\u4e2d\u7684\u5171\u4eab\u94fe\u8def\u6765\u5e72\u6270 SDN \u63a7\u5236\u4fe1\u9053\u7684\u4ea4\u53c9\u8def\u5f84\u653b\u51fb\u3002\u5728\u8fd9\u79cd\u653b\u51fb\u4e2d\uff0c\u7cbe\u5fc3\u5236\u4f5c\u7684\u6570\u636e\u6d41\u53ef\u80fd\u4f1a\u9690\u5f0f\u7834\u574f\u5171\u4eab\u94fe\u8def\u4e2d\u63a7\u5236\u6d41\u91cf\u7684\u8f6c\u53d1 Taejune et al.: DPX: Data-Plane eXtensions for SDN Security Service Instantiation. Detection of Intrusions and Malware & Vulnerability Assessment.2019 they propose a new SDN-based data plane architecture called DPX that natively supports security services as a set of abstract security actions that are then translated to OpenFlow rule sets\u3002 \u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u57fa\u4e8eSDN\u7684\u6570\u636e\u5e73\u9762\u67b6\u6784\uff0c\u79f0\u4e3aDPX\uff0c\u5b83\u5c06\u5b89\u5168\u670d\u52a1\u4f5c\u4e3a\u4e00\u7ec4\u62bd\u8c61\u7684\u5b89\u5168\u64cd\u4f5c\u8fdb\u884c\u539f\u751f\u652f\u6301\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u62bd\u8c61\u7684\u5b89\u5168\u64cd\u4f5c\u8f6c\u6362\u4e3aOpenFlow\u89c4\u5219\u96c6\u3002 Steven R. Gomez et al.: Controller-Oblivious Dynamic Access Control in Software-Defined Networks. The International Conference on Dependable Systems and Networks.2019 Conventional network access control approaches are static.Such systems are unable to meaningfully stop or hinder motivated attackers seeking to spread throughout an enterprise network. To address this threat, they present Dynamic Flow Isolation (DFI), a novel architecture for supporting dynamic, fine-grained access control policies enforced in a Software-Defined Network (SDN). \u4f20\u7edf\u7684\u7f51\u7edc\u8bbf\u95ee\u63a7\u5236\u65b9\u6cd5\u662f\u9759\u6001\u7684\uff0c\u8fd9\u6837\u7684\u7cfb\u7edf\u4e0d\u80fd\u6709\u6548\u5730\u963b\u6b62\u6216\u963b\u6b62\u4f01\u56fe\u5728\u6574\u4e2a\u4f01\u4e1a\u7f51\u7edc\u4e2d\u4f20\u64ad\u7684\u6709\u52a8\u673a\u7684\u653b\u51fb\u8005\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u4e00\u5a01\u80c1\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u52a8\u6001\u6d41\u9694\u79bb(DFI)\uff0c\u8fd9\u662f\u4e00\u79cd\u65b0\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u7528\u4e8e\u652f\u6301\u5728\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(SDN)\u4e2d\u5b9e\u65bd\u7684\u52a8\u6001\u3001\u7ec6\u7c92\u5ea6\u8bbf\u95ee\u63a7\u5236\u7b56\u7565\u3002 Richard Skowyra et al.: Effective Topology Tampering Attacks and Defenses in Software-Defined Networks. The International Conference on Dependable Systems and Networks.2018 As Software-Defined Networking has gained increasing prominence, new attacks have been demonstrated which can corrupt the SDN controller's view of network topology.In this paper, we analyze two such defenses, TopoGuard and Sphinx, and present two new attacks, Port Probing and Port Amnesia, that can successfully bypass them. We then develop and present extensions to TopoGuard to make it resilient to such attacks. \u968f\u7740\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(Software-Defined Networking)\u7684\u65e5\u76ca\u7a81\u51fa\uff0c\u51fa\u73b0\u4e86\u7834\u574fSDN\u63a7\u5236\u5668\u7f51\u7edc\u62d3\u6251\u89c6\u56fe\u7684\u65b0\u653b\u51fb\uff0c\u672c\u6587\u5206\u6790\u4e86TopGuard\u548cSphinx\u8fd9\u4e24\u79cd\u9632\u5fa1\u65b9\u5f0f\uff0c\u63d0\u51fa\u4e86\u4e24\u79cd\u53ef\u4ee5\u6210\u529f\u7ed5\u8fc7\u5b83\u4eec\u7684\u65b0\u653b\u51fb\u65b9\u5f0f\uff0c\u5373\u7aef\u53e3\u63a2\u6d4b\u653b\u51fb\u548c\u7aef\u53e3\u5931\u5fc6\u653b\u51fb\u3002\u7136\u540e\uff0c\u6211\u4eec\u5f00\u53d1\u5e76\u63d0\u4f9b\u5bf9TopGuard\u7684\u6269\u5c55\uff0c\u4ee5\u4f7f\u5176\u5bf9\u6b64\u7c7b\u653b\u51fb\u5177\u6709\u5f39\u6027 Amir Alimohammadifar et al.: Stealthy Probing-Based Verification (SPV): An Active Approach to Defending Software Defined Networks Against Topology Poisoning Attacks. European Symposium on Research in Computer Security.2018 rcently discovered vulnerabilities in OpenFlow Discovery Protocol (OFDP) show that malicious hosts and switches can poison the network view of the SDN controller and consequently lead to more severe security attacks, such as man-in-the-middle or denial of service. Existing solutions mostly rely on passive techniques, which only work for known attacking methods. In this paper, we propose a novel stealthy probing-based verification approach, namely, SPV, to detect fake links regardless of the attacking methods used to fabricate them. \u6700\u8fd1\u53d1\u73b0\u7684OpenFlow\u53d1\u73b0\u534f\u8bae(OFDP)\u4e2d\u7684\u6f0f\u6d1e\u8868\u660e,\u6076\u610f\u4e3b\u673a\u548c\u4ea4\u6362\u673a\u4f1a\u6bd2\u5bb3SDN\u63a7\u5236\u5668\u7684\u7f51\u7edc\u89c6\u56fe,\u4ece\u800c\u5bfc\u81f4\u66f4\u4e25\u91cd\u7684\u5b89\u5168\u653b\u51fb,\u5982\u4e2d\u95f4\u4eba\u6216\u62d2\u7edd\u670d\u52a1\u3002\u73b0\u6709\u7684\u89e3\u51b3\u65b9\u6848\u5927\u591a\u4f9d\u9760\u88ab\u52a8\u6280\u672f,\u800c\u88ab\u52a8\u6280\u672f\u53ea\u9002\u7528\u4e8e\u5df2\u77e5\u7684\u653b\u51fb\u65b9\u6cd5\u3002\u5728\u672c\u6587\u4e2d,\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u57fa\u4e8e\u9690\u8eab\u63a2\u6d4b\u7684\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u5373SPV\uff0c\u7528\u4e8e\u68c0\u6d4b\u5047\u94fe\u8def\uff0c\u800c\u4e0d\u8003\u8651\u7528\u6765\u5236\u9020\u5047\u94fe\u8def\u7684\u653b\u51fb\u65b9\u6cd5 Nicolae Paladi et al.: Trust Anchors in Software Defined Networks. European Symposium on Research in Computer Security.2018 Often, software network elements are either themselves vulnerable to software attacks or can be compromised through the bloated trusted computing base. To address this, we protect the core security assets of network elements - authentication credentials and cryptographic context - by provisioning them to and maintaining them exclusively in isolated execution environments \u901a\u5e38\uff0c\u8f6f\u4ef6\u7f51\u5143\u672c\u8eab\u8981\u4e48\u5bb9\u6613\u53d7\u5230\u8f6f\u4ef6\u653b\u51fb\uff0c\u8981\u4e48\u4f1a\u901a\u8fc7\u81c3\u80bf\u7684\u53ef\u4fe1\u8ba1\u7b97\u57fa\u7840\u53d7\u5230\u5a01\u80c1\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u6211\u4eec\u4fdd\u62a4\u7f51\u7edc\u5143\u7d20\u7684\u6838\u5fc3\u5b89\u5168\u8d44\u4ea7(\u8eab\u4efd\u9a8c\u8bc1\u51ed\u636e\u548c\u52a0\u5bc6\u4e0a\u4e0b\u6587)\uff0c\u65b9\u6cd5\u662f\u5c06\u5b83\u4eec\u914d\u7f6e\u5230\u9694\u79bb\u6267\u884c\u73af\u5883\u4e2d\u5e76\u4ee5\u72ec\u5360\u65b9\u5f0f\u8fdb\u884c\u7ef4\u62a4 Kallol Krishna Karmakar et al.: Towards a Dynamic Policy Enhanced Integrated Security Architecture for SDN Infrastructure. IFIP/IEEE International Symposium on Integrated Network Management.2020 This paper focuses on the design and implementation of an integrated security architecture for SDN based enterprise networks. The integrated security architecture uses a policy-based approach to coordinate different security mechanisms to detect and counteract a range of security attacks in the SDN \u672c\u6587\u91cd\u70b9\u7814\u7a76\u4e86\u4e00\u79cd\u57fa\u4e8eSDN\u7684\u4f01\u4e1a\u7f51\u7edc\u7efc\u5408\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u3002\u96c6\u6210\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u4f7f\u7528\u57fa\u4e8e\u7b56\u7565\u7684\u65b9\u6cd5\u6765\u534f\u8c03\u4e0d\u540c\u7684\u5b89\u5168\u673a\u5236\uff0c\u4ee5\u68c0\u6d4b\u548c\u5bf9\u6297SDN\u4e2d\u7684\u4e00\u7cfb\u5217\u5b89\u5168\u653b\u51fb Iman Akbari et al.: ATMoS: Autonomous Threat Mitigation in SDN using Reinforcement Learning. IFIP/IEEE International Symposium on Integrated Network Management.2020 In this paper, we propose ATMoS, a general framework designed to facilitate the rapid design of RL applications for network security management using SDN. We evaluate our framework for implementing RL applications for threat mitigation, by showcasing the use of ATMoS with a Neural Fitted Q-learning agent to mitigate an Advanced Persistent Threat. \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86Atmos\uff0c\u8fd9\u662f\u4e00\u4e2a\u901a\u7528\u6846\u67b6\uff0c\u65e8\u5728\u4fc3\u8fdb\u4f7f\u7528SDN\u5feb\u901f\u8bbe\u8ba1\u7528\u4e8e\u7f51\u7edc\u5b89\u5168\u7ba1\u7406\u7684RL\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u4eec\u901a\u8fc7\u5c55\u793aAtmos\u4e0e\u795e\u7ecf\u9002\u914dQ-Learning\u4ee3\u7406\u7684\u4f7f\u7528\u6765\u7f13\u89e3\u9ad8\u7ea7\u6301\u7eed\u6027\u5a01\u80c1\uff0c\u6765\u8bc4\u4f30\u6211\u4eec\u5b9e\u65bdRL\u5e94\u7528\u7a0b\u5e8f\u4ee5\u7f13\u89e3\u5a01\u80c1\u7684\u6846\u67b6 \u00c2ngelo Cardoso Lapolli et al.: Offloading Real-time DDoS Attack Detection to Programmable Data Planes. FIP/IEEE International Symposium on Integrated Network Management.2019 In recent years, Distributed Denial-of-Service (DDoS) attacks have escalated both in frequency and traffic volume, with outbreaks reaching rates up to the order of terabits per second and compromising the availability of supposedly highly resilient infrastructure, Data plane programmability has emerged as a promising approach to help meeting these requirements as forwarding devices can be configured to execute algorithms and examine traffic at line rate. In this paper, we explore P4 primitives to design a fine-grained, low-footprint, and low-latency traffic inspection mechanism for real-time DDoS attack detection \u8fd1\u5e74\u6765\uff0c\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1(DDoS)\u653b\u51fb\u5728\u9891\u7387\u548c\u901a\u4fe1\u91cf\u4e0a\u90fd\u4e0d\u65ad\u5347\u7ea7\uff0c\u7206\u53d1\u901f\u7387\u9ad8\u8fbe\u6bcf\u79d2\u6bd4\u7279\u6570\u91cf\u7ea7\uff0c\u5e76\u5371\u53ca\u672c\u5e94\u5177\u6709\u9ad8\u5ea6\u5f39\u6027\u7684\u57fa\u7840\u8bbe\u65bd\u7684\u53ef\u7528\u6027\uff0c\u6570\u636e\u5e73\u9762\u53ef\u7f16\u7a0b\u6027\u5df2\u6210\u4e3a\u5e2e\u52a9\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u7684\u4e00\u79cd\u5f88\u6709\u524d\u9014\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8f6c\u53d1\u8bbe\u5907\u53ef\u4ee5\u914d\u7f6e\u4e3a\u4ee5\u7ebf\u901f\u6267\u884c\u7b97\u6cd5\u548c\u68c0\u67e5\u6d41\u91cf\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5229\u7528P4\u539f\u8bed\u6765\u8bbe\u8ba1\u4e00\u79cd\u7ec6\u7c92\u5ea6\u3001\u4f4e\u5360\u7528\u7a7a\u95f4\u3001\u4f4e\u5ef6\u8fdf\u7684\u6d41\u91cf\u68c0\u6d4b\u673a\u5236\uff0c\u7528\u4e8e\u5b9e\u65f6\u68c0\u6d4bDDoS\u653b\u51fb Jiahao Cao et al.: Fingerprinting SDN Applications via Encrypted Control Traffic. International Symposium on Recent Advances in Intrusion Detection.2019 In this paper, we show an adversary can infer what applications run on SDN controllers by analyzing low-level and encrypted control traffic. Such information can help an adversary to identify valuable targets, know the possible presence of network defense, and thus schedule a better plan for a later stage of an attack \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5206\u6790\u4f4e\u7ea7\u548c\u52a0\u5bc6\u7684\u63a7\u5236\u6d41\u91cf\u6765\u63a8\u65ad\u54ea\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5728SDN\u63a7\u5236\u5668\u4e0a\u8fd0\u884c\u3002\u8fd9\u6837\u7684\u4fe1\u606f\u53ef\u4ee5\u5e2e\u52a9\u5bf9\u624b\u8bc6\u522b\u6709\u4ef7\u503c\u7684\u76ee\u6807\uff0c\u4e86\u89e3\u53ef\u80fd\u5b58\u5728\u7684\u7f51\u7edc\u9632\u5fa1\uff0c\u4ece\u800c\u4e3a\u653b\u51fb\u7684\u540e\u671f\u9636\u6bb5\u5236\u5b9a\u66f4\u597d\u7684\u8ba1\u5212 Menghao et al.: Control Plane Reflection Attacks in SDNs: New Attacks and Countermeasures. International Symposium on Recent Advances in Intrusion Detection.2019 In this paper, they present Control Plane Reflection Attacks to exploit the limited processing capability of SDN-enabled hardware switches. Moreover, we propose a two-phase probing-triggering attack strategy to make the reflection attacks much more efficient, stealthy and powerful. \u5728\u672c\u6587\u4e2d\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u63a7\u5236\u5e73\u9762\u53cd\u5c04\u653b\u51fb\uff0c\u4ee5\u5229\u7528\u652f\u6301SDN\u7684\u786c\u4ef6\u4ea4\u6362\u673a\u6709\u9650\u7684\u5904\u7406\u80fd\u529b\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u63d0\u51fa\u4e86\u4e00\u79cd\u4e24\u9636\u6bb5\u63a2\u6d4b-\u89e6\u53d1\u653b\u51fb\u7b56\u7565\uff0c\u4f7f\u53cd\u5c04\u653b\u51fb\u66f4\u52a0\u9ad8\u6548\u3001\u9690\u853d\u548c\u5f3a\u5927\u3002","title":"Third Part"}]}
{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"The Security Of OpenFlow: Reading List This is for final document, need to classify.","title":"The Security Of OpenFlow: Reading List"},{"location":"#the-security-of-openflow-reading-list","text":"This is for final document, need to classify.","title":"The Security Of OpenFlow: Reading List"},{"location":"First%20Part/","text":"Tooska Dargahi et al.: A Survey on the Security of Stateful SDN Data Planes ,IEEE,2019. Keywords: Data plane,data plane abstractions,data plane architectures,data plane flexibility,data plane implementations,data plane languages,data plane programmability,deeply programmable netoworks,description languages,energy consumption,energy efficiency,hardware-based implementations,measurement,monitoring,network virtualization,network functions virtualization,networking technologies, Software-Defined Networking (SDN) emerged as an attempt to introduce network innovations faster, and to radically simplify and automate the management of large networks. SDN traditionally leverages OpenFlow as device-level abstraction. Since OpenFlow permits the programmer to \u201cjust\u201d abstract a static flow-table, any stateful control and processing intelligence is necessarily delegated to the network controller. Motivated by the latency and signaling overhead that comes along with such a two-tiered SDN programming model, in the last couple of years several works have proposed innovative switch-level (data plane) programming abstractions capable to deploy some smartness directly inside the network switches, e.g., in the form of localized stateful flow processing. Furthermore, the possible inclusion of states and state maintenance primitives inside the switches is currently being debated in the OpenFlow standardization community itself. In this paper, after having provided the reader with a background on such emerging stateful SDN data plane proposals, we focus our attention on the security implications that data plane programmability brings about. Also via the identfication of potential attack scenarios, we specfically highlight possible vulnerabilities specfic to stateful in-switch processing (including denial of service and saturation attacks), which we believe should be carefully taken into consideration in the ongoing design of current and future proposals for stateful SDN data planes. SDN\u4f20\u7edf\u4e0a\u5c06OpenFlow\u7528\u4f5c\u201c\u8bbe\u5907\u7ea7\u201d\u7684\u62bd\u8c61\u3002\u7531\u4e8eOpenFlow\u53ea\u5141\u8bb8\u7a0b\u5e8f\u5458\u63d0\u53d6\u9759\u6001\u6d41\u8868\uff0c\u56e0\u6b64\u5bf9\u4e8e\u4efb\u4f55\u6709\u72b6\u6001\u7684\u63a7\u5236\u548c\u5904\u7406\u53ea\u80fd\u4ea4\u4e88\u63a7\u5236\u5668\u5904\u7406\u3002\u4e3a\u4e86\u89e3\u51b3\u5ef6\u65f6\u5927\u53ca\u4fe1\u53f7\u5f00\u9500\u5927\u8fd9\u4e24\u4e2a\u95ee\u9898\uff0c\u8fd1\u51e0\u5e74\u7684\u5de5\u4f5c\u4e2d\u63d0\u51fa\u4e86\u521b\u65b0\u7684\u6570\u636e\u5e73\u9762\u7f16\u7a0b\u62bd\u8c61\uff0c\u80fd\u76f4\u63a5\u5728\u4ea4\u6362\u673a\u5185\u90e8\u90e8\u7f72\u667a\u80fd\u529f\u80fd\uff0c\u5982\u5c40\u90e8\u72b6\u6001\u6d41\u7b49\u3002\u672c\u6587\u4e3a\u8bfb\u8005\u63d0\u4f9b\u4e86\u5173\u4e8e\u6709\u72b6\u6001SDN\u6570\u636e\u5e73\u9762\u7684\u77e5\u8bc6\uff0c\u5e76\u5206\u6790\u4e86\u5bf9\u4e8e\u6f5c\u5728\u7684\u653b\u51fb\u573a\u666f\u53ca\u5bf9\u653b\u51fb\u7684\u9632\u5fa1\u63aa\u65bd\u3002 Carmelo Cascone et al.: Public Review for Relaxing state-access constraints in stateful programmable data planes, SIGCOMM,2018. Keywords\uff1aNetwork data plane,programmable switch,SDN,NFV Supporting programmable stateful packet forwarding functions in hardware requires a tight balance between functionality and performance. Current state-of-the-art solutions are based on a very conservative model that assumes worst-case workloads. This finally limits the programmability of the system, even if actual deployment conditions may be very different from the worst-case scenario. We use trace-based simulations to highlight the benefits of accounting for specific workload characteristics. Furthermore, we show that relatively simple additions to a switching chip design can take advantage of such characteristics. In particular, we argue that introducing stalls in the switching chip pipeline enables stateful functions to be executed in a larger but bounded time without harming the overall forwarding performance. Our results show that, in some cases, the stateful processing of a packet could use 30x the time budget provided by state of the art solutions. \u5728\u786c\u4ef6\u4e2d\u5b9e\u73b0\u53ef\u7f16\u7a0b\u6709\u72b6\u6001\u5206\u7ec4\u8f6c\u53d1\u529f\u80fd\u9700\u8981\u7ef4\u6301\u529f\u80fd\u548c\u6027\u80fd\u7684\u5e73\u8861\u76ee\u524d\u6700\u65b0\u7684\u89e3\u51b3\u65b9\u6848\u662f\u57fa\u4e8e\u4e00\u4e2a\u6bd4\u8f83\u4fdd\u5b88\u7684\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u5904\u7406\u5206\u7ec4\u8f6c\u53d1\u65f6\u5047\u8bbe\u73af\u5883\u5904\u4e8e\u6700\u9ad8\u7684\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u8fd9\u6837\u9650\u5236\u4e86\u7cfb\u7edf\u7684\u53ef\u7f16\u7a0b\u6027\u3002\u672c\u6587\u63d0\u51fa\u4e00\u4e2a\u57fa\u4e8e\u8ffd\u8e2a\u7684\u6a21\u578b\uff0c\u80fd\u5728\u7279\u5b9a\u8d1f\u8f7d\u4e0b\u663e\u8457\u63d0\u9ad8\u6709\u72b6\u6001\u5904\u7406\u7684\u901f\u5ea6\uff0c\u800c\u4e14\u4e0d\u4f1a\u635f\u5bb3\u6574\u4f53\u8f6c\u53d1\u6027\u80fd\u3002 Peter Peresini et al.: Rule-Level Data Plane Monitoring With Monocle ,SIGCOMM,2015. Keywords\uff1anetwork data plane,SDN,rule monitor,control plane We present Monocle, a system that systematically monitors the network data plane, and verfies that it corresponds to the view that the SDN controller builds and tries to enforce in the switches. Our evaluation shows that Monocle is capable of fine-grained per-rule monitoring for the majority of rules. In addition, it can help controllers to cope with switches that exhibit transient inconsistencies between their control plane and data plane states. \u672c\u6587\u63d0\u51famoncole\u7f51\u7edc\u6570\u636e\u5e73\u9762\u76d1\u63a7\u7cfb\u7edf\uff0c\u5b83\u80fd\u786e\u8ba4SDN\u63a7\u5236\u5668\u7684\u89c6\u56fe\u4e0e\u4ea4\u6362\u673a\u7684\u4fdd\u6301\u4e00\u81f4\u3002\u6b64\u7cfb\u7edf\u80fd\u6267\u884c\u5927\u591a\u6570\u89c4\u5219\u7684\u7ec6\u7c92\u5ea6\u76d1\u89c6\uff0c\u5e76\u80fd\u5904\u7406\u63a7\u5236\u5668\u63a7\u5236\u5e73\u9762\u4e0e\u4ea4\u6362\u673a\u6570\u636e\u5e73\u9762\u7684\u6682\u6001\u4e0d\u4e00\u81f4\u95ee\u9898\u3002 Jiarong Xing et al.: Secure State Migration in the Data Plane ,SPIN,2020. Keywords\uff1aProgrammable data planes, P4, State migration, Stream authentication, Network security Programmable data planes enable stateful packet processing at hardware speeds\u2014\u2014a new capability central to many recent systems. However, protocols and systems that effectively manage data plane state remain underexplored. This paper considers the problem of secure state migration, which can serve as an important building block for state management tasks. It delivers data plane state from a source switch to a destination effectively without a software controller, while providing strong cryptographic guarantees on authenticity. Our protocol, P4Sync, tackles several technical challenges, such as adapting memory copy techniques in VM migration, offloading per-packet security operations to the data plane, and amortizing heavyweight cryptographic overheads over a batch of packets. Our initial validation shows that P4Sync has low traffic and memory overheads. challenges, such as adapting memory copy techniques in VM migration, offloading per-packet security operations to the data plane, and amortizing heavyweight cryptographic overheads over a batch of packets. Our initial validation shows that P4Sync has low traffic and memory overheads\u3002 \u8bb8\u591a\u6700\u65b0\u7cfb\u7edf\u5141\u8bb8\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4ee5\u786c\u4ef6\u901f\u5ea6\u5b9e\u73b0\u6709\u72b6\u6001\u7684\u6570\u636e\u5305\u5904\u7406\uff0c\u4f46\u662f\u6709\u6548\u7ba1\u7406\u6570\u636e\u5e73\u9762\u72b6\u6001\u7684\u534f\u8bae\u548c\u7cfb\u7edf\u4ecd\u672a\u5f97\u5230\u5f00\u53d1\u3002\u672c\u6587\u63d0\u51faP4Sync\u534f\u8bae\u4ee5\u89e3\u51b3\u5b89\u5168\u72b6\u6001\u8fc1\u79fb\u7684\u95ee\u9898\u3002P4Sync\u534f\u8bae\u80fd\u4f7f\u4ea4\u6362\u673a\u5728\u65e0\u8f6f\u4ef6\u63a7\u5236\u5668\u7684\u60c5\u51b5\u4e0b\uff0c\u5c06\u6570\u636e\u5e73\u9762\u72b6\u6001\u52a0\u5bc6\u4f20\u8f93\u540e\u4f20\u9012\u5230\u76ee\u7684\u5730\u3002P4Sync\u89e3\u51b3\u4e86\u4e00\u4e9b\u6280\u672f\u96be\u9898\uff1a\u4f8b\u5982\u5728VM\u8fc1\u79fb\u4e2d\u91c7\u7528\u5185\u5b58\u590d\u5236\u6280\u672f\uff0c\u5c06\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5b89\u5168\u6027\u64cd\u4f5c\u4ea4\u8fd8\u6570\u636e\u5e73\u9762\uff0c\u4ee5\u53ca\u5747\u8861\u5206\u914d\u91cd\u91cf\u7ea7\u7684\u52a0\u5bc6\u5f00\u9500\uff0c\u540c\u65f6\uff0cP4Sync\u4e5f\u5177\u6709\u8f83\u4f4e\u7684\u6d41\u91cf\u548c\u5185\u5b58\u5f00\u9500\u3002 Ahmad Asseri .:Alleviating Eavesdropping Attacks in Software-Defined Networking Data Plane ,Mobysis.2017. Keywords\uff1aSDN,OpenFlow,Anti-Eavesdropping,Multipath Routing. Software-Defined Networking(SDN) is an emerging paradigm that introduces a concept of programmable networks to enhance the agility in networking management. By separating concerns of the data plane and the control plane, implementing network switching as packet forwarding, and using centralized software to logically control the entire networks, SDN makes it simpler to automate and configure the network to respond to high-level policy enforcement and dynamically changing network conditions. As SDN becomes more prevalent, its security issues are increasingly critical. Eavesdropping attacks are one of the most common and important network attacks because they are relatively easy to implement and their effects can escalate to more severe attacks. This paper addresses the issue of how to cope with eavesdropping attacks in the SDN data plane by using multiple routing paths to reduce the severity of data leakage. While this existing approach appears to be considerably effective, our simple analysis uncovers that without a proper strategy of data communication, it can still lead to 100% of data exposure. The paper describes a remedy along with illustrations both analytically and experimentally. The results show that our proposed remedy can avoid such catastrophe and further reduces the percentage of risk from data exposure approximately by a factor of 1/n where n is the number of alternate disjoint paths. \u7a83\u542c\u653b\u51fb\u662f\u6700\u5e38\u89c1\uff0c\u6700\u91cd\u8981\u7684\u7f51\u7edc\u653b\u51fb\u4e4b\u4e00\u3002\u672c\u6587\u89e3\u51b3\u4e86\u5982\u4f55\u901a\u8fc7\u4f7f\u7528\u591a\u4e2a\u8def\u7531\u8def\u5f84\u6765\u51cf\u5c11\u6570\u636e\u6cc4\u6f0f\uff0c\u4ee5\u5e94\u5bf9SDN\u6570\u636e\u5e73\u9762\u4e2d\u7684\u7a83\u542c\u653b\u51fb\u7684\u95ee\u9898\u3002\u5c3d\u7ba1\u8fd9\u662f\u4e00\u79cd\u6709\u6548\u7684\u65b9\u6cd5\uff0c\u4f46\u5982\u679c\u6ca1\u6709\u9002\u5408\u7684\u6570\u636e\u901a\u4fe1\u7b56\u7565\uff0c\u5b83\u4ecd\u7136\u4f1a\u5bfc\u81f4100%\u6570\u636e\u6cc4\u9732\u3002\u672c\u6587\u5728\u5206\u6790\u548c\u5b9e\u9a8c\u4e0a\u90fd\u63cf\u8ff0\u4e86\u4e00\u79cd\u8865\u6551\u63aa\u65bd\u3002\u7ed3\u679c\u8868\u660e\uff0c\u6211\u4eec\u63d0\u51fa\u7684\u8865\u6551\u63aa\u65bd\u53ef\u4ee5\u907f\u514d\u6570\u636e\u6cc4\u9732\u5e76\u964d\u4f4e\u6cc4\u9732\u767e\u5206\u6bd4\u3002\u6570\u636e\u6cc4\u9732\u7684\u98ce\u9669e\u5927\u7ea6\u4e3a1 / n\u500d\uff0c\u5176\u4e2dn\u662f\u4ea4\u66ff\u4e0d\u76f8\u4ea4\u8def\u5f84\u7684\u6570\u91cf\u3002 Jiarong Xing et al.: Architecting Programmable Data Plane Defenses into the Network with FastFlex ,Mobysis,2019. Keywords:data plane,programmable data plane This paper is motivated by the ever increasing scale and diversity of attacks that are best handled by the network infrastructure. FastFlex builds upon recent progress, which has developed a variety of network defenses in programmable data planes, and takes this trend one step further: it aims to develop architectural support for these defenses as a first-class citizen. We envision that the network architecture would support these defenses as naturally as it does routing\u2014\u2014as the network routes traffic end-to-end, it also turns the defenses on and off as needed for attack mitigation. We propose a key abstraction: the multimode data plane. Normally, it operates under optimal configurations computed by centralized control, but upon attacks, it performs distributed mode changes entirely in data plane for mitigation. Mixed-vector attacks would trigger co-existing modes at different regions of the network, and attacks that rapidly change would be met with equally fast mode adaptations. We sketch this vision, discuss the opportunities and challenges it involves, and present a use case on link-flooding defense. \u4f18\u8d28\u7684\u7f51\u7edc\u57fa\u7840\u7ed3\u6784\u53ef\u4ee5\u5e94\u5bf9\u4e0d\u65ad\u6269\u5927\u7684\u653b\u51fb\u89c4\u6a21\u548c\u591a\u6837\u6027\uff0cFastFlex\u4ee5\u6700\u65b0\u7684\u6280\u672f\u4e3a\u57fa\u7840\uff0c\u8bbe\u60f3\u7f51\u7edc\u4f53\u7cfb\u7ed3\u6784\u652f\u6301\u8fd9\u4e9b\u9632\u5fa1\u63aa\u65bd\uff0c\u5e76\u53ef\u4ee5\u6839\u636e\u963b\u65ad\u653b\u51fb\u7684\u9700\u8981\u5f00\u542f\u6216\u5173\u95ed\u8fd9\u4e9b\u9632\u5fa1\u63aa\u65bd\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u4e2a\u5173\u952e\u7684\u62bd\u8c61\uff1a\u591a\u6a21\u6570\u636e\u5e73\u9762\u3002\u901a\u5e38\uff0c\u5b83\u5728\u7531\u96c6\u4e2d\u63a7\u5236\u8ba1\u7b97\u51fa\u7684\u6700\u4f73\u914d\u7f6e\u4e0b\u8fd0\u884c\uff0c\u4f46\u662f\u5728\u53d7\u5230\u653b\u51fb\u65f6\uff0c\u5b83\u4f1a\u5b8c\u5168\u5728\u6570\u636e\u5e73\u9762\u4e0a\u66f4\u6539\u4e3a\u5206\u5e03\u5f0f\u6a21\u5f0f\u4ee5\u964d\u4f4e\u98ce\u9669\u63d0\u51faFastFlex\u7f51\u7edc\u9632\u5fa1\u67b6\u6784\uff0c\u63d0\u51fa\u591a\u6a21\u5f0f\u6570\u636e\u5e73\u9762\u7684\u6982\u5ff5\uff0c\u8fd0\u7528FastFlex\u67b6\u6784\u80fd\u4f7f\u7f51\u7edc\u53d7\u5230\u653b\u51fb\u65f6\u5728\u6570\u636e\u5e73\u9762\u4e0a\u6267\u884c\u5206\u5e03\u5f0f\u6a21\u5f0f\u6765\u7f13\u89e3\u653b\u51fb\uff0c\u5e76\u9002\u5e94\u653b\u51fb\u7684\u5feb\u901f\u53d8\u6362\u3002 Niranjhana Narayanan et al.: Mitigation of security attacks in the SDN data plane using P4-enabled switches ,Mobysis,2019. Keywords:P4,programmable data planes This paper presents a study and demonstration of some of the commonly seen internal security attacks and related countermeasures using P4, a dataplane programming language. The idea is that the vulnerabilities arising in programmable data planes are sufficiently mitigated with this P4 implementation. This also provides users with the flexibility to add or drop security features in the deployed switches, better visibility into the defense system owing to its open source nature and the portability of these P4 programs across many different vendors and devices. We evaluate our P4 code on software and hardware switches to detect IP-address spoofing attacks. The results show that attack packets are always detected and dropped, while the throughput remains unaffected and nearly constant across varying fractions of malicious packets injected in the network. \u672c\u6587\u4ecb\u7ecd\u4e86\u4f7f\u7528\u6570\u636e\u5e73\u9762\u7f16\u7a0b\u8bed\u8a00P4\u5bf9\u4e00\u4e9b\u5e38\u89c1\u7684\u5185\u90e8\u5b89\u5168\u653b\u51fb\u548c\u76f8\u5173\u5bf9\u7b56\u8fdb\u884c\u7684\u7814\u7a76\u548c\u6f14\u793a\u3002 \u8fd0\u7528P4\u53ef\u4ee5\u5145\u5206\u51cf\u5c11\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e2d\u4ea7\u751f\u7684\u6f0f\u6d1e\uff0c\u8fd8\u4e3a\u7528\u6237\u63d0\u4f9b\u5728\u4ea4\u6362\u673a\u4e2d\u6dfb\u52a0\u6216\u5220\u9664\u5b89\u5168\u529f\u80fd\u7684\u7075\u6d3b\u6027\uff0cP4\u51ed\u501f\u5176\u5f00\u6e90\u7279\u6027\u4ee5\u53caP4\u7a0b\u5e8f\u5728\u8bb8\u591a\u4e0d\u540c\u4f9b\u5e94\u5546\u548c\u8bbe\u5907\u4e4b\u95f4\u7684\u53ef\u79fb\u690d\u6027\uff0c\u5728\u9632\u5fa1\u7cfb\u7edf\u4e2d\u7ecf\u5e38\u88ab\u4f7f\u7528\u3002\u6211\u4eec\u5728\u8f6f\u4ef6\u548c\u786c\u4ef6\u4ea4\u6362\u673a\u4e0a\u8bc4\u4f30\u6211\u4eec\u7684P4\u4ee3\u7801\uff0c\u4ee5\u68c0\u6d4bIP\u5730\u5740\u6b3a\u9a97\u653b\u51fb\u3002\u7ed3\u679c\u8868\u660e\uff0c\u653b\u51fb\u5305\u603b\u662f\u88ab\u68c0\u6d4b\u5230\u5e76\u88ab\u4e22\u5f03\uff0c\u800c\u541e\u5410\u91cf\u5374\u4e0d\u53d7\u5f71\u54cd\u3002 Wassim Itani et al.: Network Programming and Probabilistic Sketching for Securing the Data Plane ,Mobysis,2018 Keywords:cloud security,data plane,SDN This paper presents VISKA, a cloud security service for dynamically detecting malicious switching elements in software defined networking (SDN) infrastructures. The main contributions of VISKA lie in (1) utilizing network programming and secure probabilistic sketching in SDN environments to dynamically detect and isolate parts of the data plane that experience malicious behavior, (2) applying a set of focused packet probing and sketching mechanisms on isolated network partitions/views rather than focusing the security mechanisms on the whole physical network, (3) efficiently analyzing the network behavior of the resulting views by recursively partitioning them in a divide-and-conquer fashion to logarithmically reduce the problem size in order to localize abnormal/malicious switching units, and (4) providing an attack categorization module that analyzes live ingress/egress traffic of the maliciously detected switch(es) solely to identify the specific type of attack, rather than inspecting the whole network traffic as is done in traditional intrusion detection systems. This significantly enhances the performance of attack detection and reduces the load on the controller. A testbed prototype implementation is realized on the Mininet network emulator. The experimental analysis corroborated the algorithms\u2019 convergence property using the linear and FatTree topologies with network sizes of up to 250 switches. Moreover, an implementation of the attack categorization module is realized and achieved an accuracy rate of over 90% for the different attack types supported. \u672c\u6587\u4ecb\u7ecd\u4e86VISKA\uff0c\u8fd9\u662f\u4e00\u79cd\u4e91\u5b89\u5168\u670d\u52a1\uff0c\u7528\u4e8e\u52a8\u6001\u68c0\u6d4b\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\uff08SDN\uff09\u57fa\u7840\u7ed3\u6784\u4e2d\u7684\u6076\u610f\u4ea4\u6362\u5143\u7d20\u3002 VISKA\u7684\u4e3b\u8981\u8d21\u732e\u5728\u4e8e\uff1a \uff081\uff09\u5728SDN\u73af\u5883\u4e2d\u5229\u7528\u7f51\u7edc\u7f16\u7a0b\u548c\u5b89\u5168\u6982\u7387\u7d20\u63cf\u6765\u52a8\u6001\u68c0\u6d4b\u548c\u9694\u79bb\u7ecf\u5386\u6076\u610f\u884c\u4e3a\u7684\u6570\u636e\u5e73\u9762\u90e8\u5206\u3002 \uff082\uff09\u5728\u9694\u79bb\u72b6\u6001\u4e0b\u5e94\u7528\u4e00\u7ec4\u96c6\u4e2d\u7684\u6570\u636e\u5305\u63a2\u6d4b\u548c\u7d20\u63cf\u673a\u5236\u7f51\u7edc\u5206\u533a/\u89c6\u56fe\uff0c\u800c\u4e0d\u662f\u5c06\u5b89\u5168\u673a\u5236\u96c6\u4e2d\u5728\u6574\u4e2a\u7269\u7406\u7f51\u7edc\u4e0a\u3002 \uff083\uff09\u901a\u8fc7\u4ee5\u5206\u800c\u6cbb\u4e4b\u7684\u65b9\u5f0f\u5bf9\u7ed3\u679c\u56fe\u8fdb\u884c\u9012\u5f52\u5212\u5206\uff0c\u4ece\u800c\u6709\u6548\u5730\u5206\u6790\u7ed3\u679c\u56fe\u7684\u7f51\u7edc\u5f02\u5e38\u884c\u4e3a/\u6076\u610f\u4ea4\u6362\u5355\u5143\u3002 \uff084\uff09\u63d0\u4f9b\u653b\u51fb\u5206\u7c7b\u6a21\u5757\uff0c\u8be5\u6a21\u5757\u53ef\u4ee5\u5206\u6790\u6076\u610f\u68c0\u6d4b\u5230\u7684\u4ea4\u6362\u673a\u7684\u5b9e\u65f6\u5165/\u51fa\u6d41\u91cf\uff0c\u800c\u4e14\u4ec5\u7528\u4e8e\u8bc6\u522b\u7279\u5b9a\u7684\u653b\u51fb\u7c7b\u578b\uff0c\u800c\u4e0d\u662f\u50cf\u68c0\u67e5\u7f51\u7edc\u4e2d\u90a3\u6837\u68c0\u67e5\u6574\u4e2a\u7f51\u7edc\u6d41\u91cf\u4f20\u7edf\u7684\u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\u3002\u8fd9\u663e\u8457\u63d0\u9ad8\u4e86\u653b\u51fb\u68c0\u6d4b\u7684\u6027\u80fd\u5e76\u51cf\u5c11\u4e86\u63a7\u5236\u5668\u4e0a\u7684\u8d1f\u8f7d\u3002 Johannes Krude.: Optimizing Data Plane Programs for the Network ,Mobysis,2019. Keywords: programmable switches , eBPF , program optimization With the move of Software-defined networking from fixed to programmable data planes, network functions are written with P4 or eBPF for targets such as programmable switches, CPU based flow processors and commodity CPUs. These data plane programs are, however, limited in per-packet time budget(e.g., 67.2 ns at 10GbE) and program size, making program optimization imperative. Existing approaches focus on optimizing the distribution of flow rules in fixed data planes [4] or they are limited to a single switch. We see great potential in integrating the network topology into program optimization. \u968f\u7740\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\u4ece\u9759\u6001\u6570\u636e\u5e73\u9762\u5230\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u8f6c\u53d8\uff0c\u73b0\u901a\u5e38\u7528P4\u6216eBPF\u7f16\u5199\u9488\u5bf9\u53ef\u7f16\u7a0b\u4ea4\u6362\u673a\uff0c\u57fa\u4e8eCPU\u7684\u6d41\u5904\u7406\u5668\u548c\u5546\u7528CPU\u7b49\u8bbe\u5907\u7684\u7f51\u7edc\u529f\u80fd\u3002 \u4f46\u662f\uff0c\u8fd9\u4e9b\u6570\u636e\u5e73\u9762\u7a0b\u5e8f\u7684\u6bcf\u4e2a\u6570\u636e\u5305\u65f6\u95f4\u9884\u7b97\uff08\u4f8b\u598210GbE\u65f6\u4e3a67.2 ns\uff09\u548c\u7a0b\u5e8f\u5927\u5c0f\u53d7\u5230\u9650\u5236\uff0c\u56e0\u6b64\u5fc5\u987b\u8fdb\u884c\u7a0b\u5e8f\u4f18\u5316\u3002\u73b0\u6709\u65b9\u6cd5\u96c6\u4e2d\u4e8e\u4f18\u5316\u9759\u6001\u6570\u636e\u5e73\u9762\u4e2d\u6d41\u89c4\u5219\u7684\u5206\u5e03\u3002\u6211\u4eec\u56e2\u961f\u53d1\u73b0\u5c06\u7f51\u7edc\u62d3\u6251\u96c6\u6210\u5230\u7a0b\u5e8f\u4f18\u5316\u4e2d\u7684\u5de8\u5927\u6f5c\u529b\u3002 Qi Li,Yanyu et al.: Security Policy Violations in SDN Data Plane ,Mobysis,2018. Keywords: SDN, data plane, policy violation Software-defined networking SDN utilizes a centralized controller to distribute packet processing rules to network switches. However, rules are often generated by the applications developed by different organizations, so they may conflict with each other in data plane and lead to violations with security rules. The problem is similar to firewall conflicts in IP networks. Rule conflict resolution should incur negligible process delay, such that all rules can be correctly and safely enforced in the data plane in real time. However, since SDN allows users to use more than 35 fields to specify rules including field transition rules, it is much more complicated to prevent enforcement of SDN rules from violating with security rules than to resolve firewall rule violation, and in particular, field transition rules are enforced. Therefore, it is extremely difficult to resolve such rule conflicts in real time before the rules are installed in SDN data plane. In this paper, we investigate the rule conflict problem in SDN and identify new covert channel attacks due to rule conflicts. To the end, we propose the covert channel defender CCD that prevents covert channel attacks by verifying and resolving rule conflicts. Specifically, CCD tracks all rule insertion and modification messages from applications running on the controller. It analyzes the correlation among rules based on multiple packet header fields and resolves any identified rule conflict in real time before rule installation. We implement CCD with the Floodlight controller and evaluate its performance with the real-world Stanford topology. We show that CCD can efficiently detect and prevent rule conflicts in the data plane that may raise covert channels within hundreds of microseconds and brings small overhead to the packet delivery. SDN\u5229\u7528\u96c6\u4e2d\u5f0f\u63a7\u5236\u5668\u5c06\u6570\u636e\u5305\u5904\u7406\u89c4\u5219\u5206\u53d1\u5230\u7f51\u7edc\u4ea4\u6362\u673a\u3002\u4f46\u662f\uff0c\u89c4\u5219\u901a\u5e38\u662f\u7531\u4e0d\u540c\u7ec4\u7ec7\u5f00\u53d1\u7684\u5e94\u7528\u7a0b\u5e8f\u751f\u6210\uff0c\u56e0\u6b64\u5b83\u4eec\u53ef\u80fd\u5728\u6570\u636e\u5e73\u9762\u4e2d\u76f8\u4e92\u51b2\u7a81\u5e76\u5bfc\u81f4\u8fdd\u53cd\u5b89\u5168\u89c4\u5219\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5bf9SDN\u4e2d\u7684\u89c4\u5219\u51b2\u7a81\u95ee\u9898\u8fdb\u884c\u5206\u6790\uff0c\u5e76\u53d1\u73b0\u4e86\u7531\u4e8e\u89c4\u5219\u51b2\u7a81\u800c\u5f15\u8d77\u7684\u65b0\u7684\u9690\u853d\u901a\u9053\u653b\u51fb\u3002\u6700\u540e\uff0c\u6211\u4eec\u63d0\u51fa\u4e86\u79d8\u5bc6\u901a\u9053\u9632\u5fa1CCD\uff0c\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cCCD\u53ef\u4ee5\u901a\u8fc7\u9a8c\u8bc1\u548c\u89e3\u51b3\u89c4\u5219\u51b2\u7a81\u6765\u9632\u6b62\u79d8\u5bc6\u901a\u9053\u653b\u51fb\u3002","title":"First Part"},{"location":"Second%20Part/","text":"Arjun Roy et al.: 2018. Cloud Datacenter SDN Monitoring: Experiences and Challenges. In Proceedings of the Internet Measurement Conference 2018 ( IMC \u201918 ). Association for Computing Machinery, New York, NY, USA, 464\u2013470. keyword\uff1aNetwork measurement; Cloud computing; Network monitoring; This paper faces the rapid detection and mitigation of architectural failures required by the network architecture of cloud computing data centers, describes the challenges of building a corresponding cloud-based fault monitoring system, and clarifies the problems of data center failures under virtualized architecture The impact of management, the conclusions show, virtualization, the interaction between the tenant software and the lower layers of the network structure, the various aspects of fault detection and diagnosis are simplified and complicated. \u8fd9\u7bc7\u8bba\u6587\u9762\u5bf9\u4e91\u8ba1\u7b97\u6570\u636e\u4e2d\u5fc3\u7684\u7f51\u7edc\u67b6\u6784\u6240\u9700\u8981\u7684\u5feb\u901f\u68c0\u6d4b\u548c\u7f13\u89e3\u67b6\u6784\u6545\u969c\u95ee\u9898\uff0c\u63cf\u8ff0\u4e86\u6784\u5efa\u76f8\u5e94\u7684\u57fa\u4e8e\u4e91\u7684\u6545\u969c\u76d1\u63a7\u7cfb\u7edf\u6240\u9762\u4e34\u7684\u6311\u6218\uff0c\u5e76\u9610\u660e\u4e86\u865a\u62df\u5316\u67b6\u6784\u4e0b\u5bf9\u6570\u636e\u4e2d\u5fc3\u6545\u969c\u7ba1\u7406\u7684\u5f71\u54cd\uff0c\u7ed3\u8bba\u663e\u793a\uff0c\u865a\u62df\u5316\uff0c\u79df\u6237\u8f6f\u4ef6\u548c\u7f51\u7edc\u7ed3\u6784\u7684\u8f83\u4f4e\u5c42\u4e4b\u95f4\u7684\u4ea4\u4e92\uff0c\u6545\u969c\u68c0\u6d4b\u548c\u8bca\u65ad\u5de5\u4f5c\u7684\u5404\u4e2a\u4e0d\u540c\u65b9\u9762\u5373\u5b58\u5728\u7b80\u5316\uff0c\u4e5f\u5b58\u5728\u590d\u6742\u5316\u3002 Ran Ben Basat et al.: 2019. Q-MAX: A Unified Scheme for Improving Network Measurement Throughput. In Proceedings of the Internet Measurement Conference ( IMC \u201919 ). Association for Computing Machinery, New York, NY, USA, 322\u2013336. keyword\uff1aNetwork algorithms Measurement applications running at wire speed are a major challenge in the field of network measurement. This article addresses this challenge by providing a unified mechanism to improve the update time of various network algorithms. This is done by identifying, researching and optimizing a common algorithm pattern called q-MAX. The goal is to maintain the maximum q value in the packet flow. The paper conducts a formal analysis of this problem and introduces interval and sliding window algorithms, which have a constant update time in the worst case. The conclusion proves that compared with the library algorithm, the q-MAX algorithm executes X20 much faster, and the throughput can be increased by up to X12 on the real network trajectory. The experiment implemented the scheme in the most advanced virtual switch Open vSwitch. \u7ebf\u901f\u8fd0\u884c\u7684\u6d4b\u91cf\u5e94\u7528\u662f\u7f51\u7edc\u6d4b\u91cf\u9886\u57df\u7684\u91cd\u5927\u6311\u6218\u3002\u672c\u6587\u901a\u8fc7\u63d0\u4f9b\u4e00\u79cd\u6539\u5584\u5404\u79cd\u7f51\u7edc\u7b97\u6cd5\u66f4\u65b0\u65f6\u95f4\u7684\u7edf\u4e00\u673a\u5236\u6765\u5e94\u5bf9\u8fd9\u4e00\u6311\u6218\u3002\u901a\u8fc7\u8bc6\u522b\uff0c\u7814\u7a76\u548c\u4f18\u5316\u79f0\u4e3aq-MAX\u7684\u5e38\u89c1\u7b97\u6cd5\u6a21\u5f0f\u6765\u505a\u5230\u8fd9\u4e00\u70b9\u3002\u76ee\u6807\u662f\u4fdd\u6301\u6570\u636e\u5305\u6d41\u4e2d\u7684\u6700\u5927q\u503c\u3002\u8bba\u6587\u5bf9\u6b64\u95ee\u9898\u8fdb\u884c\u6b63\u5f0f\u5206\u6790\uff0c\u5e76\u4ecb\u7ecd\u95f4\u9694\u548c\u6ed1\u52a8\u7a97\u53e3\u7b97\u6cd5\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u5177\u6709\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u6052\u5b9a\u66f4\u65b0\u65f6\u95f4\u3002\u7ed3\u8bba\u8bc1\u660e\uff0c\u4e0e\u5e93\u7b97\u6cd5\u76f8\u6bd4\uff0cq-MAX\u7b97\u6cd5\u6267\u884cX20\u7684\u901f\u5ea6\u5feb\u5f97\u591a\uff0c\u5728\u771f\u5b9e\u7684\u7f51\u7edc\u8f68\u8ff9\u4e0a\uff0c\u541e\u5410\u91cf\u6700\u591a\u53ef\u63d0\u9ad8X12\u3002\u5b9e\u9a8c\u5728\u6700\u5148\u8fdb\u7684\u865a\u62df\u4ea4\u6362\u673aOpen vSwitch\u4e2d\u5b9e\u73b0\u4e86\u8be5\u65b9\u6848\u3002 Bahador Yeganeh et al.: 2019. How Cloud Traffic Goes Hiding: A Study of Amazon\u2019s Peering Fabric. In Proceedings of the Internet Measurement Conference ( IMC \u201919 ). Association for Computing Machinery, New York, NY, USA, 202\u2013216. Routers;Network measurement;Physical topolo-gies;Logical / virtual topologies;Cloud computing; In this article, a third-party evaluation study is proposed, which aims to reveal all the equivalence between Amazon and the rest of the Internet. Describes the techniques for inferring these peer-to-peer links, with special attention to inferring the VPI associated with the largest cloud provider. A new method for fixing (ie, geolocation) inferred interconnection or peer-to-peer links will also be introduced and evaluated. \u5728\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u9879\u7b2c\u4e09\u65b9\u8bc4\u4f30\u7814\u7a76\uff0c\u65e8\u5728\u63ed\u793a\u4e9a\u9a6c\u900a\u4e0e\u4e92\u8054\u7f51\u5176\u4f59\u90e8\u5206\u4e4b\u95f4\u7684\u6240\u6709\u5bf9\u7b49\u5173\u7cfb\u3002\u63cf\u8ff0\u4e86\u63a8\u65ad\u8fd9\u4e9b\u5bf9\u7b49\u94fe\u63a5\u7684\u6280\u672f\uff0c\u5e76\u7279\u522b\u6ce8\u610f\u63a8\u65ad\u4e0e\u8be5\u6700\u5927\u4e91\u63d0\u4f9b\u5546\u5173\u8054\u7684VPI\u3002\u8fd8\u5c06\u4ecb\u7ecd\u5e76\u8bc4\u4f30\u4e00\u79cd\u7528\u4e8e\u56fa\u5b9a\uff08\u5373\uff0c\u5730\u7406\u5b9a\u4f4d\uff09\u63a8\u65ad\u7684\u4e92\u8fde\u6216\u5bf9\u7b49\u94fe\u63a5\u7684\u6bcf\u4e00\u7aef\u7684\u65b0\u65b9\u6cd5\u3002 S. Lee et al.: AudiSDN: Automated Detection of Network Policy Inconsistencies in Software-Defined Networks, IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. SDN, Software-Defined Networking, Network Policy Inconsistency AudiSDN, which is an automated fuzzing framework designed to design test cases. In the OpenFlow network, policy inconsistencies may occur. For example, there are some loopholes in the actual implementation of the decision made by the user and the policy issued. AudiSDN copies the decisions that users want to issue, and obfuscates the rules by modifying the content, so that the original rules and fuzzy rules are jointly issued to the underlying equipment. Then through inconsistency detection to determine whether there is inconsistency. In the experiment, AudiSDN tested the results of Floodlight and ONOS. AudiSDN\uff0c\u8fd9\u662f\u4e00\u4e2a\u81ea\u52a8\u7684\u6a21\u7cca\u6d4b\u8bd5\u6846\u67b6\uff0c\u65e8\u5728\u8bbe\u8ba1\u6d4b\u8bd5\u7528\u4f8b\u3002\u5728OpenFlow\u7f51\u7edc\u4e2d\u53ef\u80fd\u4f1a\u51fa\u73b0\u7b56\u7565\u4e0d\u4e00\u81f4\u7684\u60c5\u51b5\uff0c\u5982\u7528\u6237\u505a\u51fa\u7684\u51b3\u7b56\u4e0e\u6240\u4e0b\u53d1\u7684\u7b56\u7565\u5728\u5b9e\u9645\u6267\u884c\u7684\u65f6\u5019\u5b58\u5728\u67d0\u4e9b\u6f0f\u6d1e\u3002AudiSDN\u5c06\u7528\u6237\u6240\u8981\u4e0b\u53d1\u7684\u51b3\u7b56\uff0c\u8fdb\u884c\u590d\u5236\uff0c\u5e76\u4ee5\u4fee\u6539\u5185\u5bb9\u7684\u65b9\u5f0f\u8fdb\u884c\u89c4\u5219\u7684\u6a21\u7cca\u5316\uff0c\u4f7f\u5f97\u539f\u89c4\u5219\u4e0e\u6a21\u7cca\u89c4\u5219\u5171\u540c\u4e0b\u53d1\u5230\u5e95\u5c42\u8bbe\u5907\u4e4b\u4e2d\u3002\u518d\u901a\u8fc7\u4e0d\u4e00\u81f4\u6027\u68c0\u6d4b\u6765\u5224\u5b9a\u662f\u5426\u5b58\u5728\u4e0d\u4e00\u81f4\u60c5\u51b5\u3002\u5b9e\u9a8c\u4e2d\uff0cAudiSDN\u6d4b\u8bd5\u4e86Floodlight\u548cONOS\u7684\u7ed3\u679c\u3002 L. Tang et al.: \"SpreadSketch: Toward Invertible and Network-Wide Detection of Superspreaders,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. p4 For real-time and accurate large-scale detection of super communicator problems. The paper proposes SpreadSketch, which is a reversible sketch data structure used for network-wide super-extended program detection, and provides theoretical guarantees in terms of memory space, performance and accuracy. SpreadSketch tracks candidate super extensions and embeds estimated fan-out extensions in a binary hash string in a small and static memory space so that multiple SpreadSketch instances can be merged to provide a measurement view of the entire network to restore super extensions And its estimated fan-out. We put forward a formal theoretical analysis of the extended sketch on the complexity of time and space and the scope of error. Track-driven evaluations show that SpreadSketch has higher accuracy and performance compared to the latest sketches. \u4e3a\u5b9e\u65f6\u51c6\u786e\u5730\u5927\u89c4\u6a21\u68c0\u6d4b\u8d85\u7ea7\u4f20\u64ad\u8005\u7684\u95ee\u9898\u3002\u8bba\u6587\u63d0\u51faSpreadSketch\uff0c\u8fd9\u662f\u4e00\u79cd\u53ef\u9006\u7684\u8349\u56fe\u6570\u636e\u7ed3\u6784\uff0c\u7528\u4e8e\u7f51\u7edc\u8303\u56f4\u7684\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\u68c0\u6d4b\uff0c\u5e76\u5728\u5185\u5b58\u7a7a\u95f4\uff0c\u6027\u80fd\u548c\u51c6\u786e\u6027\u65b9\u9762\u63d0\u4f9b\u4e86\u7406\u8bba\u4e0a\u7684\u4fdd\u8bc1\u3002 SpreadSketch\u8ddf\u8e2a\u5019\u9009\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\uff0c\u5e76\u5c06\u4f30\u8ba1\u7684\u6247\u51fa\u6269\u5c55\u5d4c\u5165\u5c0f\u578b\u548c\u9759\u6001\u5185\u5b58\u7a7a\u95f4\u5185\u7684\u4e8c\u8fdb\u5236\u54c8\u5e0c\u5b57\u7b26\u4e32\u4e2d\uff0c\u4ee5\u4fbf\u53ef\u4ee5\u5408\u5e76\u591a\u4e2aSpreadSketch\u5b9e\u4f8b\uff0c\u4ee5\u63d0\u4f9b\u6574\u4e2a\u7f51\u7edc\u7684\u6d4b\u91cf\u89c6\u56fe\uff0c\u4ee5\u6062\u590d\u8d85\u7ea7\u6269\u5c55\u7a0b\u5e8f\u53ca\u5176\u4f30\u8ba1\u7684\u6247\u51fa\u3002 \u6211\u4eec\u5c31\u65f6\u7a7a\u590d\u6742\u5ea6\u548c\u9519\u8bef\u8303\u56f4\u63d0\u51fa\u4e86\u5173\u4e8e\u6269\u5c55\u8349\u56fe\u7684\u5f62\u5f0f\u5316\u7406\u8bba\u5206\u6790\u3002 \u8ddf\u8e2a\u9a71\u52a8\u7684\u8bc4\u4f30\u8868\u660e\uff0cSpreadSketch\u4e0e\u6700\u65b0\u7684\u8349\u56fe\u76f8\u6bd4\uff0c\u5177\u6709\u66f4\u9ad8\u7684\u51c6\u786e\u6027\u548c\u6027\u80fd\u3002 Q. Xiang et al.: \"Toward Optimal Software-Defined Interdomain Routing,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. openflow End-to-end routing control across a set of network scans provides opportunities for end users to optimize intra-domain control and network service providers to increase business volume. BGP, the de facto inter-domain routing protocol, does not provide programmable control. The latest proposals for inter-domain control (such as MIRO, ARROW, and SDX) provide more mechanisms and interfaces, but they are only pointer solutions or incremental solutions. In this article, the first system representation of the software-defined interconnection network (SDI) model is provided. In this model, the network exposes a programmable interface to allow clients to define the inter-domain routing of the network, just like the traditional The SDN switch exposes Openflow or another programmable interface to allow the client to define its next hop, thereby extending SDN from intra-domain control to general inter-domain control. Unlike intra-domain SDN that allows full control of clients, SDI should also maximize network autonomy, such as allowing the network to maintain control of inter-domain export policies, thereby avoiding fundamental violations such as valley routing. \u8de8\u8d8a\u4e00\u7ec4\u7f51\u7edc\u626b\u63cf\u7684\u7aef\u5230\u7aef\u8def\u7531\u63a7\u5236\u4e3a\u6700\u7ec8\u7528\u6237\u4f18\u5316\u57df\u5185\u63a7\u5236\u548c\u7f51\u7edc\u670d\u52a1\u63d0\u4f9b\u5546\u63d0\u4f9b\u4e86\u673a\u4f1a\uff0c\u4ee5\u589e\u52a0\u4e1a\u52a1\u91cf\u3002 BGP\uff0c\u4e8b\u5b9e\u4e0a\u7684\u57df\u95f4\u8def\u7531\u534f\u8bae\uff0c\u4e0d\u63d0\u4f9b\u53ef\u7f16\u7a0b\u63a7\u5236\u3002 \u57df\u95f4\u63a7\u5236\u7684\u6700\u65b0\u63d0\u8bae\uff08\u4f8b\u5982MIRO\uff0cARROW\u548cSDX\uff09\u63d0\u4f9b\u4e86\u66f4\u591a\u7684\u673a\u5236\u548c\u63a5\u53e3\uff0c\u4f46\u5b83\u4eec\u53ea\u662f\u6307\u9488\u89e3\u51b3\u65b9\u6848\u6216\u589e\u91cf\u89e3\u51b3\u65b9\u6848\u3002 \u5728\u672c\u6587\u4e2d\uff0c\u63d0\u4f9b\u4e86\u8f6f\u4ef6\u5b9a\u4e49\u7684\u4e92\u8054\u7f51\u7edc\uff08SDI\uff09\u6a21\u578b\u7684\u7b2c\u4e00\u4e2a\u7cfb\u7edf\u8868\u8ff0\uff0c\u5728\u8be5\u6a21\u578b\u4e2d\uff0c\u7f51\u7edc\u516c\u5f00\u4e86\u4e00\u4e2a\u53ef\u7f16\u7a0b\u63a5\u53e3\uff0c\u4ee5\u5141\u8bb8\u5ba2\u6237\u7aef\u5b9a\u4e49\u7f51\u7edc\u7684\u57df\u95f4\u8def\u7531\uff0c\u5c31\u50cf\u4f20\u7edf\u7684SDN\u4ea4\u6362\u673a\u516c\u5f00\u4e86Openflow\u6216\u53e6\u4e00\u4e2a\u53ef\u7f16\u7a0b\u63a5\u53e3\u4e00\u6837 \u4ee5\u5141\u8bb8\u5ba2\u6237\u7aef\u5b9a\u4e49\u5176\u4e0b\u4e00\u8df3\uff0c\u4ece\u800c\u5c06SDN\u4ece\u57df\u5185\u63a7\u5236\u6269\u5c55\u5230\u901a\u7528\u57df\u95f4\u63a7\u5236\u3002 \u4e0e\u5141\u8bb8\u5b8c\u5168\u63a7\u5236\u5ba2\u6237\u7aef\u7684\u57df\u5185SDN\u4e0d\u540c\uff0cSDI\u8fd8\u5e94\u6700\u5927\u9650\u5ea6\u5730\u63d0\u9ad8\u7f51\u7edc\u81ea\u6cbb\u6027\uff0c\u4f8b\u5982\u5141\u8bb8\u7f51\u7edc\u4fdd\u6301\u5bf9\u57df\u95f4\u5bfc\u51fa\u7b56\u7565\u7684\u63a7\u5236\uff0c\u4ece\u800c\u907f\u514d\u8bf8\u5982\u5c71\u8c37\u8def\u7531\u4e4b\u7c7b\u7684\u6839\u672c\u8fdd\u89c4\u884c\u4e3a\u3002 Garegin Grigoryan et al.: 2018. LAMP: prompt layer 7 attack mitigation with programmable data planes. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 158\u2013159. openflow LAMP, that is, layer 7 attack mitigation with programmable data plane. LAMP tracks the path of each flow entering the attacked network. If the final host application detects an intrusion attempt, it will generate an attack alert by embedding the signal flag and the attacker's IP address in the IP option field of the signal packet. It is assumed that such an application has the privilege to modify the IP packet field of the alert message. The alert will be sent directly to the nearest switch, which will eventually forward the packet to the ingress switch carrying the original malicious traffic. After receiving the alert, the ingress switch will modify its flow control strategy to block subsequent traffic from the attacker. This mitigation strategy has at least three advantages: (1) It enables network-wide collaborative detection and attack mitigation. The detection result obtained by the terminal host can be reused for the service of the entire network; (2) Since the network edge quickly blocks the malicious traffic in the network, the malicious traffic in the network is greatly reduced; (3) Compared with the existing SDN method, it Lightweight and efficient network operations can be realized. In the existing SDN method, an SDN controller is required to bridge the gap between application programs and network layer services. LAMP\uff0c\u5373\u5177\u6709\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u7b2c7\u5c42\u653b\u51fb\u7f13\u89e3\u3002 LAMP\u8ddf\u8e2a\u8fdb\u5165\u53d7\u653b\u51fb\u7f51\u7edc\u7684\u6bcf\u4e2a\u6d41\u7684\u8def\u5f84\u3002\u5982\u679c\u6700\u7ec8\u4e3b\u673a\u5e94\u7528\u7a0b\u5e8f\u68c0\u6d4b\u5230\u5165\u4fb5\u4f01\u56fe\uff0c\u5219\u4f1a\u901a\u8fc7\u5728\u4fe1\u53f7\u5305\u7684IP\u9009\u9879\u5b57\u6bb5\u4e2d\u5d4c\u5165\u4fe1\u53f7\u6807\u5fd7\u548c\u653b\u51fb\u8005\u7684IP\u5730\u5740\u6765\u751f\u6210\u653b\u51fb\u8b66\u62a5\u3002 \u5047\u5b9a\u6b64\u7c7b\u5e94\u7528\u7a0b\u5e8f\u5177\u6709\u4fee\u6539\u8b66\u62a5\u6d88\u606f\u7684IP\u6570\u636e\u5305\u5b57\u6bb5\u7684\u7279\u6743\u3002 \u8b66\u62a5\u5c06\u76f4\u63a5\u53d1\u9001\u5230\u6700\u8fd1\u7684\u4ea4\u6362\u673a\uff0c\u8be5\u4ea4\u6362\u673a\u6700\u7ec8\u5c06\u6570\u636e\u5305\u8f6c\u53d1\u5230\u627f\u8f7d\u539f\u59cb\u6076\u610f\u6d41\u91cf\u7684\u5165\u53e3\u4ea4\u6362\u673a\u3002 \u6536\u5230\u8b66\u62a5\u540e\uff0c\u5165\u53e3\u4ea4\u6362\u673a\u5c06\u4fee\u6539\u5176\u6d41\u63a7\u5236\u7b56\u7565\uff0c\u4ee5\u963b\u6b62\u6765\u81ea\u653b\u51fb\u8005\u7684\u540e\u7eed\u6d41\u91cf\u3002 \u8fd9\u4e2a\u7f13\u89e3\u7b56\u7565\u81f3\u5c11\u5177\u6709\u4e09\u4e2a\u4f18\u70b9\uff1a\uff081\uff09\u5b83\u4f7f\u7f51\u7edc\u8303\u56f4\u5185\u7684\u534f\u4f5c\u68c0\u6d4b\u548c\u653b\u51fb\u7f13\u89e3\u6210\u4e3a\u53ef\u80fd\u3002 \u7ec8\u7aef\u4e3b\u673a\u83b7\u5f97\u7684\u68c0\u6d4b\u7ed3\u679c\u53ef\u4ee5\u91cd\u65b0\u7528\u4e8e\u6574\u4e2a\u7f51\u7edc\u7684\u670d\u52a1\uff1b \uff082\uff09\u7531\u4e8e\u7f51\u7edc\u8fb9\u7f18\u8fc5\u901f\u963b\u585e\u4e86\u7f51\u7edc\u5185\u6076\u610f\u6d41\u91cf\uff0c\u7f51\u7edc\u5185\u6076\u610f\u6d41\u91cf\u5927\u5927\u51cf\u5c11\u4e86\uff1b \uff083\uff09\u4e0e\u73b0\u6709\u7684SDN\u65b9\u6cd5\u76f8\u6bd4\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u8f7b\u91cf\u548c\u9ad8\u6548\u7684\u7f51\u7edc\u64cd\u4f5c\uff0c\u5728\u73b0\u6709\u7684SDN\u65b9\u6cd5\u4e2d\uff0c\u9700\u8981SDN\u63a7\u5236\u5668\u6765\u5f25\u5408\u5e94\u7528\u7a0b\u5e8f\u548c\u7f51\u7edc\u5c42\u670d\u52a1\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002 Jehandad Khan et al.: 2018. Query language for large-scale P4 network debugging. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 162\u2013164. openflow By merging network topology information with status collection, this paper explores a new way to view network monitoring and troubleshooting issues to diagnose and solve problems in modern data centers. Abstracting the entire network as a single entity simplifies the debugging process, enables comprehensive root cause analysis, and frees network administrators from having to deal with many devices, thereby increasing productivity and efficiency. This merging allows the conversion of performance queries expressed in domain-specific languages into small pieces of code that run on different devices that collect the necessary state on the network. This combination can reduce the overhead of each switch, reduce the burden on the device, and provide a simple abstraction for the administrator. \u901a\u8fc7\u5c06\u7f51\u7edc\u62d3\u6251\u4fe1\u606f\u4e0e\u72b6\u6001\u6536\u96c6\u5408\u5e76\uff0c\u6b64\u8bba\u6587\u63a2\u7d22\u4e86\u4e00\u79cd\u65b0\u7684\u65b9\u5f0f\u6765\u67e5\u770b\u7f51\u7edc\u76d1\u89c6\u548c\u6545\u969c\u6392\u9664\u95ee\u9898\u4ee5\u5bf9\u73b0\u4ee3\u6570\u636e\u4e2d\u5fc3\u8fdb\u884c\u8bca\u65ad\u548c\u89e3\u51b3\u95ee\u9898\u3002\u5c06\u6574\u4e2a\u7f51\u7edc\u62bd\u8c61\u4e3a\u4e00\u4e2a\u5b9e\u4f53\u53ef\u7b80\u5316\u8c03\u8bd5\u8fc7\u7a0b\uff0c\u4f7f\u5168\u9762\u7684\u6839\u672c\u539f\u56e0\u5206\u6790\u6210\u4e3a\u53ef\u80fd\uff0c\u5e76\u4f7f\u7f51\u7edc\u7ba1\u7406\u5458\u65e0\u9700\u5904\u7406\u8bb8\u591a\u8bbe\u5907\uff0c\u4ece\u800c\u63d0\u9ad8\u4e86\u751f\u4ea7\u7387\u548c\u6548\u7387\u3002\u8fd9\u79cd\u5408\u5e76\u5141\u8bb8\u5c06\u4ee5\u9886\u57df\u7279\u5b9a\u8bed\u8a00\u8868\u8fbe\u7684\u6027\u80fd\u67e5\u8be2\u8f6c\u6362\u4e3a\u5728\u7f51\u7edc\u4e2d\u6536\u96c6\u5fc5\u8981\u72b6\u6001\u7684\u4e0d\u540c\u8bbe\u5907\u4e0a\u8fd0\u884c\u7684\u5c0f\u6bb5\u4ee3\u7801\u3002\u8fd9\u79cd\u5408\u5e76\u53ef\u4ee5\u51cf\u5c11\u6bcf\u4e2a\u4ea4\u6362\u673a\u7684\u5f00\u9500\uff0c\u5e76\u51cf\u8f7b\u8bbe\u5907\u7684\u8d1f\u62c5\uff0c\u5e76\u4e3a\u7ba1\u7406\u5458\u63d0\u4f9b\u4e00\u4e2a\u7b80\u5355\u7684\u62bd\u8c61\u3002 Garegin Grigoryan et al.: 2018. PFCA: a programmable FIB caching architecture. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 97\u2013103. openflow TCAM is expensive and energy consuming. In addition, the continued growth of FIB may cause TCAM overflow problems. However, only a small number of FIB entries carry most of the network traffic. Therefore, FIB caching, which installs the most popular entries in fast memory (such as TCAM), may greatly reduce the use of TCAM. In the partial paper, the concept of programmable data plane is used to design a programmable FIB cache architecture (PFCA) with two levels of cache. A pipeline-based algorithm is proposed to detect the least popular prefixes in the cache to evict victims. Experimental results show that PFCA achieves a hit rate of 99.8% for Level-1 caches with 20K entries and nearly 99.9% for Level-2 caches with 40K entries. We also proved that PFCA can greatly reduce the number of BGP updates in the cache, thereby making the cache more stable. TCAM\u6602\u8d35\u4e14\u8017\u80fd\u3002\u6b64\u5916\uff0cFIB\u7684\u6301\u7eed\u589e\u957f\u53ef\u80fd\u4f1a\u5bfc\u81f4TCAM\u6ea2\u51fa\u95ee\u9898\u3002\u7136\u800c\uff0c\u53ea\u6709\u4e00\u5c0f\u90e8\u5206FIB\u6761\u76ee\u627f\u8f7d\u4e86\u5927\u90e8\u5206\u7f51\u7edc\u6d41\u91cf\u3002\u56e0\u6b64\uff0cFIB\u7f13\u5b58\uff0c\u5373\u5728\u5feb\u901f\u5b58\u50a8\u5668\uff08\u4f8b\u5982TCAM\uff09\u4e2d\u5b89\u88c5\u6700\u6d41\u884c\u7684\u6761\u76ee\uff0c\u53ef\u80fd\u4f1a\u5927\u5927\u51cf\u5c11TCAM\u7684\u4f7f\u7528\u3002\u5728\u504f\u8bba\u6587\u4e2d\uff0c\u5229\u7528\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u7684\u6982\u5ff5\u6765\u8bbe\u8ba1\u5177\u6709\u4e24\u7ea7\u7f13\u5b58\u7684\u53ef\u7f16\u7a0bFIB\u7f13\u5b58\u4f53\u7cfb\u7ed3\u6784\uff08PFCA\uff09\u3002\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u7ba1\u9053\u7684\u7b97\u6cd5\u6765\u68c0\u6d4b\u7f13\u5b58\u4e2d\u7528\u4e8e\u9a71\u9010\u53d7\u5bb3\u8005\u7684\u6700\u4e0d\u6d41\u884c\u7684\u524d\u7f00\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cPFCA\u5bf9\u4e8e\u5177\u670920K\u6761\u76ee\u7684Level-1\u7f13\u5b58\u8fbe\u5230\u4e8699.8\uff05\u7684\u547d\u4e2d\u7387\uff0c\u5bf9\u4e8e\u5177\u670940K\u6761\u76ee\u7684Level-2\u7f13\u5b58\u8fbe\u5230\u4e86\u8fd199.9\uff05\u7684\u547d\u4e2d\u7387\u3002\u6211\u4eec\u8fd8\u8bc1\u660e\u4e86PFCA\u53ef\u4ee5\u5927\u5927\u51cf\u5c11\u7f13\u5b58\u4e2dBGP\u66f4\u65b0\u7684\u6570\u91cf\uff0c\u4ece\u800c\u4f7f\u7f13\u5b58\u66f4\u7a33\u5b9a\u3002 Jan Ku\u010dera et al.: 2018. Hardware acceleration of intrusion detection systems for high-speed networks. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 177\u2013178. programmable data plane Intrusion Detection System (IDS) is one of the popular technologies to protect computer network security. However, their high computational complexity makes it difficult to meet the performance goals of modern high-speed networks. This article aims to accelerate IDS through packet drop. Focus the limited computing resources available for IDS only on the most relevant part of the incoming traffic, and offload (bypass) the rest. The paper shows that this kind of controlled (informed) discarding of well-defined parts of the flow will help IDS achieve better results than software and FPGA-accelerated discarding implementations. \u5165\u4fb5\u68c0\u6d4b\u7cfb\u7edf\uff08IDS\uff09\u662f\u4fdd\u62a4\u8ba1\u7b97\u673a\u7f51\u7edc\u5b89\u5168\u7684\u6d41\u884c\u6280\u672f\u4e4b\u4e00\u3002\u4f46\u662f\uff0c\u5b83\u4eec\u7684\u9ad8\u8ba1\u7b97\u590d\u6742\u6027\u4f7f\u5176\u96be\u4ee5\u6ee1\u8db3\u73b0\u4ee3\u9ad8\u901f\u7f51\u7edc\u7684\u6027\u80fd\u76ee\u6807\u3002\u672c\u6587\u65e8\u5728\u901a\u8fc7\u4fe1\u606f\u5305\u4e22\u5f03\u6765\u52a0\u901fIDS\u3002\u5c06IDS\u53ef\u7528\u7684\u6709\u9650\u8ba1\u7b97\u8d44\u6e90\u4ec5\u96c6\u4e2d\u4e8e\u4f20\u5165\u6d41\u91cf\u4e2d\u6700\u76f8\u5173\u7684\u90e8\u5206\uff0c\u5e76\u5c06\u5176\u4f59\u90e8\u5206\u5378\u8f7d\uff08\u7ed5\u8fc7\uff09\u3002\u8bba\u6587\u8868\u660e\uff0c\u8fd9\u79cd\u5bf9\u5b9a\u4e49\u660e\u786e\u7684\u6d41\u91cf\u90e8\u5206\u7684\u63a7\u5236\uff08\u77e5\u60c5\uff09\u4e22\u5f03\u76f8\u8f83\u8f6f\u4ef6\u548cFPGA\u52a0\u901f\u7684\u4e22\u5f03\u5b9e\u73b0\uff0c\u6709\u52a9\u4e8eIDS\u83b7\u5f97\u66f4\u597d\u7684\u7ed3\u679c\u3002 Jinghan Zhou et al.: 2018. APF: fast network all-pair reachability calculation. In Proceedings of the 2018 Symposium on Architectures for Networking and Communications Systems (ANCS \u201918). Association for Computing Machinery, New York, NY, USA, 172\u2013173. programmable data plane Network verification is mainly to check the network status based on the network invariance or the operator's belief. Calculating the reachability of all pairs of the network quickly in advance for further query or overall analysis can provide great help for network verification. This paper proposes a new fast all-pair reachability calculation algorithm Atomic Predicates Flooding (APF). Experiments on real data sets show that the new algorithm based on network atomization is about three to four orders of magnitude faster than the existing algorithm without network atomization. On most data sets, APF is even 2 to 5 times faster than Warshall-based all-pair reachability algorithm with atomization function. \u7f51\u7edc\u9a8c\u8bc1\u4e3b\u8981\u662f\u6839\u636e\u7f51\u7edc\u4e0d\u53d8\u6027\u6216\u8fd0\u8425\u5546\u7684\u4fe1\u5ff5\u6765\u68c0\u67e5\u7f51\u7edc\u72b6\u6001\u3002\u4e8b\u5148\u5feb\u901f\u8ba1\u7b97\u7f51\u7edc\u7684\u6240\u6709\u5bf9\u53ef\u8fbe\u6027\uff0c\u4ee5\u8fdb\u884c\u8fdb\u4e00\u6b65\u7684\u67e5\u8be2\u6216\u6574\u4f53\u5206\u6790\uff0c\u53ef\u4ee5\u4e3a\u7f51\u7edc\u9a8c\u8bc1\u63d0\u4f9b\u5de8\u5927\u5e2e\u52a9\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5feb\u901f\u5168\u5bf9\u53ef\u8fbe\u6027\u8ba1\u7b97\u7b97\u6cd5Atomic Predicates Flooding\uff08APF\uff09\u3002\u5728\u771f\u5b9e\u6570\u636e\u96c6\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0c\u57fa\u4e8e\u7f51\u7edc\u96fe\u5316\u7684\u65b0\u7b97\u6cd5\u6bd4\u6ca1\u6709\u7f51\u7edc\u96fe\u5316\u7684\u73b0\u6709\u7b97\u6cd5\u5feb\u7ea6\u4e09\u5230\u56db\u4e2a\u6570\u91cf\u7ea7\u3002\u5728\u5927\u591a\u6570\u6570\u636e\u96c6\u4e0a\uff0cAPF\u751a\u81f3\u6bd4\u57fa\u4e8eWarshall\u7684\u5177\u6709\u96fe\u5316\u529f\u80fd\u7684\u5168\u5bf9\u53ef\u8fbe\u6027\u7b97\u6cd5\u5feb2\u81f35\u500d\u3002 Zehua Guo et al.: 2019. RetroFlow: maintaining control resiliency and flow programmability for software-defined WANs. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 1, 1\u201310. openflow For performance reasons, the software-defined WAN is divided into multiple domains, which are controlled by multiple controllers with a logically centralized view. In the case of a controller failure, the control of the offline switch is remapped from the failed controller to other active controllers. Due to the increased controller-switch communication overhead, existing solutions may overload the active controller, thereby interrupting its normal operation or reducing network performance. In this article, RetroFlow is proposed to achieve low communication overhead without interrupting the normal processing of the active controller during a controller failure. By intelligently configuring a group of selected offline switches that work in traditional routing mode, RetroFlow enables the active controller to control the flow programmability of SDN without controlling the selected offline switches. RetroFlow can also intelligently transfer the control of offline switches to the active controller through the SDN routing mode, so as to minimize the communication overhead between these offline switches and the active controller. \u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u5c06\u8f6f\u4ef6\u5b9a\u4e49\u7684WAN\u5206\u4e3a\u591a\u4e2a\u57df\uff0c\u8fd9\u4e9b\u57df\u7531\u5177\u6709\u903b\u8f91\u96c6\u4e2d\u89c6\u56fe\u7684\u591a\u4e2a\u63a7\u5236\u5668\u63a7\u5236\u3002\u5728\u63a7\u5236\u5668\u6545\u969c\u4e0b\uff0c\u5c06\u8131\u673a\u4ea4\u6362\u673a\u7684\u63a7\u5236\u4ece\u53d1\u751f\u6545\u969c\u7684\u63a7\u5236\u5668\u91cd\u65b0\u6620\u5c04\u5230\u5176\u4ed6\u6d3b\u52a8\u63a7\u5236\u5668\u3002\u7531\u4e8e\u589e\u52a0\u4e86\u63a7\u5236\u5668-\u4ea4\u6362\u673a\u7684\u901a\u4fe1\u5f00\u9500\uff0c\u73b0\u6709\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u80fd\u4f1a\u4f7f\u6d3b\u52a8\u7684\u63a7\u5236\u5668\u8fc7\u8f7d\uff0c\u4ece\u800c\u4e2d\u65ad\u5176\u6b63\u5e38\u8fd0\u884c\uff0c\u6216\u8005\u964d\u4f4e\u7f51\u7edc\u6027\u80fd\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51faRetroFlow\u4ee5\u5b9e\u73b0\u4f4e\u901a\u4fe1\u5f00\u9500\uff0c\u800c\u4e0d\u4f1a\u5728\u63a7\u5236\u5668\u6545\u969c\u671f\u95f4\u4e2d\u65ad\u6d3b\u52a8\u63a7\u5236\u5668\u7684\u6b63\u5e38\u5904\u7406\u3002\u901a\u8fc7\u667a\u80fd\u5730\u914d\u7f6e\u4e00\u7ec4\u5728\u4f20\u7edf\u8def\u7531\u6a21\u5f0f\u4e0b\u5de5\u4f5c\u7684\u9009\u5b9a\u8131\u673a\u4ea4\u6362\u673a\uff0cRetroFlow\u53ef\u4ee5\u4f7f\u6d3b\u52a8\u63a7\u5236\u5668\u5728\u63a7\u5236SDN\u7684\u6d41\u53ef\u7f16\u7a0b\u6027\u7684\u540c\u65f6\uff0c\u4e0d\u63a7\u5236\u9009\u5b9a\u7684\u8131\u673a\u4ea4\u6362\u673a\u3002RetroFlow\u8fd8\u53ef\u4ee5\u901a\u8fc7SDN\u8def\u7531\u6a21\u5f0f\u5c06\u8131\u673a\u4ea4\u6362\u673a\u7684\u63a7\u5236\u667a\u80fd\u5730\u8f6c\u79fb\u5230\u6d3b\u52a8\u63a7\u5236\u5668\uff0c\u4ee5\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u8fd9\u4e9b\u8131\u673a\u4ea4\u6362\u673a\u4e0e\u6d3b\u52a8\u63a7\u5236\u5668\u4e4b\u95f4\u7684\u901a\u4fe1\u5f00\u9500\u3002 Yu Zhou et al.: 2019. P4Tester: efficient runtime rule fault detection for programmable data planes. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 5, 1\u201310. programmable data plane This article proposes P4Tester, which is a new type of network test system used to troubleshoot runtime rule failures on the programmable data plane. First of all, P4Tester proposes a new intermediate representation based on binary decision diagrams, which can efficiently generate probes for various P4 defined data plane functions. Secondly, P4Tester provides a new probe model that uses source routing to forward probes. The probe model greatly reduces the cost of rule failure detection, that is, only one server is needed to generate probes for large networks, and the number of probes is minimized. In addition, the probe model can test all table rules in the network to achieve complete fault coverage. The evaluation based on the actual data set shows that P4Tester can effectively check all the rules in the programmable data plane. The generated probes are 59% less than ATPG and Pronto, and are two orders of magnitude faster than ATPG. Troubleshoot multiple rule failures on BMv2 and Tofino. \u672c\u6587\u63d0\u51fa\u4e86P4Tester\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8e\u5bf9\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e0a\u7684\u8fd0\u884c\u65f6\u89c4\u5219\u6545\u969c\u8fdb\u884c\u6545\u969c\u6392\u9664\u7684\u65b0\u578b\u7f51\u7edc\u6d4b\u8bd5\u7cfb\u7edf\u3002\u9996\u5148\uff0cP4Tester\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u4e8c\u8fdb\u5236\u51b3\u7b56\u56fe\u7684\u65b0\u7684\u4e2d\u95f4\u8868\u793a\u5f62\u5f0f\uff0c\u8be5\u8868\u793a\u5f62\u5f0f\u53ef\u4ee5\u4e3a\u5404\u79cdP4\u5b9a\u4e49\u7684\u6570\u636e\u5e73\u9762\u529f\u80fd\u9ad8\u6548\u751f\u6210\u63a2\u9488\u3002\u5176\u6b21\uff0cP4Tester\u63d0\u4f9b\u4e86\u4e00\u4e2a\u65b0\u7684\u63a2\u9488\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u4f7f\u7528\u6e90\u8def\u7531\u6765\u8f6c\u53d1\u63a2\u9488\u3002\u8be5\u63a2\u9488\u6a21\u578b\u6781\u5927\u5730\u51cf\u5c11\u4e86\u89c4\u5219\u6545\u969c\u68c0\u6d4b\u7684\u5f00\u9500\uff0c\u5373\u4ec5\u9700\u8981\u4e00\u53f0\u670d\u52a1\u5668\u5373\u53ef\u4e3a\u5927\u578b\u7f51\u7edc\u751f\u6210\u63a2\u9488\uff0c\u5e76\u6700\u5927\u7a0b\u5ea6\u5730\u51cf\u5c11\u4e86\u63a2\u9488\u7684\u6570\u91cf\u3002\u6b64\u5916\uff0c\u8be5\u63a2\u9488\u6a21\u578b\u53ef\u4ee5\u6d4b\u8bd5\u7f51\u7edc\u4e2d\u7684\u6240\u6709\u8868\u89c4\u5219\uff0c\u4ece\u800c\u5b9e\u73b0\u5b8c\u6574\u7684\u6545\u969c\u8986\u76d6\u3002\u6839\u636e\u5b9e\u9645\u6570\u636e\u96c6\u8fdb\u884c\u7684\u8bc4\u4f30\u8868\u660eP4Tester \u53ef\u4ee5\u6709\u6548\u5730\u68c0\u67e5\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u4e2d\u7684\u6240\u6709\u89c4\u5219\uff0c\u751f\u6210\u7684\u63a2\u9488\u6bd4ATPG\u548cPronto\u5c1159\uff05\uff0c\u6bd4ATPG\u5feb\u4e24\u4e2a\u6570\u91cf\u7ea7\uff0c\u5e76\u5728\u4e00\u79d2\u949f\u5185\u5bf9BMv2\u548cTofino\u4e0a\u7684\u591a\u4e2a\u89c4\u5219\u6545\u969c\u8fdb\u884c\u6545\u969c\u6392\u9664\u3002 Xinbo Liu et al.: 2019. ATMPA: attacking machine learning-based malware visualization detection methods via adversarial examples. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 38, 1\u201310. programmable data plane Automatic malware detection technology has received more and more attention, among which visual detection methods based on machine learning (ML) have become more and more popular. This paper proves that the latest visual detection methods based on ML are vulnerable to adversarial examples (AE) attacks. And developed a new anti-texture malware perturbation attack (ATMPA) method based on gradient descent and L-norm optimization method. The attacker can introduce some small disturbances on the converted data set, thus making the ML-based The malware detection method completely failed. \u81ea\u52a8\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u6280\u672f\u53d7\u5230\u8d8a\u6765\u8d8a\u591a\u7684\u5173\u6ce8\uff0c\u5176\u4e2d\u57fa\u4e8e\u673a\u5668\u5b66\u4e60\uff08ML\uff09\u7684\u53ef\u89c6\u5316\u68c0\u6d4b\u65b9\u6cd5\u53d8\u5f97\u8d8a\u6765\u8d8a\u6d41\u884c\u3002\u672c\u6587\u8bc1\u660e\u4e86\u57fa\u4e8eML\u7684\u6700\u65b0\u53ef\u89c6\u5316\u68c0\u6d4b\u65b9\u6cd5\u5bb9\u6613\u53d7\u5230\u5bf9\u6297\u793a\u4f8b\uff08AE\uff09\u653b\u51fb\u3002\u5e76\u5f00\u53d1\u4e86\u4e00\u79cd\u57fa\u4e8e\u68af\u5ea6\u4e0b\u964d\u548cL\u7684\u65b0\u578b\u5bf9\u6297\u7eb9\u7406\u6076\u610f\u8f6f\u4ef6\u6444\u52a8\u653b\u51fb\uff08ATMPA\uff09\u65b9\u6cd5-norm\u4f18\u5316\u65b9\u6cd5\uff0c\u653b\u51fb\u8005\u53ef\u4ee5\u5728\u8f6c\u6362\u540e\u7684\u6570\u636e\u96c6\u4e0a\u5f15\u5165\u4e00\u4e9b\u5fae\u5c0f\u7684\u5e72\u6270\uff0c\u4ece\u800c\u4f7f\u57fa\u4e8eML\u7684\u6076\u610f\u8f6f\u4ef6\u68c0\u6d4b\u65b9\u6cd5\u5b8c\u5168\u5931\u8d25\u3002 Jing Guo et al.: 2019. Who limits the resource efficiency of my datacenter: an analysis of Alibaba datacenter traces. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 39, 1\u201310. programmable data plane The low resource utilization of modern data centers will waste a lot of hardware resources and infrastructure investment. In order to improve resource utilization, a direct method is to coexist different workloads on the same hardware. In order to clarify resource efficiency and understand the key characteristics of workloads in clusters located in the same location, this article analyzed an 8-day trace from Alibaba's production environment and revealed the following three main findings. First, memory has become a new bottleneck and limits the resource efficiency of Alibaba's data center. Second, in order to protect critical latency applications, batch applications are treated as second-class citizens and restricted to use limited resources. Third, more than 90% of latency-critical applications are written in Java applications. A large number of independent JVMs further complicate resource management and limit the resource efficiency of the data center. \u73b0\u4ee3\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u5229\u7528\u7387\u4f4e\u4f1a\u6d6a\u8d39\u5927\u91cf\u786c\u4ef6\u8d44\u6e90\u548c\u57fa\u7840\u67b6\u6784\u6295\u8d44\u3002\u4e3a\u4e86\u63d0\u9ad8\u8d44\u6e90\u5229\u7528\u7387\uff0c\u4e00\u79cd\u76f4\u63a5\u7684\u65b9\u6cd5\u662f\u5c06\u4e0d\u540c\u7684\u5de5\u4f5c\u8d1f\u8f7d\u5171\u5b58\u4e8e\u540c\u4e00\u786c\u4ef6\u4e0a\u3002\u4e3a\u4e86\u5f04\u6e05\u8d44\u6e90\u6548\u7387\u5e76\u4e86\u89e3\u4f4d\u4e8e\u540c\u4e00\u5730\u70b9\u7684\u96c6\u7fa4\u4e2d\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5173\u952e\u7279\u5f81\uff0c\u672c\u6587\u5206\u6790\u4e86\u6765\u81ea\u963f\u91cc\u5df4\u5df4\u751f\u4ea7\u73af\u5883\u4e0b\u76848\u5929trace\uff0c\u5e76\u63ed\u793a\u4e86\u4ee5\u4e0b\u4e09\u4e2a\u4e3b\u8981\u53d1\u73b0\u3002\u9996\u5148\uff0c\u5185\u5b58\u6210\u4e3a\u65b0\u7684\u74f6\u9888\uff0c\u5e76\u9650\u5236\u4e86\u963f\u91cc\u5df4\u5df4\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u6548\u7387\u3002\u5176\u6b21\uff0c\u4e3a\u4e86\u4fdd\u62a4\u5173\u952e\u5ef6\u8fdf\u5e94\u7528\u7a0b\u5e8f\uff0c\u6279\u5904\u7406\u5e94\u7528\u7a0b\u5e8f\u88ab\u89c6\u4e3a\u7b2c\u4e8c\u7b49\u516c\u6c11\uff0c\u5e76\u4e14\u88ab\u9650\u5236\u4f7f\u7528\u6709\u9650\u7684\u8d44\u6e90\u3002\u7b2c\u4e09\uff0c\u8d85\u8fc790\uff05\u7684\u5ef6\u8fdf\u5173\u952e\u578b\u5e94\u7528\u7a0b\u5e8f\u662f\u7528Java\u5e94\u7528\u7a0b\u5e8f\u7f16\u5199\u7684\u3002\u5927\u91cf\u72ec\u7acb\u7684JVM\u8fdb\u4e00\u6b65\u4f7f\u8d44\u6e90\u7ba1\u7406\u590d\u6742\u5316\uff0c\u5e76\u9650\u5236\u4e86\u6570\u636e\u4e2d\u5fc3\u7684\u8d44\u6e90\u6548\u7387\u3002 N. Huang et al.: \"Software-Defined Label Switching: Scalable Per-Flow Control in SDN,\" 2018 IEEE/ACM 26th International Symposium on Quality of Service (IWQoS), Banff, AB, Canada, 2018, pp. openflow To maintain the scalability of the data plane while realizing per-flow control. Existing SDN architectures cannot effectively implement per-flow control: they either cause additional delays in data packets or impose a high storage burden on the switch. In this article, software-defined label switching (SDLS) is proposed to achieve data plane scalability and flow control. SDLS combines central control with tag switching to reduce storage burden while maintaining per-stream control. SDLS introduces software switches into the data plane and manages the network in the area to achieve scalability. SDLS is compatible with OpenFlow and uses a hybrid data plane to provide effective flow settings. The experimental results show that SDLS can achieve the best delay performance while reducing the number of flow entries and overflows by more than 47%. \u4e3a\u4fdd\u7559\u6570\u636e\u5e73\u9762\u53ef\u4f38\u7f29\u6027\u7684\u540c\u65f6\u5b9e\u73b0\u6bcf\u6d41\u63a7\u5236\u3002\u73b0\u6709\u7684SDN\u67b6\u6784\u65e0\u6cd5\u6709\u6548\u5730\u5b9e\u73b0\u6bcf\u6d41\u63a7\u5236\uff1a\u5b83\u4eec\u8981\u4e48\u5bfc\u81f4\u6570\u636e\u5305\u7684\u989d\u5916\u5ef6\u8fdf\uff0c\u8981\u4e48\u7ed9\u4ea4\u6362\u673a\u5e26\u6765\u9ad8\u5b58\u50a8\u8d1f\u62c5\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u8f6f\u4ef6\u5b9a\u4e49\u7684\u6807\u7b7e\u4ea4\u6362\uff08SDLS\uff09\uff0c\u4ee5\u5b9e\u73b0\u6570\u636e\u5e73\u9762\u53ef\u6269\u5c55\u6027\u548c\u6309\u6d41\u63a7\u5236\u3002SDLS\u5c06\u4e2d\u592e\u63a7\u5236\u4e0e\u6807\u7b7e\u5207\u6362\u76f8\u7ed3\u5408\uff0c\u4ee5\u51cf\u8f7b\u5b58\u50a8\u8d1f\u62c5\uff0c\u540c\u65f6\u4fdd\u6301\u6bcf\u6d41\u63a7\u5236\u3002SDLS\u5c06\u8f6f\u4ef6\u4ea4\u6362\u673a\u5f15\u5165\u6570\u636e\u5e73\u9762\uff0c\u5e76\u5728\u533a\u57df\u4e2d\u7ba1\u7406\u7f51\u7edc\u4ee5\u5b9e\u73b0\u53ef\u4f38\u7f29\u6027\u3002SDLS\u4e0eOpenFlow\u517c\u5bb9\uff0c\u5e76\u91c7\u7528\u6df7\u5408\u6570\u636e\u5e73\u9762\u6765\u63d0\u4f9b\u6709\u6548\u7684\u6d41\u8bbe\u7f6e\u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660eSDLS\u53ef\u4ee5\u5728\u5ef6\u8fdf\u6027\u80fd\u65b9\u9762\u8fbe\u5230\u6700\u4f73\uff0c\u540c\u65f6\u5c06\u6d41\u6761\u76ee\u548c\u6ea2\u51fa\u7684\u6570\u91cf\u51cf\u5c11\u4e8647\uff05\u4ee5\u4e0a\u3002 Hui Cai et al.: 2019. Towards privacy-preserving data trading for web browsing history. In Proceedings of the International Symposium on Quality of Service (IWQoS \u201919). Association for Computing Machinery, New York, NY, USA, Article 25, 1\u201310. openflow This article proposes PEATSE, which is a new privacy protection dAta transaction framework for web browsing history. It takes into account the various privacy preferences of users and the utility of their web browsing history. PEATSE interferes with the user's detailed browsing time on the published browsing history to protect user privacy, while balancing the trade-off between privacy and utility. Through experiments based on real data, our analysis and evaluation results show that PEATSE has indeed achieved user privacy protection, data consumers' accuracy requirements, authenticity, personal rationality and budget balance. \u672c\u6587\u63d0\u51fa\u4e86PEATSE\uff0c\u8fd9\u662f\u4e00\u79cd\u7528\u4e8eWeb\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u7684\u65b0\u7684\u9690\u79c1\u4fdd\u62a4dAta\u4ea4\u6613\u6846\u67b6\u3002\u5b83\u8003\u8651\u4e86\u7528\u6237\u7684\u5404\u79cd\u9690\u79c1\u504f\u597d\u548c\u4ed6\u4eec\u7684Web\u6d4f\u89c8\u5386\u53f2\u8bb0\u5f55\u7684\u5b9e\u7528\u7a0b\u5e8f\u3002PEATSE\u5728\u5df2\u53d1\u5e03\u7684\u6d4f\u89c8\u8bb0\u5f55\u4e0a\u5e72\u6270\u7528\u6237\u7684\u8be6\u7ec6\u6d4f\u89c8\u65f6\u95f4\uff0c\u4ee5\u4fdd\u62a4\u7528\u6237\u9690\u79c1\uff0c\u540c\u65f6\u5e73\u8861\u9690\u79c1\u4e0e\u5b9e\u7528\u7a0b\u5e8f\u4e4b\u95f4\u7684\u6743\u8861\u3002\u901a\u8fc7\u57fa\u4e8e\u771f\u5b9e\u6570\u636e\u7684\u5b9e\u9a8c\uff0c\u6211\u4eec\u7684\u5206\u6790\u548c\u8bc4\u4f30\u7ed3\u679c\u8868\u660ePEATSE\u786e\u5b9e\u5b9e\u73b0\u4e86\u7528\u6237\u9690\u79c1\u4fdd\u62a4\uff0c\u6570\u636e\u6d88\u8d39\u8005\u7684\u51c6\u786e\u6027\u8981\u6c42\uff0c\u771f\u5b9e\u6027\uff0c\u4e2a\u4eba\u5408\u7406\u6027\u4ee5\u53ca\u9884\u7b97\u5e73\u8861\u3002 Mohammad Jahanian et al.: 2019. Name Space Analysis: Verification of Named Data Network Data Planes. In Proceedings of the 6th ACM Conference on Information-Centric Networking (ICN \u201919). Association for Computing Machinery, New York, NY, USA, 44\u201354. programmable data plane Named Data Network (NDN) has many forwarding behaviors, strategies and protocols proposed by researchers and integrated into the code base, so that it can take advantage of all the flexibility and functions provided by NDN. This paper proposes Name Space Analysis (NSA), a network verification framework for modeling and analyzing the NDN data plane. NSA can take one or more snapshots as input, and each snapshot represents a specific state of the data plane. Then, it provides verification results based on the specified attributes. NSA is based on the theory of header space analysis and has been extended in a variety of ways, such as supporting variable-size headers in a flexible format, introducing namespace functions, and allowing name-based attributes such as content Accessibility and name disclosure freedom. These important supplements reflect the behavior and requirements of NDN, and require that the modeling and verification foundation is fundamentally different from traditional host-centric networks. \u547d\u540d\u6570\u636e\u7f51\u7edc\uff08NDN\uff09\u5177\u6709\u8bb8\u591a\u7531\u7814\u7a76\u4eba\u5458\u63d0\u51fa\u5e76\u96c6\u6210\u5230\u4ee3\u7801\u5e93\u4e2d\u7684\u8f6c\u53d1\u884c\u4e3a\uff0c\u7b56\u7565\u548c\u534f\u8bae\uff0c\u4ece\u800c\u80fd\u591f\u5229\u7528NDN\u63d0\u4f9b\u7684\u5168\u90e8\u7075\u6d3b\u6027\u548c\u529f\u80fd\u3002\u672c\u6587\u63d0\u51fa\u4e86\u540d\u79f0\u7a7a\u95f4\u5206\u6790\uff08NSA\uff09\uff0c\u4e00\u79cd\u7528\u4e8e\u5bf9NDN\u6570\u636e\u5e73\u9762\u8fdb\u884c\u5efa\u6a21\u548c\u5206\u6790\u7684\u7f51\u7edc\u9a8c\u8bc1\u6846\u67b6\u3002NSA\u53ef\u4ee5\u5c06\u4e00\u4e2a\u6216\u591a\u4e2a\u5feb\u7167\u4f5c\u4e3a\u8f93\u5165\uff0c\u6bcf\u4e2a\u5feb\u7167\u4ee3\u8868\u6570\u636e\u5e73\u9762\u7684\u7279\u5b9a\u72b6\u6001\u3002\u7136\u540e\uff0c\u5b83\u6839\u636e\u6307\u5b9a\u7684\u5c5e\u6027\u63d0\u4f9b\u9a8c\u8bc1\u7ed3\u679c\u3002NSA\u5efa\u7acb\u5728\u6807\u5934\u7a7a\u95f4\u5206\u6790\u7406\u8bba\u7684\u57fa\u7840\u4e0a\uff0c\u5e76\u901a\u8fc7\u591a\u79cd\u65b9\u5f0f\u5bf9\u5176\u8fdb\u884c\u4e86\u6269\u5c55\uff0c\u4f8b\u5982\u4ee5\u7075\u6d3b\u7684\u683c\u5f0f\u652f\u6301\u53ef\u53d8\u5927\u5c0f\u7684\u6807\u5934\uff0c\u5f15\u5165\u540d\u79f0\u7a7a\u95f4\u529f\u80fd\uff0c\u5e76\u5141\u8bb8\u57fa\u4e8e\u540d\u79f0\u7684\u5c5e\u6027\uff0c\u4f8b\u5982\u5185\u5bb9\u53ef\u8bbf\u95ee\u6027\u548c\u540d\u79f0\u6cc4\u6f0f\u81ea\u7531\u3002\u8fd9\u4e9b\u91cd\u8981\u7684\u8865\u5145\u53cd\u6620\u4e86NDN\u7684\u884c\u4e3a\u548c\u8981\u6c42\uff0c\u8981\u6c42\u5efa\u6a21\u548c\u9a8c\u8bc1\u57fa\u7840\u4e0e\u4f20\u7edf\u7684\u4ee5\u4e3b\u673a\u4e3a\u4e2d\u5fc3\u7684\u7f51\u7edc\u6839\u672c\u4e0d\u540c\u3002 H. Xu et al.: \"Lightweight Flow Distribution for Collaborative Traffic Measurement in Software Defined Networks,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. flow entries In fine-grained flow measurement at the flow level, since TCAM-based flow entries only provide aggregated flow statistics, previous research suggests performing flow-level measurement in SRAM, and coordinated flow measurement to balance the measurement load on the entire network . The key issue of collaborative measurement is to provide a mechanism for distributing traffic to switches so that each switch can identify a subset of traffic to be measured. Previous work focused on optimizing the flow distribution between switches, but ignored the high space they introduced into the data plane and the overhead of packet processing, which became a serious problem in large-scale SDN systems. In this article, a new lightweight solution is proposed to solve the traffic distribution problem. It follows the design principle of reducing the complexity of the data plane by minimizing the data plane space and processing overhead. On the control plane, the traffic distribution is formulated as an optimization problem in two cases, and the two cases are respectively implemented through the edge switch and the edge/core switch to implement cooperative measurement. The simulation shows that, compared with the best existing work, the proposed lightweight solution achieves comparable performance in terms of load balancing, while greatly reducing the space overhead and the processing overhead of each data packet, making it practical The system is more practical and sensitive to the additional overhead caused by traffic distribution. \u6d41\u91cf\u7ea7\u522b\u7684\u7ec6\u7c92\u5ea6\u6d41\u91cf\u6d4b\u91cf\u4e2d\uff0c\u7531\u4e8e\u57fa\u4e8eTCAM\u7684\u6d41\u6761\u76ee\u4ec5\u63d0\u4f9b\u805a\u5408\u7684\u6d41\u91cf\u7edf\u8ba1\u4fe1\u606f\uff0c\u56e0\u6b64\u5148\u524d\u7684\u7814\u7a76\u5efa\u8bae\u5728SRAM\u4e2d\u6267\u884c\u6d41\u7ea7\u522b\u7684\u6d4b\u91cf\uff0c\u5e76\u901a\u8fc7\u534f\u4f5c\u6d41\u91cf\u6d4b\u91cf\u6765\u5e73\u8861\u6574\u4e2a\u7f51\u7edc\u4e0a\u7684\u6d4b\u91cf\u8d1f\u8f7d\u3002\u534f\u4f5c\u6d4b\u91cf\u7684\u5173\u952e\u95ee\u9898\u662f\u63d0\u4f9b\u4e00\u79cd\u5c06\u6d41\u91cf\u5206\u914d\u5230\u4ea4\u6362\u673a\u7684\u673a\u5236\uff0c\u4ee5\u4fbf\u6bcf\u4e2a\u4ea4\u6362\u673a\u90fd\u53ef\u4ee5\u6807\u8bc6\u8981\u6d4b\u91cf\u7684\u6d41\u91cf\u5b50\u96c6\u3002\u5148\u524d\u7684\u5de5\u4f5c\u96c6\u4e2d\u5728\u4f18\u5316\u4ea4\u6362\u673a\u4e4b\u95f4\u7684\u6d41\u5206\u914d\u4e0a\uff0c\u4f46\u662f\u5ffd\u7565\u4e86\u5b83\u4eec\u5f15\u5165\u6570\u636e\u5e73\u9762\u7684\u9ad8\u7a7a\u95f4\u548c\u6309\u6570\u636e\u5305\u5904\u7406\u7684\u5f00\u9500\uff0c\u8fd9\u5728\u5927\u578bSDN\u7cfb\u7edf\u4e2d\u6210\u4e3a\u4e00\u4e2a\u4e25\u91cd\u7684\u95ee\u9898\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8f7b\u91cf\u7ea7\u89e3\u51b3\u65b9\u6848\u6765\u89e3\u51b3\u6d41\u91cf\u5206\u914d\u95ee\u9898\u3002\u5b83\u9075\u5faa\u901a\u8fc7\u6700\u5c0f\u5316\u6570\u636e\u5e73\u9762\u7a7a\u95f4\u548c\u5904\u7406\u5f00\u9500\u6765\u51cf\u8f7b\u6570\u636e\u5e73\u9762\u590d\u6742\u6027\u7684\u8bbe\u8ba1\u539f\u7406\u3002\u5728\u63a7\u5236\u5e73\u9762\u4e0a\uff0c\u5c06\u6d41\u91cf\u5206\u914d\u516c\u5f0f\u5316\u4e3a\u4e24\u79cd\u60c5\u51b5\u4e0b\u7684\u4f18\u5316\u95ee\u9898\uff0c\u8fd9\u4e24\u79cd\u60c5\u51b5\u5206\u522b\u901a\u8fc7\u8fb9\u7f18\u4ea4\u6362\u673a\u548c\u8fb9\u7f18/\u6838\u5fc3\u4ea4\u6362\u673a\u4e00\u8d77\u5b9e\u65bd\u534f\u4f5c\u6d4b\u91cf\u3002\u4eff\u771f\u8868\u660e\uff0c\u4e0e\u73b0\u6709\u6700\u597d\u7684\u5de5\u4f5c\u76f8\u6bd4\uff0c\u6240\u63d0\u51fa\u7684\u8f7b\u91cf\u7ea7\u89e3\u51b3\u65b9\u6848\u5728\u8d1f\u8f7d\u5e73\u8861\u65b9\u9762\u8fbe\u5230\u4e86\u53ef\u6bd4\u7684\u6027\u80fd\uff0c\u540c\u65f6\u5927\u5927\u51cf\u5c11\u4e86\u7a7a\u95f4\u5f00\u9500\u548c\u6bcf\u4e2a\u6570\u636e\u5305\u7684\u5904\u7406\u5f00\u9500\uff0c\u4f7f\u5176\u5728\u5b9e\u9645\u7cfb\u7edf\u4e2d\u66f4\u52a0\u5b9e\u7528\uff0c\u5bf9\u6d41\u91cf\u5206\u914d\u6240\u5e26\u6765\u7684\u989d\u5916\u5f00\u9500\u5f88\u654f\u611f\u3002 W. Feng et al.: \"MEM: A Multi-Staged Eviction Mechanism of Flowtable for Software-Defined Datacenters,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 2020, pp. flow entries In a software-defined data center (SDDC), explosive and instantaneous short-lived flows severely reduce the utilization of flow table storage and the efficiency of packet forwarding in OpenFlow-enabled switches. This paper proposes a flow table multi-level expulsion mechanism (MEM) based on SDDC traffic characteristics, which includes classification, identification and expulsion stages. According to the persistent state of the flow and basic statistical information, the flow entries are classified twice. Then, a time series forecasting model called Auto Regression Moving Average (ARMA) is introduced to predict the future state of the flow entries in the next time period. Finally, the predicted flow entries that have not been used recently will be evicted to reduce the pressure on the flow table storage. \u5728\u8f6f\u4ef6\u5b9a\u4e49\u7684\u6570\u636e\u4e2d\u5fc3\uff08SDDC\uff09\u4e2d\uff0c\u7206\u70b8\u6027\u4e14\u77ac\u65f6\u7684\u77ed\u6682\u6d41\u4e25\u91cd\u964d\u4f4e\u4e86\u6d41\u8868\u5b58\u50a8\u7684\u5229\u7528\u7387\u4ee5\u53ca\u542f\u7528OpenFlow\u7684\u4ea4\u6362\u673a\u4e2d\u7684\u6570\u636e\u5305\u8f6c\u53d1\u6548\u7387\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eSDDC\u6d41\u91cf\u7279\u6027\u7684\u6d41\u8868\u591a\u7ea7\u9a71\u9010\u673a\u5236\uff08MEM\uff09\uff0c\u5176\u4e2d\u5305\u62ec\u5206\u7c7b\uff0c\u8bc6\u522b\u548c\u9a71\u9010\u9636\u6bb5\u3002\u6839\u636e\u6d41\u7684\u6301\u4e45\u72b6\u6001\u548c\u57fa\u672c\u7edf\u8ba1\u4fe1\u606f\u5bf9\u6d41\u6761\u76ee\u8fdb\u884c\u4e24\u6b21\u5206\u7c7b\u3002\u7136\u540e\uff0c\u5f15\u5165\u4e00\u4e2a\u79f0\u4e3a\u81ea\u52a8\u56de\u5f52\u79fb\u52a8\u5e73\u5747\u7ebf\uff08ARMA\uff09\u7684\u65f6\u95f4\u5e8f\u5217\u9884\u6d4b\u6a21\u578b\uff0c\u4ee5\u9884\u6d4b\u4e0b\u4e00\u4e2a\u65f6\u95f4\u6bb5\u5185\u6d41\u6761\u76ee\u7684\u672a\u6765\u72b6\u6001\u3002\u6700\u540e\uff0c\u9884\u6d4b\u51fa\u7684\u6700\u8fd1\u672a\u4f7f\u7528\u7684\u6d41\u6761\u76ee\u5c06\u88ab\u9a71\u9010\u4ee5\u51cf\u8f7b\u6d41\u8868\u5b58\u50a8\u4e0a\u7684\u538b\u529b\u3002 C. Zhang et al.: \"Admission control in software-defined datacenter network in view of flow table capacity,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Honolulu, HI, 2018, pp. The weak functions of SDN switches, such as flow table capacity, have brought challenges to the scalability of OpenFlow-based SDN. Considering the flow table capacity of the switch, the huge gap between the current flow table capacity and the number of flow entries required by the data center requires a novel admission control mechanism instead of only considering the link capacity as in traditional networks. In this paper, a controller-level admission control mechanism to solve this problem is proposed, and its effectiveness is evaluated based on numerical simulation results using a standardized three-tier data center topology. SDN\u4ea4\u6362\u673a\u7684\u529f\u80fd\u8584\u5f31\uff0c\u4f8b\u5982\u6d41\u8868\u5bb9\u91cf\uff0c\u7ed9\u57fa\u4e8eOpenFlow\u7684SDN\u7684\u53ef\u4f38\u7f29\u6027\u5e26\u6765\u4e86\u6311\u6218\u3002\u8003\u8651\u5230\u4ea4\u6362\u673a\u7684\u6d41\u8868\u5bb9\u91cf\uff0c\u5f53\u524d\u6d41\u8868\u5bb9\u91cf\u548c\u6570\u636e\u4e2d\u5fc3\u6240\u9700\u6d41\u6761\u76ee\u6570\u91cf\u4e4b\u95f4\u7684\u5de8\u5927\u5dee\u8ddd\u9700\u8981\u4e00\u79cd\u65b0\u9896\u7684\u63a5\u7eb3\u63a7\u5236\u673a\u5236\uff0c\u800c\u4e0d\u662f\u50cf\u4f20\u7edf\u7f51\u7edc\u90a3\u6837\u4ec5\u8003\u8651\u94fe\u8def\u5bb9\u91cf\u3002\u5728\u672c\u6587\u4e2d\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u89e3\u51b3\u6b64\u95ee\u9898\u7684\u63a7\u5236\u5668\u7ea7\u522b\u51c6\u5165\u63a7\u5236\u673a\u5236\uff0c\u5e76\u4f7f\u7528\u89c4\u8303\u7684\u4e09\u5c42\u6570\u636e\u4e2d\u5fc3\u62d3\u6251\u57fa\u4e8e\u6570\u503c\u6a21\u62df\u7ed3\u679c\u8bc4\u4f30\u4e86\u5176\u6709\u6548\u6027\u3002 K. Xie et al.: \"Efficiently Inferring Top-k Elephant Flows based on Discrete Tensor Completion,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. In applications such as congestion control, anomaly detection and traffic engineering, finding the top k elephant flows is a key task in network measurement. Due to scalability or sub-sampling of the data, incomplete measurement data cannot be used in the actual system to infer the first k elephant flows. Recent studies have shown that it is promising to use 3-D tensors to interpolate missing data more accurately than data based on 2-D matrices. Taking full advantage of the multi-linear structure, we apply tensor completion to first recover the lost data, and then find the first k elephant streams. This paper proposes a novel discrete tensor completion model that uses binary codes to represent factor matrices. Based on this model, three novel techniques are further proposed to accelerate the entire top-k stream inference process: discrete optimization algorithms to train binary factor matrices, and bit operations to facilitate rapid loss of data inference and simplify the process of top-k stream inference. k Elephant Stream has binary code partitions. In our discrete tensor completion model, only one bit is needed to represent the entries in the factor matrix, instead of the actual value (32 bits) required by the traditional tensor completion model, thus greatly reducing storage costs. \u5728\u62e5\u585e\u63a7\u5236\uff0c\u5f02\u5e38\u68c0\u6d4b\u548c\u6d41\u91cf\u5de5\u7a0b\u7b49\u5e94\u7528\u4e2d\uff0c\u67e5\u627e\u524dk\u4e2a\u5927\u8c61\u6d41\u662f\u7f51\u7edc\u6d4b\u91cf\u4e2d\u7684\u5173\u952e\u4efb\u52a1\u3002\u7531\u4e8e\u5bf9\u53ef\u4f38\u7f29\u6027\u6216\u6570\u636e\u8fdb\u884c\u4e86\u4e8c\u6b21\u91c7\u6837\u800c\u65e0\u6cd5\u5728\u5b9e\u9645\u7cfb\u7edf\u4e2d\u4f7f\u7528\u4e0d\u5b8c\u6574\u7684\u6d4b\u91cf\u6570\u636e\u6765\u63a8\u65ad\u524dk\u4e2a\u5927\u8c61\u6d41\u3002\u6700\u8fd1\u7684\u7814\u7a76\u8868\u660e\uff0c\u4e0e\u57fa\u4e8e2-D\u77e9\u9635\u7684\u6570\u636e\u76f8\u6bd4\uff0c\u4f7f\u75283-D\u5f20\u91cf\u66f4\u51c6\u786e\u5730\u63d2\u503c\u7f3a\u5931\u6570\u636e\u5f88\u6709\u5e0c\u671b\u3002\u5145\u5206\u5229\u7528\u591a\u7ebf\u6027\u7ed3\u6784\u7684\u4f18\u52bf\uff0c\u6211\u4eec\u5e94\u7528\u5f20\u91cf\u5b8c\u6210\u6765\u9996\u5148\u6062\u590d\u4e22\u5931\u7684\u6570\u636e\uff0c\u7136\u540e\u627e\u5230\u524dk\u4e2a\u5927\u8c61\u6d41\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u79bb\u6563\u5f20\u91cf\u5b8c\u6210\u6a21\u578b\uff0c\u8be5\u6a21\u578b\u4f7f\u7528\u4e8c\u8fdb\u5236\u4ee3\u7801\u6765\u8868\u793a\u56e0\u5b50\u77e9\u9635\u3002\u57fa\u4e8e\u8be5\u6a21\u578b\uff0c\u8fdb\u4e00\u6b65\u63d0\u51fa\u4e86\u4e09\u79cd\u65b0\u9896\u7684\u6280\u672f\u6765\u52a0\u901f\u6574\u4e2atop-k\u6d41\u63a8\u65ad\u8fc7\u7a0b\uff1a\u79bb\u6563\u4f18\u5316\u7b97\u6cd5\u4ee5\u8bad\u7ec3\u4e8c\u8fdb\u5236\u56e0\u5b50\u77e9\u9635\uff0c\u4f4d\u8fd0\u7b97\u4ee5\u4fc3\u8fdb\u5feb\u901f\u4e22\u5931\u6570\u636e\u63a8\u65ad\u4ee5\u53ca\u7b80\u5316top-k\u6d41\u63a8\u65ad\u7684\u8fc7\u7a0b\u3002 k\u5927\u8c61\u6d41\u5177\u6709\u4e8c\u8fdb\u5236\u4ee3\u7801\u5206\u533a\u3002\u5728\u6211\u4eec\u7684\u79bb\u6563\u5f20\u91cf\u5b8c\u6210\u6a21\u578b\u4e2d\uff0c\u53ea\u9700\u8981\u4e00\u4f4d\u6765\u8868\u793a\u56e0\u5b50\u77e9\u9635\u4e2d\u7684\u6761\u76ee\uff0c\u800c\u4e0d\u662f\u4f20\u7edf\u5f20\u91cf\u5b8c\u6210\u6a21\u578b\u6240\u9700\u7684\u5b9e\u9645\u503c\uff0832\u4f4d\uff09\uff0c\u56e0\u6b64\u5927\u5927\u964d\u4f4e\u4e86\u5b58\u50a8\u6210\u672c\u3002 G. Shen et al.: \"How Powerful Switches Should be Deployed: A Precise Estimation Based on Queuing Theory,\" IEEE INFOCOM 2019 - IEEE Conference on Computer Communications, Paris, France, 2019, pp. SDN has upgraded many traditional data center networks (DCN) to improve link utilization and management flexibility, but they lack the description of choosing alternative SDN switches with appropriate flow table space to achieve cost-effective and energy-efficient networks. This paper fills in the blank of solving the flow table space estimation problem based on queuing theory. First, the survival process of the flow table entries is divided into a packet process, a processing process and a service process to establish a queuing system to estimate the minimum number of SDN switch flow table entries. Second, analyze the flow distribution of DCN to calculate the key parameters in the model. Third, based on the nature of structured topology in DCN, we built a probability model of routing strategy to quantify the impact of path selection. SDN\u5bf9\u8bb8\u591a\u4f20\u7edf\u7684\u6570\u636e\u4e2d\u5fc3\u7f51\u7edc\uff08DCN\uff09\u8fdb\u884c\u4e86\u5347\u7ea7\uff0c\u4ee5\u63d0\u9ad8\u94fe\u8def\u5229\u7528\u7387\u548c\u7ba1\u7406\u7075\u6d3b\u6027\uff0c\u4f46\u662f\u5b83\u4eec\u7f3a\u4e4f\u9009\u62e9\u5177\u6709\u9002\u5f53\u6d41\u8868\u7a7a\u95f4\u7684\u4ee3\u7528SDN\u4ea4\u6362\u673a\u4ee5\u5b9e\u73b0\u5177\u6709\u6210\u672c\u6548\u76ca\u548c\u8282\u80fd\u7f51\u7edc\u7684\u8bf4\u660e\u3002\u672c\u6587\u586b\u8865\u4e86\u57fa\u4e8e\u6392\u961f\u8bba\u89e3\u51b3\u6d41\u8868\u7a7a\u95f4\u4f30\u8ba1\u95ee\u9898\u7684\u7a7a\u767d\u3002\u9996\u5148\uff0c\u5c06\u6d41\u8868\u6761\u76ee\u7684\u751f\u5b58\u8fc7\u7a0b\u5206\u4e3a\u5165\u5305\u8fc7\u7a0b\uff0c\u5904\u7406\u8fc7\u7a0b\u548c\u670d\u52a1\u8fc7\u7a0b\uff0c\u4ee5\u5efa\u7acb\u4e00\u4e2a\u6392\u961f\u7cfb\u7edf\uff0c\u4ee5\u4f30\u8ba1\u6700\u5c11\u6570\u91cf\u7684SDN\u4ea4\u6362\u673a\u6d41\u8868\u6761\u76ee\u3002\u7b2c\u4e8c\uff0c\u5206\u6790DCN\u7684\u6d41\u91cf\u5206\u5e03\uff0c\u4ee5\u8ba1\u7b97\u6a21\u578b\u4e2d\u7684\u5173\u952e\u53c2\u6570\u3002\u7b2c\u4e09\uff0c\u57fa\u4e8eDCN\u4e2d\u7ed3\u6784\u5316\u62d3\u6251\u7684\u672c\u8d28\uff0c\u6211\u4eec\u6784\u5efa\u4e86\u8def\u7531\u7b56\u7565\u7684\u6982\u7387\u6a21\u578b\uff0c\u4ee5\u91cf\u5316\u8def\u5f84\u9009\u62e9\u7684\u5f71\u54cd\u3002 X. Jia et al.: \"Link fault protection and traffic engineering in hybrid SDN networks,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Honolulu, HI, 2018, pp. In a hybrid network with SDN and non-SDN switches, the existing solutions for link failure protection require longer calculation time and higher configuration overhead. This article proposes a Hybrid-Hie solution to achieve fast rerouting and load balancing in hybrid SDN networks. Different from previous work, our solution pre-configures the allocation ratio on each backup path by predicting link utilization. Compared with existing solutions, our solution can 1) achieve effective failure recovery of inter-domain links, and 2) achieve better load balancing and recovery path expansion. \u5728\u5177\u6709SDN\u548c\u975eSDN\u4ea4\u6362\u673a\u7684\u6df7\u5408\u7f51\u7edc\u4e2d\uff0c\u73b0\u6709\u94fe\u8def\u6545\u969c\u4fdd\u62a4\u7684\u89e3\u51b3\u65b9\u6848\u9700\u8981\u8f83\u957f\u7684\u8ba1\u7b97\u65f6\u95f4\u548c\u8f83\u9ad8\u7684\u914d\u7f6e\u5f00\u9500\u3002\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cdHybrid-Hie\u89e3\u51b3\u65b9\u6848\uff0c\u4ee5\u5b9e\u73b0\u6df7\u5408SDN\u7f51\u7edc\u4e2d\u7684\u5feb\u901f\u91cd\u8def\u7531\u548c\u8d1f\u8f7d\u5e73\u8861\u3002\u4e0e\u4ee5\u524d\u7684\u5de5\u4f5c\u4e0d\u540c\uff0c\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u901a\u8fc7\u9884\u6d4b\u94fe\u63a5\u5229\u7528\u7387\u6765\u9884\u5148\u5728\u6bcf\u4e2a\u5907\u4efd\u8def\u5f84\u4e0a\u914d\u7f6e\u5206\u914d\u6bd4\u4f8b\u3002\u4e0e\u73b0\u6709\u89e3\u51b3\u65b9\u6848\u76f8\u6bd4\uff0c\u6211\u4eec\u7684\u89e3\u51b3\u65b9\u6848\u53ef\u4ee51\uff09\u5b9e\u73b0\u57df\u95f4\u94fe\u63a5\u7684\u6709\u6548\u6545\u969c\u6062\u590d\uff0c\u4ee5\u53ca2\uff09\u5b9e\u73b0\u66f4\u597d\u7684\u8d1f\u8f7d\u5e73\u8861\u548c\u6062\u590d\u8def\u5f84\u6269\u5c55\u3002 G. Zhao et al.: \"HiFi: Hybrid Rule Placement for Fine-Grained Flow Management in SDNs,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. In this paper, HiFi is designed and implemented, and the system can achieve fine-grained management with the least number of flow entries. To this end, HiFi uses a two-step approach: wildcard entry installation and application-specific exact matching entry installation. However, how to best install wildcards and exact match flow entries is tricky. Therefore, HiFi uses the approximate algorithm of bounded factors to solve these problems. And consider how to achieve network-wide load balancing through fine-grained traffic management in a case study. Both experimental and simulation results show that HiFi can reduce the number of required flow entries by about 45%-69% and control overhead by 28%-50% compared with the latest methods that achieve fine-grainedness. Stream management. \u5728\u672c\u6587\u4e2d\uff0c\u8bbe\u8ba1\u5e76\u5b9e\u73b0\u4e86HiFi\uff0c\u8be5\u7cfb\u7edf\u53ef\u901a\u8fc7\u6700\u5c11\u7684\u6d41\u6761\u76ee\u6570\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u7ba1\u7406\u3002\u4e3a\u6b64\uff0cHiFi\u91c7\u7528\u4e24\u6b65\u65b9\u6cd5\uff1a\u901a\u914d\u7b26\u6761\u76ee\u5b89\u88c5\u548c\u7279\u5b9a\u4e8e\u5e94\u7528\u7a0b\u5e8f\u7684\u7cbe\u786e\u5339\u914d\u6761\u76ee\u5b89\u88c5\u3002\u4f46\u662f\uff0c\u5982\u4f55\u6700\u4f73\u5730\u5b89\u88c5\u901a\u914d\u7b26\u548c\u5b8c\u5168\u5339\u914d\u6d41\u6761\u76ee\u662f\u5f88\u68d8\u624b\u7684\u3002\u56e0\u6b64\uff0cHiFi\u7528\u6709\u754c\u56e0\u7d20\u7684\u8fd1\u4f3c\u7b97\u6cd5\u6765\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002\u5e76\u4ee5\u6848\u4f8b\u7814\u7a76\u7684\u65b9\u5f0f\u8003\u8651\u5982\u4f55\u901a\u8fc7\u7ec6\u7c92\u5ea6\u7684\u6d41\u91cf\u7ba1\u7406\u5b9e\u73b0\u7f51\u7edc\u8303\u56f4\u7684\u8d1f\u8f7d\u5e73\u8861\u3002\u5b9e\u9a8c\u548c\u4eff\u771f\u7ed3\u679c\u5747\u8868\u660e\uff0c\u4e0e\u5b9e\u73b0\u7ec6\u7c92\u5ea6\u7684\u6700\u65b0\u65b9\u6cd5\u76f8\u6bd4\uff0cHiFi\u53ef\u4ee5\u5c06\u6240\u9700\u6d41\u6761\u76ee\u7684\u6570\u91cf\u51cf\u5c11\u7ea645\uff05-69\uff05\uff0c\u5e76\u5c06\u63a7\u5236\u5f00\u9500\u51cf\u5c1128\uff05-50\uff05\u3002\u6d41\u7ba1\u7406\u3002 S. Sun et al.: \"Detecting and Mitigating ARP Attacks in SDN-Based Cloud Environment,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications Workshops (INFOCOM WKSHPS), Toronto, ON, Canada, 2020, pp. Cloud computing networks require security, and protecting the cloud environment from various attacks has become a hot issue. In this article, SDN is applied to protect cloud computing networks from address resolution protocol (ARP) attacks. In the proposed method, the controller cluster will detect the ARP packets sent by the host in order to find the forger and prevent ARP spoofing attacks. In addition, the controller will monitor the statistics of ARP packets from time to time to detect ARP flood attacks. Once an attack is detected, the controller installs a flow entry on the corresponding switch to block the flow for a specific time. Experiments show that this method can be used to detect and mitigate ARP attacks in SDN-based cloud environments. \u4e91\u8ba1\u7b97\u7f51\u7edc\u975e\u5e38\u9700\u8981\u5b89\u5168\u6027\uff0c\u4fdd\u62a4\u4e91\u73af\u5883\u514d\u53d7\u5404\u79cd\u653b\u51fb\u5df2\u6210\u4e3a\u70ed\u95e8\u95ee\u9898\u3002\u672c\u6587\u4e2d\uff0c\u5c06SDN\u5e94\u7528\u4e8e\u4fdd\u62a4\u4e91\u8ba1\u7b97\u7f51\u7edc\u514d\u53d7\u5730\u5740\u89e3\u6790\u534f\u8bae\uff08ARP\uff09\u653b\u51fb\u3002\u5728\u5efa\u8bae\u7684\u65b9\u6cd5\u4e2d\uff0c\u63a7\u5236\u5668\u7fa4\u96c6\u4f1a\u68c0\u6d4b\u4e3b\u673a\u53d1\u9001\u7684ARP\u6570\u636e\u5305\uff0c\u4e3a\u4e86\u627e\u51fa\u4f2a\u9020\u8005\u5e76\u9632\u6b62ARP\u6b3a\u9a97\u653b\u51fb\u3002\u6b64\u5916\uff0c\u63a7\u5236\u5668\u4f1a\u4e0d\u65f6\u76d1\u89c6ARP\u6570\u636e\u5305\u7684\u7edf\u8ba1\u6570\u636e\uff0c\u4ee5\u68c0\u6d4bARP\u6cdb\u6d2a\u653b\u51fb\u3002\u4e00\u65e6\u68c0\u6d4b\u5230\u653b\u51fb\uff0c\u63a7\u5236\u5668\u5c31\u4f1a\u5728\u76f8\u5e94\u7684\u4ea4\u6362\u673a\u4e0a\u5b89\u88c5\u6d41\u6761\u76ee\uff0c\u4ee5\u5728\u7279\u5b9a\u65f6\u95f4\u5185\u963b\u6b62\u6d41\u3002\u5b9e\u9a8c\u8868\u660e\u6b64\u65b9\u6cd5\u53ef\u7528\u4e8e\u68c0\u6d4b\u548c\u7f13\u89e3\u57fa\u4e8eSDN\u7684\u4e91\u73af\u5883\u4e2d\u7684ARP\u653b\u51fb\u3002 C. He et al.: \"POMP: Protocol Oblivious SDN Programming with Automatic Multi-Table Pipelining,\" IEEE INFOCOM 2018 - IEEE Conference on Computer Communications, Honolulu, HI, 2018, pp. POMP, this is the first SDN programming environment that supports both protocol forgotten forwarding and automatic multi-meter pipeline operation. POMP uses static taint analysis technology to automatically infer compact and efficient multi-table pipelines from data plane agnostic network strategies written by programmers. The runtime system tracks the execution of network policies and automatically generates table entries. POMP also introduces a new dependency label concept in the taint analysis. This concept is combined with the runtime information of the network strategy to further reduce the number of entries. Like P4, POMP supports protocol-independent programming by providing a network protocol specification language. The packet parser can be automatically generated according to the protocol specification. POMP supports two major emerging SDN platforms POF and P4. Therefore, network policies written in POMP can be transplanted on any switch that supports POF or P4. The packet parser can be automatically generated according to the protocol specification. POMP\uff0c\u8fd9\u662f\u7b2c\u4e00\u4e2a\u540c\u65f6\u652f\u6301\u534f\u8bae\u9057\u5fd8\u8f6c\u53d1\u548c\u81ea\u52a8\u591a\u8868\u6d41\u6c34\u7ebf\u64cd\u4f5c\u7684SDN\u7f16\u7a0b\u73af\u5883\u3002POMP\u5e94\u7528\u9759\u6001\u6c61\u70b9\u5206\u6790\u6280\u672f\u4ece\u7a0b\u5e8f\u5458\u7f16\u5199\u7684\u6570\u636e\u5e73\u9762\u4e0d\u53ef\u77e5\u7f51\u7edc\u7b56\u7565\u81ea\u52a8\u63a8\u65ad\u7d27\u51d1\u9ad8\u6548\u7684\u591a\u8868\u7ba1\u9053\u3002\u8fd0\u884c\u65f6\u7cfb\u7edf\u8ddf\u8e2a\u7f51\u7edc\u7b56\u7565\u7684\u6267\u884c\uff0c\u5e76\u81ea\u52a8\u751f\u6210\u8868\u6761\u76ee\u3002POMP\u5728\u6c61\u70b9\u5206\u6790\u4e2d\u8fd8\u5f15\u5165\u4e86\u4e00\u79cd\u65b0\u7684\u4f9d\u8d56\u6807\u7b7e\u6982\u5ff5\uff0c\u8be5\u6982\u5ff5\u4e0e\u7f51\u7edc\u7b56\u7565\u7684\u8fd0\u884c\u65f6\u4fe1\u606f\u76f8\u7ed3\u5408\uff0c\u53ef\u4ee5\u8fdb\u4e00\u6b65\u51cf\u5c11\u8868\u9879\u7684\u6570\u91cf\u3002\u4e0eP4\u4e00\u6837\uff0cPOMP\u901a\u8fc7\u63d0\u4f9b\u7f51\u7edc\u534f\u8bae\u89c4\u8303\u8bed\u8a00\u6765\u652f\u6301\u534f\u8bae\u65e0\u5173\u7684\u7f16\u7a0b\u3002\u53ef\u4ee5\u6839\u636e\u534f\u8bae\u89c4\u8303\u81ea\u52a8\u751f\u6210\u6570\u636e\u5305\u89e3\u6790\u5668\u3002POMP\u652f\u6301\u4e24\u4e2a\u4e3b\u8981\u7684\u65b0\u5174SDN\u5e73\u53f0POF\u548cP4\uff0c\u56e0\u6b64\uff0c\u7528POMP\u7f16\u5199\u7684\u7f51\u7edc\u7b56\u7565\u53ef\u4ee5\u5728\u652f\u6301POF\u6216P4\u7684\u4efb\u4f55\u4ea4\u6362\u673a\u4e0a\u79fb\u690d\u3002\u53ef\u4ee5\u6839\u636e\u534f\u8bae\u89c4\u8303\u81ea\u52a8\u751f\u6210\u6570\u636e\u5305\u89e3\u6790\u5668\u3002 B. Zhao et al.: \"Efficient and Consistent TCAM Updates,\" IEEE INFOCOM 2020 - IEEE Conference on Computer Communications, Toronto, ON, Canada, 2020, pp. The dynamic nature of software-defined networks requires frequent updates of the flow table in the switch data plane. The existing off-the-shelf switches update the rules in batches to improve efficiency, but in the batch update process, the problem of inconsistent forwarding may be encountered. This paper designs and evaluates a TCAM update optimization framework that can ensure consistent forwarding during the entire update process while using a hierarchical TCAM structure. This method is based on the modified entry priority write-back strategy, which can significantly reduce the overhead caused by the movement of TCAM entries. It can also detect the reordering and use effective solutions to deal with it. \u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc\u7684\u52a8\u6001\u6027\u8d28\u8981\u6c42\u9891\u7e41\u66f4\u65b0\u4ea4\u6362\u673a\u6570\u636e\u5e73\u9762\u4e2d\u7684\u6d41\u8868\u3002\u73b0\u6709\u7684\u73b0\u6210\u4ea4\u6362\u673a\u6279\u91cf\u66f4\u65b0\u89c4\u5219\u4ee5\u63d0\u9ad8\u6548\u7387\uff0c\u4f46\u662f\u5728\u6279\u91cf\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4f1a\u9047\u5230\u8f6c\u53d1\u4e0d\u4e00\u81f4\u7684\u95ee\u9898\u3002\u672c\u6587\u8bbe\u8ba1\u548c\u8bc4\u4f30\u4e86\u4e00\u4e2aTCAM\u66f4\u65b0\u4f18\u5316\u6846\u67b6\uff0c\u8be5\u6846\u67b6\u53ef\u4ee5\u5728\u4f7f\u7528\u5206\u5c42TCAM\u7ed3\u6784\u7684\u540c\u65f6\u4fdd\u8bc1\u6574\u4e2a\u66f4\u65b0\u8fc7\u7a0b\u4e2d\u7684\u4e00\u81f4\u8f6c\u53d1\u3002\u6b64\u65b9\u6cd5\u57fa\u4e8e\u4fee\u6539\u540e\u7684\u6761\u76ee\u4f18\u5148\u5199\u56de\u7b56\u7565\uff0c\u8be5\u7b56\u7565\u53ef\u663e\u7740\u51cf\u5c11TCAM\u6761\u76ee\u79fb\u52a8\u5e26\u6765\u7684\u5f00\u9500\u3002\u8fd8\u53ef\u4ee5\u68c0\u6d4b\u5230\u91cd\u65b0\u6392\u5e8f\u7684\u60c5\u51b5\uff0c\u4f7f\u7528\u6709\u6548\u7684\u89e3\u51b3\u65b9\u6848\u8fdb\u884c\u5904\u7406\u3002","title":"Second Part"},{"location":"Third%20Part/","text":"Wendi Feng et al.: Enhancing Security with Programmable Data plane Enabled Hybrid SDN, ACM International Conference on Emerging Networking Experiments and Technologies.2019 In this paper, they propose Cl\u00e9, a programmable dataplane (PD) enabled hybrid SDN security enhancement solution. Cl\u00e9 consists of a smart algorithm to select LSes to upgrade, a unified controller that automatically \"attracts\" traffic to programmable SDN switches, and the security network functions combined PD that can directly detect and mitigate threats without degrading the performance. \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u53ef\u7f16\u7a0b\u6570\u636e\u901a\u9053(PD)\u7684\u6df7\u5408\u578b SDN \u5b89\u5168\u589e\u5f3a\u89e3\u51b3\u65b9\u6848 cl\u00e9\u3002Cl\u00e9 \u5305\u62ec\u4e00\u4e2a\u667a\u80fd\u7b97\u6cd5\u6765\u9009\u62e9\u8981\u5347\u7ea7\u7684 lse\uff0c\u4e00\u4e2a\u7edf\u4e00\u7684\u63a7\u5236\u5668\u81ea\u52a8\u201c\u5438\u5f15\u201d\u6d41\u91cf\u5230\u53ef\u7f16\u7a0b SDN \u4ea4\u6362\u673a\uff0c\u4ee5\u53ca\u5b89\u5168\u7f51\u7edc\u529f\u80fd\u7ed3\u5408 PD\uff0c\u53ef\u4ee5\u76f4\u63a5\u68c0\u6d4b\u548c\u51cf\u8f7b\u5a01\u80c1\uff0c\u800c\u4e0d\u4f1a\u964d\u4f4e\u6027\u80fd\u3002 Chanhee Lee et al.: A New Framework For Detecting Malicious SDN Applications. International Conference on Network Protocols.2018 In this paper, we propose a novel system, called Indago, which statically analyzes SDN applications to model their behavioral profiles, and finally, it automatically detects malicious SDN applications with a machine learning approach. \u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u540d\u4e3aIndago\u7684\u7cfb\u7edf,\u8be5\u7cfb\u7edf\u9759\u6001\u5206\u6790SDN\u5e94\u7528\u7a0b\u5e8f\u7684\u884c\u4e3a\u7279\u5f81,\u6700\u540e\u91c7\u7528\u673a\u5668\u5b66\u4e60\u7684\u65b9\u6cd5\u81ea\u52a8\u68c0\u6d4b\u6076\u610fSDN\u5e94\u7528 Cheng Zhang et al.: P4DB: On-the-fly Debugging of the Programmable Data Plane, International Conference on Network Protocols.2017 This paper is devoted to on-the-fly debugging of runtime bugs for programmable data planes. they propose P4DB, a general debugging platform that empowers operators to debug P4 programs in three levels of visibility with rich primitives. By P4DB, operators can use the watch primitive to quickly narrow the debugging scope from the network level or the device level to the table level, then use the break and next primitives to decompose match-action tables and finely locate bugs\u3002 \u672c\u6587\u81f4\u529b\u4e8e\u53ef\u7f16\u7a0b\u6570\u636e\u5e73\u9762\u8fd0\u884c\u65f6\u9519\u8bef\u7684\u52a8\u6001\u8c03\u8bd5\u3002\u4ed6\u4eec\u63d0\u51fa\u4e86P4DB\uff0c\u8fd9\u662f\u4e00\u4e2a\u901a\u7528\u7684\u8c03\u8bd5\u5e73\u53f0\uff0c\u5141\u8bb8\u64cd\u4f5c\u5458\u4f7f\u7528\u4e30\u5bcc\u7684\u539f\u8bed\u5728\u4e09\u4e2a\u53ef\u89c1\u6027\u7ea7\u522b\u4e0a\u8c03\u8bd5P4\u7a0b\u5e8f\u3002\u901a\u8fc7P4DB\uff0c\u64cd\u4f5c\u5458\u53ef\u4ee5\u4f7f\u7528WATCH\u539f\u8bed\u5feb\u901f\u5c06\u8c03\u8bd5\u8303\u56f4\u4ece\u7f51\u7edc\u7ea7\u6216\u8bbe\u5907\u7ea7\u7f29\u5c0f\u5230\u8868\u7ea7\uff0c\u7136\u540e\u4f7f\u7528Break\u548cNext\u539f\u8bed\u5206\u89e3\u5339\u914d\u64cd\u4f5c\u8868\u5e76\u7cbe\u786e\u5b9a\u4f4d\u9519\u8bef\u3002 Benjamin E. Ujcich et al.: Automated Discovery ofCross-Plane Event-Based Vulnerabilities in Software- Defined Networking. ISOC Network and Distributed System Security Symposium.2020 They present EVENTSCOPE, a vulnerability detection tool that automatically analyzes SDN control plane event usage, discovers candidate vulnerabilities based on missing event-handling routines, and validates vulnerabilities based on data plane effects. \u4ed6\u4eec\u4ecb\u7ecd\u4e86EVENTSCOPE\uff0c\u8fd9\u662f\u4e00\u4e2a\u6f0f\u6d1e\u68c0\u6d4b\u5de5\u5177\uff0c\u81ea\u52a8\u5206\u6790SDN\u63a7\u5236\u5e73\u9762\u4e8b\u4ef6\u4f7f\u7528\u60c5\u51b5\uff0c\u53d1\u73b0\u57fa\u4e8e\u4e22\u5931\u4e8b\u4ef6\u5904\u7406\u7a0b\u5e8f\u7684\u5019\u9009\u6f0f\u6d1e\u5e76\u6839\u636e\u6570\u636e\u5e73\u9762\u5f71\u54cd\u9a8c\u8bc1\u6f0f\u6d1e Menghao Zhang et al.: Poseidon: Mitigating Volumetric DDoS Attacks with Programmable Switches. ISOC Network and Distributed System Security Symposium.2020 In this paper, they propose POSEIDON, a system that addresses these limitations in today\u2019s DDoS defense. It leverages emerging programmable switches, which can be reconfigured in the field without additional hardware upgrade. Users of POSEIDON can specify their defense strategies in a modular fashion in the form of a set of defense primitives. \u5728\u8fd9\u7bc7\u8bba\u6587\u4e2d\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86Poseidon\uff0c\u8fd9\u662f\u4e00\u4e2a\u89e3\u51b3\u5f53\u4ecaDDoS\u9632\u5fa1\u4e2d\u8fd9\u4e9b\u5c40\u9650\u6027\u7684\u7cfb\u7edf\u3002\u5b83\u5229\u7528\u65b0\u5174\u7684\u53ef\u7f16\u7a0b\u4ea4\u6362\u673a\uff0c\u65e0\u9700\u989d\u5916\u7684\u786c\u4ef6\u5347\u7ea7\u5373\u53ef\u73b0\u573a\u91cd\u65b0\u914d\u7f6e\u3002Poseidon\u7684\u7528\u6237\u53ef\u4ee5\u4ee5\u4e00\u7ec4\u9632\u5fa1\u539f\u8bed\u7684\u5f62\u5f0f\u4ee5\u6a21\u5757\u5316\u65b9\u5f0f\u6307\u5b9a\u4ed6\u4eec\u7684\u9632\u5fa1\u7b56\u7565 Jiahao Cao et al.: When Match Fields Do Not Need to Match: Buffered Packets Hijacking in SDN, ISOC Network and Distributed System Security Symposium.2020 In this paper, they identify a new vulnerability on flow rule installation in SDN, namely, buffered packet hijacking, which can be exploited by malicious applications to launch effective attacks bypassing all existing defense systems. The root cause of this vulnerability lies in that SDN systems do not check the inconsistency between buffer IDs and match fields when an application attempts to install flow rules. Thus, a malicious application can manipulate buffer IDs to hijack buffered packets even though they do not match any installed flow rules\u3002 \u5728\u672c\u6587\u4e2d,\u6211\u4eec\u53d1\u73b0SDN\u4e2d\u7684\u6d41\u89c4\u5219\u5b89\u88c5\u5b58\u5728\u4e00\u4e2a\u65b0\u7684\u6f0f\u6d1e,\u5373\u7f13\u51b2\u5305\u52ab\u6301,\u5b83\u53ef\u4ee5\u88ab\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\u5229\u7528,\u4ece\u800c\u7ed5\u8fc7\u6240\u6709\u73b0\u6709\u7684\u9632\u5fa1\u7cfb\u7edf\u53d1\u8d77\u6709\u6548\u7684\u653b\u51fb\u3002\u9020\u6210\u6b64\u6f0f\u6d1e\u7684\u6839\u672c\u539f\u56e0\u5728\u4e8e\u5f53\u5e94\u7528\u7a0b\u5e8f\u8bd5\u56fe\u5b89\u88c5\u6d41\u89c4\u5219\u65f6,SDN\u7cfb\u7edf\u4e0d\u4f1a\u68c0\u67e5\u7f13\u51b2\u533aID\u548c\u5339\u914d\u5b57\u6bb5\u4e4b\u95f4\u7684\u4e0d\u4e00\u81f4\u6027\u3002\u56e0\u6b64,\u6076\u610f\u5e94\u7528\u7a0b\u5e8f\u53ef\u4ee5\u64cd\u7eb5\u7f13\u51b2\u533aID\u6765\u52ab\u6301\u7f13\u51b2\u6570\u636e\u5305,\u5373\u4f7f\u5b83\u4eec\u4e0d\u5339\u914d\u4efb\u4f55\u5df2\u5b89\u88c5\u7684\u6d41\u89c4\u5219\u3002 Qiao Kang et al.: Programmable In-Network Security for Context-aware BYOD Policies. Usenix Security Symposium.2020 They present a new paradigm, programmable in-network security (Poise), which is enabled by the emergence of programmable switches. At the heart of Poise is a novel security primitive, which can be programmed to support a wide range of context-aware policies in hardware. Users of Poise specify concise policies, and Poise compiles them into different configurations of the primitive in P4. Compared with traditional SDN defenses, Poise is resilient to control plane saturation attacks, and it dramatically increases defense agility. \u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u8303\u4f8b\uff0c\u7f51\u7edc\u5185\u53ef\u7f16\u7a0b\u5b89\u5168(Poise) \uff0c\u5b83\u662f\u7531\u53ef\u7f16\u7a0b\u4ea4\u6362\u5668\u7684\u51fa\u73b0\u800c\u5b9e\u73b0\u7684\u3002Poise \u7684\u6838\u5fc3\u662f\u4e00\u4e2a\u65b0\u9896\u7684\u5b89\u5168\u539f\u8bed\uff0c\u53ef\u4ee5\u901a\u8fc7\u7f16\u7a0b\u6765\u652f\u6301\u5404\u79cd\u786c\u4ef6\u4e0a\u4e0b\u6587\u611f\u77e5\u7b56\u7565\u3002Poise \u7684\u7528\u6237\u6307\u5b9a\u7b80\u660e\u7684\u7b56\u7565\uff0c\u5e76\u5c06\u5b83\u4eec\u7f16\u8bd1\u6210 P4\u4e2d\u539f\u8bed\u7684\u4e0d\u540c\u914d\u7f6e\u3002\u4e0e\u4f20\u7edf\u7684 SDN \u9632\u5fa1\u7cfb\u7edf\u76f8\u6bd4\uff0c\u201c\u6cf0\u8861\u201d\u5177\u6709\u8f83\u5f3a\u7684\u6297\u9971\u548c\u653b\u51fb\u80fd\u529b\uff0c\u5e76\u663e\u8457\u63d0\u9ad8\u4e86\u9632\u5fa1\u7075\u6d3b\u6027\u3002 Jiahao Cao et al.\uff1aThe CrossPath Attack: Disrupting the SDN Control Channel via Shared Links CrossPath. Usenix Security Symposium.2019 For the first time in the literature, they propose the CrossPath attack that disrupts the SDN control channel by exploiting the shared links in paths of control traffic and data traffic. In this attack, crafted data traffic can implicitly disrupt the forwarding of control traffic in the shared links \u5728\u6587\u732e\u4e2d\uff0c\u4ed6\u4eec\u9996\u6b21\u63d0\u51fa\u4e86\u901a\u8fc7\u5229\u7528\u63a7\u5236\u6d41\u91cf\u548c\u6570\u636e\u6d41\u91cf\u8def\u5f84\u4e2d\u7684\u5171\u4eab\u94fe\u8def\u6765\u5e72\u6270 SDN \u63a7\u5236\u4fe1\u9053\u7684\u4ea4\u53c9\u8def\u5f84\u653b\u51fb\u3002\u5728\u8fd9\u79cd\u653b\u51fb\u4e2d\uff0c\u7cbe\u5fc3\u5236\u4f5c\u7684\u6570\u636e\u6d41\u53ef\u80fd\u4f1a\u9690\u5f0f\u7834\u574f\u5171\u4eab\u94fe\u8def\u4e2d\u63a7\u5236\u6d41\u91cf\u7684\u8f6c\u53d1 Taejune et al.: DPX: Data-Plane eXtensions for SDN Security Service Instantiation. Detection of Intrusions and Malware & Vulnerability Assessment.2019 they propose a new SDN-based data plane architecture called DPX that natively supports security services as a set of abstract security actions that are then translated to OpenFlow rule sets\u3002 \u4ed6\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u57fa\u4e8eSDN\u7684\u6570\u636e\u5e73\u9762\u67b6\u6784\uff0c\u79f0\u4e3aDPX\uff0c\u5b83\u5c06\u5b89\u5168\u670d\u52a1\u4f5c\u4e3a\u4e00\u7ec4\u62bd\u8c61\u7684\u5b89\u5168\u64cd\u4f5c\u8fdb\u884c\u539f\u751f\u652f\u6301\uff0c\u7136\u540e\u5c06\u8fd9\u4e9b\u62bd\u8c61\u7684\u5b89\u5168\u64cd\u4f5c\u8f6c\u6362\u4e3aOpenFlow\u89c4\u5219\u96c6\u3002 Steven R. Gomez et al.: Controller-Oblivious Dynamic Access Control in Software-Defined Networks. The International Conference on Dependable Systems and Networks.2019 Conventional network access control approaches are static.Such systems are unable to meaningfully stop or hinder motivated attackers seeking to spread throughout an enterprise network. To address this threat, they present Dynamic Flow Isolation (DFI), a novel architecture for supporting dynamic, fine-grained access control policies enforced in a Software-Defined Network (SDN). \u4f20\u7edf\u7684\u7f51\u7edc\u8bbf\u95ee\u63a7\u5236\u65b9\u6cd5\u662f\u9759\u6001\u7684\uff0c\u8fd9\u6837\u7684\u7cfb\u7edf\u4e0d\u80fd\u6709\u6548\u5730\u963b\u6b62\u6216\u963b\u6b62\u4f01\u56fe\u5728\u6574\u4e2a\u4f01\u4e1a\u7f51\u7edc\u4e2d\u4f20\u64ad\u7684\u6709\u52a8\u673a\u7684\u653b\u51fb\u8005\u3002\u4e3a\u4e86\u5e94\u5bf9\u8fd9\u4e00\u5a01\u80c1\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u52a8\u6001\u6d41\u9694\u79bb(DFI)\uff0c\u8fd9\u662f\u4e00\u79cd\u65b0\u7684\u4f53\u7cfb\u7ed3\u6784\uff0c\u7528\u4e8e\u652f\u6301\u5728\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(SDN)\u4e2d\u5b9e\u65bd\u7684\u52a8\u6001\u3001\u7ec6\u7c92\u5ea6\u8bbf\u95ee\u63a7\u5236\u7b56\u7565\u3002 Richard Skowyra et al.: Effective Topology Tampering Attacks and Defenses in Software-Defined Networks. The International Conference on Dependable Systems and Networks.2018 As Software-Defined Networking has gained increasing prominence, new attacks have been demonstrated which can corrupt the SDN controller's view of network topology.In this paper, we analyze two such defenses, TopoGuard and Sphinx, and present two new attacks, Port Probing and Port Amnesia, that can successfully bypass them. We then develop and present extensions to TopoGuard to make it resilient to such attacks. \u968f\u7740\u8f6f\u4ef6\u5b9a\u4e49\u7f51\u7edc(Software-Defined Networking)\u7684\u65e5\u76ca\u7a81\u51fa\uff0c\u51fa\u73b0\u4e86\u7834\u574fSDN\u63a7\u5236\u5668\u7f51\u7edc\u62d3\u6251\u89c6\u56fe\u7684\u65b0\u653b\u51fb\uff0c\u672c\u6587\u5206\u6790\u4e86TopGuard\u548cSphinx\u8fd9\u4e24\u79cd\u9632\u5fa1\u65b9\u5f0f\uff0c\u63d0\u51fa\u4e86\u4e24\u79cd\u53ef\u4ee5\u6210\u529f\u7ed5\u8fc7\u5b83\u4eec\u7684\u65b0\u653b\u51fb\u65b9\u5f0f\uff0c\u5373\u7aef\u53e3\u63a2\u6d4b\u653b\u51fb\u548c\u7aef\u53e3\u5931\u5fc6\u653b\u51fb\u3002\u7136\u540e\uff0c\u6211\u4eec\u5f00\u53d1\u5e76\u63d0\u4f9b\u5bf9TopGuard\u7684\u6269\u5c55\uff0c\u4ee5\u4f7f\u5176\u5bf9\u6b64\u7c7b\u653b\u51fb\u5177\u6709\u5f39\u6027 Amir Alimohammadifar et al.: Stealthy Probing-Based Verification (SPV): An Active Approach to Defending Software Defined Networks Against Topology Poisoning Attacks. European Symposium on Research in Computer Security.2018 rcently discovered vulnerabilities in OpenFlow Discovery Protocol (OFDP) show that malicious hosts and switches can poison the network view of the SDN controller and consequently lead to more severe security attacks, such as man-in-the-middle or denial of service. Existing solutions mostly rely on passive techniques, which only work for known attacking methods. In this paper, we propose a novel stealthy probing-based verification approach, namely, SPV, to detect fake links regardless of the attacking methods used to fabricate them. \u6700\u8fd1\u53d1\u73b0\u7684OpenFlow\u53d1\u73b0\u534f\u8bae(OFDP)\u4e2d\u7684\u6f0f\u6d1e\u8868\u660e,\u6076\u610f\u4e3b\u673a\u548c\u4ea4\u6362\u673a\u4f1a\u6bd2\u5bb3SDN\u63a7\u5236\u5668\u7684\u7f51\u7edc\u89c6\u56fe,\u4ece\u800c\u5bfc\u81f4\u66f4\u4e25\u91cd\u7684\u5b89\u5168\u653b\u51fb,\u5982\u4e2d\u95f4\u4eba\u6216\u62d2\u7edd\u670d\u52a1\u3002\u73b0\u6709\u7684\u89e3\u51b3\u65b9\u6848\u5927\u591a\u4f9d\u9760\u88ab\u52a8\u6280\u672f,\u800c\u88ab\u52a8\u6280\u672f\u53ea\u9002\u7528\u4e8e\u5df2\u77e5\u7684\u653b\u51fb\u65b9\u6cd5\u3002\u5728\u672c\u6587\u4e2d,\u6211\u4eec\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u57fa\u4e8e\u9690\u8eab\u63a2\u6d4b\u7684\u9a8c\u8bc1\u65b9\u6cd5\uff0c\u5373SPV\uff0c\u7528\u4e8e\u68c0\u6d4b\u5047\u94fe\u8def\uff0c\u800c\u4e0d\u8003\u8651\u7528\u6765\u5236\u9020\u5047\u94fe\u8def\u7684\u653b\u51fb\u65b9\u6cd5 Nicolae Paladi et al.: Trust Anchors in Software Defined Networks. European Symposium on Research in Computer Security.2018 Often, software network elements are either themselves vulnerable to software attacks or can be compromised through the bloated trusted computing base. To address this, we protect the core security assets of network elements - authentication credentials and cryptographic context - by provisioning them to and maintaining them exclusively in isolated execution environments \u901a\u5e38\uff0c\u8f6f\u4ef6\u7f51\u5143\u672c\u8eab\u8981\u4e48\u5bb9\u6613\u53d7\u5230\u8f6f\u4ef6\u653b\u51fb\uff0c\u8981\u4e48\u4f1a\u901a\u8fc7\u81c3\u80bf\u7684\u53ef\u4fe1\u8ba1\u7b97\u57fa\u7840\u53d7\u5230\u5a01\u80c1\u3002\u4e3a\u4e86\u89e3\u51b3\u8fd9\u4e00\u95ee\u9898\uff0c\u6211\u4eec\u4fdd\u62a4\u7f51\u7edc\u5143\u7d20\u7684\u6838\u5fc3\u5b89\u5168\u8d44\u4ea7(\u8eab\u4efd\u9a8c\u8bc1\u51ed\u636e\u548c\u52a0\u5bc6\u4e0a\u4e0b\u6587)\uff0c\u65b9\u6cd5\u662f\u5c06\u5b83\u4eec\u914d\u7f6e\u5230\u9694\u79bb\u6267\u884c\u73af\u5883\u4e2d\u5e76\u4ee5\u72ec\u5360\u65b9\u5f0f\u8fdb\u884c\u7ef4\u62a4 Kallol Krishna Karmakar et al.: Towards a Dynamic Policy Enhanced Integrated Security Architecture for SDN Infrastructure. IFIP/IEEE International Symposium on Integrated Network Management.2020 This paper focuses on the design and implementation of an integrated security architecture for SDN based enterprise networks. The integrated security architecture uses a policy-based approach to coordinate different security mechanisms to detect and counteract a range of security attacks in the SDN \u672c\u6587\u91cd\u70b9\u7814\u7a76\u4e86\u4e00\u79cd\u57fa\u4e8eSDN\u7684\u4f01\u4e1a\u7f51\u7edc\u7efc\u5408\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u7684\u8bbe\u8ba1\u4e0e\u5b9e\u73b0\u3002\u96c6\u6210\u5b89\u5168\u4f53\u7cfb\u7ed3\u6784\u4f7f\u7528\u57fa\u4e8e\u7b56\u7565\u7684\u65b9\u6cd5\u6765\u534f\u8c03\u4e0d\u540c\u7684\u5b89\u5168\u673a\u5236\uff0c\u4ee5\u68c0\u6d4b\u548c\u5bf9\u6297SDN\u4e2d\u7684\u4e00\u7cfb\u5217\u5b89\u5168\u653b\u51fb Iman Akbari et al.: ATMoS: Autonomous Threat Mitigation in SDN using Reinforcement Learning. IFIP/IEEE International Symposium on Integrated Network Management.2020 In this paper, we propose ATMoS, a general framework designed to facilitate the rapid design of RL applications for network security management using SDN. We evaluate our framework for implementing RL applications for threat mitigation, by showcasing the use of ATMoS with a Neural Fitted Q-learning agent to mitigate an Advanced Persistent Threat. \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u63d0\u51fa\u4e86Atmos\uff0c\u8fd9\u662f\u4e00\u4e2a\u901a\u7528\u6846\u67b6\uff0c\u65e8\u5728\u4fc3\u8fdb\u4f7f\u7528SDN\u5feb\u901f\u8bbe\u8ba1\u7528\u4e8e\u7f51\u7edc\u5b89\u5168\u7ba1\u7406\u7684RL\u5e94\u7528\u7a0b\u5e8f\u3002\u6211\u4eec\u901a\u8fc7\u5c55\u793aAtmos\u4e0e\u795e\u7ecf\u9002\u914dQ-Learning\u4ee3\u7406\u7684\u4f7f\u7528\u6765\u7f13\u89e3\u9ad8\u7ea7\u6301\u7eed\u6027\u5a01\u80c1\uff0c\u6765\u8bc4\u4f30\u6211\u4eec\u5b9e\u65bdRL\u5e94\u7528\u7a0b\u5e8f\u4ee5\u7f13\u89e3\u5a01\u80c1\u7684\u6846\u67b6 \u00c2ngelo Cardoso Lapolli et al.: Offloading Real-time DDoS Attack Detection to Programmable Data Planes. FIP/IEEE International Symposium on Integrated Network Management.2019 In recent years, Distributed Denial-of-Service (DDoS) attacks have escalated both in frequency and traffic volume, with outbreaks reaching rates up to the order of terabits per second and compromising the availability of supposedly highly resilient infrastructure, Data plane programmability has emerged as a promising approach to help meeting these requirements as forwarding devices can be configured to execute algorithms and examine traffic at line rate. In this paper, we explore P4 primitives to design a fine-grained, low-footprint, and low-latency traffic inspection mechanism for real-time DDoS attack detection \u8fd1\u5e74\u6765\uff0c\u5206\u5e03\u5f0f\u62d2\u7edd\u670d\u52a1(DDoS)\u653b\u51fb\u5728\u9891\u7387\u548c\u901a\u4fe1\u91cf\u4e0a\u90fd\u4e0d\u65ad\u5347\u7ea7\uff0c\u7206\u53d1\u901f\u7387\u9ad8\u8fbe\u6bcf\u79d2\u6bd4\u7279\u6570\u91cf\u7ea7\uff0c\u5e76\u5371\u53ca\u672c\u5e94\u5177\u6709\u9ad8\u5ea6\u5f39\u6027\u7684\u57fa\u7840\u8bbe\u65bd\u7684\u53ef\u7528\u6027\uff0c\u6570\u636e\u5e73\u9762\u53ef\u7f16\u7a0b\u6027\u5df2\u6210\u4e3a\u5e2e\u52a9\u6ee1\u8db3\u8fd9\u4e9b\u8981\u6c42\u7684\u4e00\u79cd\u5f88\u6709\u524d\u9014\u7684\u65b9\u6cd5\uff0c\u56e0\u4e3a\u8f6c\u53d1\u8bbe\u5907\u53ef\u4ee5\u914d\u7f6e\u4e3a\u4ee5\u7ebf\u901f\u6267\u884c\u7b97\u6cd5\u548c\u68c0\u67e5\u6d41\u91cf\u3002\u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5229\u7528P4\u539f\u8bed\u6765\u8bbe\u8ba1\u4e00\u79cd\u7ec6\u7c92\u5ea6\u3001\u4f4e\u5360\u7528\u7a7a\u95f4\u3001\u4f4e\u5ef6\u8fdf\u7684\u6d41\u91cf\u68c0\u6d4b\u673a\u5236\uff0c\u7528\u4e8e\u5b9e\u65f6\u68c0\u6d4bDDoS\u653b\u51fb Jiahao Cao et al.: Fingerprinting SDN Applications via Encrypted Control Traffic. International Symposium on Recent Advances in Intrusion Detection.2019 In this paper, we show an adversary can infer what applications run on SDN controllers by analyzing low-level and encrypted control traffic. Such information can help an adversary to identify valuable targets, know the possible presence of network defense, and thus schedule a better plan for a later stage of an attack \u5728\u672c\u6587\u4e2d\uff0c\u6211\u4eec\u5c55\u793a\u4e86\u653b\u51fb\u8005\u53ef\u4ee5\u901a\u8fc7\u5206\u6790\u4f4e\u7ea7\u548c\u52a0\u5bc6\u7684\u63a7\u5236\u6d41\u91cf\u6765\u63a8\u65ad\u54ea\u4e9b\u5e94\u7528\u7a0b\u5e8f\u5728SDN\u63a7\u5236\u5668\u4e0a\u8fd0\u884c\u3002\u8fd9\u6837\u7684\u4fe1\u606f\u53ef\u4ee5\u5e2e\u52a9\u5bf9\u624b\u8bc6\u522b\u6709\u4ef7\u503c\u7684\u76ee\u6807\uff0c\u4e86\u89e3\u53ef\u80fd\u5b58\u5728\u7684\u7f51\u7edc\u9632\u5fa1\uff0c\u4ece\u800c\u4e3a\u653b\u51fb\u7684\u540e\u671f\u9636\u6bb5\u5236\u5b9a\u66f4\u597d\u7684\u8ba1\u5212 Menghao et al.: Control Plane Reflection Attacks in SDNs: New Attacks and Countermeasures. International Symposium on Recent Advances in Intrusion Detection.2019 In this paper, they present Control Plane Reflection Attacks to exploit the limited processing capability of SDN-enabled hardware switches. Moreover, we propose a two-phase probing-triggering attack strategy to make the reflection attacks much more efficient, stealthy and powerful. \u5728\u672c\u6587\u4e2d\uff0c\u4ed6\u4eec\u63d0\u51fa\u4e86\u63a7\u5236\u5e73\u9762\u53cd\u5c04\u653b\u51fb\uff0c\u4ee5\u5229\u7528\u652f\u6301SDN\u7684\u786c\u4ef6\u4ea4\u6362\u673a\u6709\u9650\u7684\u5904\u7406\u80fd\u529b\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u63d0\u51fa\u4e86\u4e00\u79cd\u4e24\u9636\u6bb5\u63a2\u6d4b-\u89e6\u53d1\u653b\u51fb\u7b56\u7565\uff0c\u4f7f\u53cd\u5c04\u653b\u51fb\u66f4\u52a0\u9ad8\u6548\u3001\u9690\u853d\u548c\u5f3a\u5927\u3002","title":"Third Part"}]}